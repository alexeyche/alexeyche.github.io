{"version":3,"file":"index-BsHIpCK9.js","sources":["../../node_modules/ol/CollectionEventType.js","../../node_modules/ol/ObjectEventType.js","../../node_modules/ol/events/EventType.js","../../node_modules/ol/Disposable.js","../../node_modules/ol/array.js","../../node_modules/ol/functions.js","../../node_modules/ol/obj.js","../../node_modules/ol/events/Event.js","../../node_modules/ol/events/Target.js","../../node_modules/ol/events.js","../../node_modules/ol/Observable.js","../../node_modules/ol/util.js","../../node_modules/ol/Object.js","../../node_modules/ol/Collection.js","../../node_modules/ol/MapEvent.js","../../node_modules/ol/MapBrowserEvent.js","../../node_modules/ol/MapBrowserEventType.js","../../node_modules/ol/has.js","../../node_modules/ol/pointer/EventType.js","../../node_modules/ol/MapBrowserEventHandler.js","../../node_modules/ol/MapEventType.js","../../node_modules/ol/MapProperty.js","../../node_modules/ol/TileState.js","../../node_modules/ol/asserts.js","../../node_modules/ol/structs/PriorityQueue.js","../../node_modules/ol/TileQueue.js","../../node_modules/ol/ViewHint.js","../../node_modules/ol/ViewProperty.js","../../node_modules/ol/math.js","../../node_modules/ol/centerconstraint.js","../../node_modules/ol/extent/Relationship.js","../../node_modules/ol/extent.js","../../node_modules/ol/coordinate.js","../../node_modules/ol/easing.js","../../node_modules/ol/sphere.js","../../node_modules/ol/console.js","../../node_modules/ol/proj/Units.js","../../node_modules/ol/proj/Projection.js","../../node_modules/ol/proj/epsg3857.js","../../node_modules/ol/proj/epsg4326.js","../../node_modules/ol/proj/projections.js","../../node_modules/ol/proj/transforms.js","../../node_modules/ol/proj/utm.js","../../node_modules/ol/proj.js","../../node_modules/ol/transform.js","../../node_modules/ol/geom/flat/transform.js","../../node_modules/ol/geom/Geometry.js","../../node_modules/ol/geom/SimpleGeometry.js","../../node_modules/ol/geom/flat/area.js","../../node_modules/ol/geom/flat/closest.js","../../node_modules/ol/geom/flat/deflate.js","../../node_modules/ol/geom/flat/inflate.js","../../node_modules/ol/geom/flat/simplify.js","../../node_modules/ol/geom/LinearRing.js","../../node_modules/ol/geom/Point.js","../../node_modules/ol/geom/flat/contains.js","../../node_modules/ol/geom/flat/interiorpoint.js","../../node_modules/ol/geom/flat/segments.js","../../node_modules/ol/geom/flat/intersectsextent.js","../../node_modules/ol/geom/flat/reverse.js","../../node_modules/ol/geom/flat/orient.js","../../node_modules/ol/geom/Polygon.js","../../node_modules/ol/resolutionconstraint.js","../../node_modules/ol/rotationconstraint.js","../../node_modules/ol/tilegrid/common.js","../../node_modules/ol/View.js","../../node_modules/ol/css.js","../../node_modules/ol/dom.js","../../node_modules/ol/control/Control.js","../../node_modules/ol/control/Attribution.js","../../node_modules/ol/control/Rotate.js","../../node_modules/ol/control/Zoom.js","../../node_modules/ol/Kinetic.js","../../node_modules/ol/interaction/Property.js","../../node_modules/ol/interaction/Interaction.js","../../node_modules/ol/interaction/DoubleClickZoom.js","../../node_modules/ol/events/condition.js","../../node_modules/ol/interaction/Pointer.js","../../node_modules/ol/interaction/DragPan.js","../../node_modules/ol/interaction/DragRotate.js","../../node_modules/ol/render/Box.js","../../node_modules/ol/interaction/DragBox.js","../../node_modules/ol/interaction/DragZoom.js","../../node_modules/ol/events/Key.js","../../node_modules/ol/interaction/KeyboardPan.js","../../node_modules/ol/interaction/KeyboardZoom.js","../../node_modules/ol/interaction/MouseWheelZoom.js","../../node_modules/ol/interaction/PinchRotate.js","../../node_modules/ol/interaction/PinchZoom.js","../../node_modules/ol/layer/Property.js","../../node_modules/ol/layer/Base.js","../../node_modules/ol/layer/Group.js","../../node_modules/ol/render/EventType.js","../../node_modules/ol/layer/Layer.js","../../node_modules/quickselect/index.js","../../node_modules/rbush/index.js","../../node_modules/ol/color.js","../../node_modules/ol/size.js","../../node_modules/ol/expr/expression.js","../../node_modules/ol/expr/cpu.js","../../node_modules/ol/ImageState.js","../../node_modules/ol/Image.js","../../node_modules/ol/style/IconImageCache.js","../../node_modules/ol/style/IconImage.js","../../node_modules/ol/colorlike.js","../../node_modules/ol/render/canvas.js","../../node_modules/ol/style/Image.js","../../node_modules/ol/style/RegularShape.js","../../node_modules/ol/style/Circle.js","../../node_modules/ol/style/Fill.js","../../node_modules/ol/style/Icon.js","../../node_modules/ol/style/Stroke.js","../../node_modules/ol/style/Style.js","../../node_modules/ol/style/Text.js","../../node_modules/ol/render/canvas/style.js","../../node_modules/ol/layer/BaseVector.js","../../node_modules/ol/render/Event.js","../../node_modules/ol/renderer/Map.js","../../node_modules/ol/renderer/Composite.js","../../node_modules/ol/Map.js","../../node_modules/ol/render/canvas/ZIndexContext.js","../../node_modules/ol/renderer/Layer.js","../../node_modules/ol/renderer/canvas/Layer.js","../../node_modules/ol/renderer/canvas/ImageLayer.js","../../node_modules/ol/layer/BaseImage.js","../../node_modules/ol/layer/Image.js","../../node_modules/ol/Tile.js","../../node_modules/ol/DataTile.js","../../node_modules/ol/ImageTile.js","../../node_modules/ol/TileRange.js","../../node_modules/ol/reproj.js","../../node_modules/ol/reproj/Triangulation.js","../../node_modules/ol/reproj/Tile.js","../../node_modules/ol/reproj/common.js","../../node_modules/ol/structs/LRUCache.js","../../node_modules/ol/tilecoord.js","../../node_modules/ol/renderer/canvas/TileLayer.js","../../node_modules/ol/layer/TileProperty.js","../../node_modules/ol/layer/BaseTile.js","../../node_modules/ol/layer/Tile.js","../../node_modules/ol/render/VectorContext.js","../../node_modules/ol/render/canvas/Instruction.js","../../node_modules/ol/render/canvas/Builder.js","../../node_modules/ol/render/canvas/PolygonBuilder.js","../../node_modules/ol/geom/flat/linechunk.js","../../node_modules/ol/geom/flat/straightchunk.js","../../node_modules/ol/render/canvas/TextBuilder.js","../../node_modules/ol/render/canvas/BuilderGroup.js","../../node_modules/ol/render/canvas/ImageBuilder.js","../../node_modules/ol/render/canvas/LineStringBuilder.js","../../node_modules/ol/geom/flat/length.js","../../node_modules/ol/geom/flat/textpath.js","../../node_modules/ol/render/canvas/Executor.js","../../node_modules/ol/render/canvas/ExecutorGroup.js","../../node_modules/ol/render/canvas/Immediate.js","../../node_modules/ol/render/canvas/hitdetect.js","../../node_modules/ol/renderer/vector.js","../../node_modules/ol/renderer/canvas/VectorLayer.js","../../node_modules/ol/layer/Vector.js","../../node_modules/ol/featureloader.js","../../node_modules/ol/loadingstrategy.js","../../node_modules/ol/Feature.js","../../node_modules/ol/geom/flat/center.js","../../node_modules/ol/geom/flat/interpolate.js","../../node_modules/ol/geom/Circle.js","../../node_modules/ol/geom/GeometryCollection.js","../../node_modules/ol/geom/LineString.js","../../node_modules/ol/geom/MultiLineString.js","../../node_modules/ol/geom/MultiPoint.js","../../node_modules/ol/geom/MultiPolygon.js","../../node_modules/ol/render/Feature.js","../../node_modules/ol/structs/RBush.js","../../node_modules/ol/source/Source.js","../../node_modules/ol/source/VectorEventType.js","../../node_modules/ol/source/Vector.js","../../node_modules/ol/uri.js","../../node_modules/ol/vec/mat4.js","../../node_modules/ol/webgl/Canvas.js","../../node_modules/ol/reproj/glreproj.js","../../node_modules/ol/reproj/DataTile.js","../../node_modules/ol/tilegrid/TileGrid.js","../../node_modules/ol/tilegrid.js","../../node_modules/ol/source/Tile.js","../../node_modules/ol/source/TileEventType.js","../../node_modules/ol/source/DataTile.js","../../node_modules/ol/source/ImageTile.js","../../node_modules/ol/ImageCanvas.js","../../node_modules/ol/resolution.js","../../node_modules/ol/reproj/Image.js","../../node_modules/ol/source/common.js","../../node_modules/ol/source/Image.js","../../node_modules/ol/source/Raster.js","../../node_modules/ol-layerswitcher/dist/ol-layerswitcher.js","../../node_modules/ol/interaction/Draw.js","../../main.js","../../node_modules/ol/control/defaults.js","../../node_modules/ol/interaction/defaults.js"],"sourcesContent":["/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\nimport Event from './Event.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @param {Event|import('./events/Event.js').default} event The event\n     * @return {void|boolean} When the function returns `false`, event propagation will stop.\n     * @this {typeof target}\n     */\n    listener = function (event) {\n      target.removeEventListener(type, listener);\n      return originalListener.call(thisArg ?? this, event);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '10.5.0';\n","/**\n * @module ol/Object\n */\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/Collection\n */\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {PointerEvent|KeyboardEvent|WheelEvent} [EVENT=PointerEvent|KeyboardEvent|WheelEvent]\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     * @private\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   * @override\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   * @override\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport EventType from './events/EventType.js';\nimport Target from './events/Target.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport PointerEventType from './pointer/EventType.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * @private\n     */\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import('./tilecoord.js').TileCoord, number): number} PriorityFunction\n */\n\n/**\n * @typedef {[import('./Tile.js').default, string, import('./tilecoord.js').TileCoord, number]} TileQueueElement\n */\n\n/**\n * @extends PriorityQueue<TileQueueElement>}\n */\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      (element) => tilePriorityFunction.apply(null, element),\n      (element) => element[0].getKey(),\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {TileQueueElement} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n\n/**\n * Wraps a number between some minimum and maximum values.\n * @param {number} n The number to wrap.\n * @param {number} min The minimum of the range (inclusive).\n * @param {number} max The maximum of the range (exclusive).\n * @return {number} The wrapped number.\n */\nexport function wrap(n, min, max) {\n  if (n >= min && n < max) {\n    return n;\n  }\n  const range = max - min;\n  return ((((n - min) % range) + range) % range) + min;\n}\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * The function is called with a `number` view resolution and a\n * {@link module:ol/coordinate~Coordinate} as arguments, and returns the `number` resolution\n * in projection units at the passed coordinate.\n * @typedef {function(number, import(\"../coordinate.js\").Coordinate):number} GetPointResolution\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {GetPointResolution} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * In most cases, you should not need to create instances of this class.\n * Instead, where projection information is required, you can use a string\n * projection code or identifier (e.g. `EPSG:4326`) instead of a projection\n * instance.\n *\n * The library includes support for transforming coordinates between the following\n * projections:\n *\n *  WGS 84 / Geographic - Using codes `EPSG:4326`, `CRS:84`, `urn:ogc:def:crs:EPSG:6.6:4326`,\n *    `urn:ogc:def:crs:OGC:1.3:CRS84`, `urn:ogc:def:crs:OGC:2:84`, `http://www.opengis.net/gml/srs/epsg.xml#4326`,\n *    or `urn:x-ogc:def:crs:EPSG:4326`\n *  WGS 84 / Spherical Mercator - Using codes `EPSG:3857`, `EPSG:102100`, `EPSG:102113`, `EPSG:900913`,\n *    `urn:ogc:def:crs:EPSG:6.18:3:3857`, or `http://www.opengis.net/gml/srs/epsg.xml#3857`\n *  WGS 84 / UTM zones - Using codes `EPSG:32601` through `EPSG:32660` for northern zones\n *    and `EPSG:32701` through `EPSG:32760` for southern zones. Note that the built-in UTM transforms\n *    are lower accuracy (with errors on the order of 0.1 m) than those that you might get in a\n *    library like [proj4js](https://github.com/proj4js/proj4js).\n *\n * For additional projection support, or to use higher accuracy transforms than the built-in ones, you can use\n * the [proj4js](https://github.com/proj4js/proj4js) library. With `proj4js`, after adding any new projection\n * definitions, call the {@link module:ol/proj/proj4.register} function.\n *\n * You can use the {@link module:ol/proj.get} function to retrieve a projection instance\n * for one of the registered projections.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {GetPointResolution|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {GetPointResolution|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default|null} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|null} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    return transforms[sourceCode][destinationCode];\n  }\n  return null;\n}\n","/**\n * @module ol/proj/utm\n */\n\n/**\n * Adapted from https://github.com/Turbo87/utm\n * Copyright (c) 2012-2017 Tobias Bieniek\n *\n * The functions here provide approximate transforms to and from UTM.\n * They are not appropriate for use beyond the validity extend of a UTM\n * zone, and the accuracy of the transform decreases toward the zone\n * edges.\n */\n\nimport {toDegrees, toRadians, wrap} from '../math.js';\nimport Projection from './Projection.js';\n\n/**\n * @typedef {Object} UTMZone\n * @property {number} number The zone number (1 - 60).\n * @property {boolean} north The northern hemisphere.\n */\n\nconst K0 = 0.9996;\n\nconst E = 0.00669438;\nconst E2 = E * E;\nconst E3 = E2 * E;\nconst E_P2 = E / (1 - E);\n\nconst SQRT_E = Math.sqrt(1 - E);\nconst _E = (1 - SQRT_E) / (1 + SQRT_E);\nconst _E2 = _E * _E;\nconst _E3 = _E2 * _E;\nconst _E4 = _E3 * _E;\nconst _E5 = _E4 * _E;\n\nconst M1 = 1 - E / 4 - (3 * E2) / 64 - (5 * E3) / 256;\nconst M2 = (3 * E) / 8 + (3 * E2) / 32 + (45 * E3) / 1024;\nconst M3 = (15 * E2) / 256 + (45 * E3) / 1024;\nconst M4 = (35 * E3) / 3072;\n\nconst P2 = (3 / 2) * _E - (27 / 32) * _E3 + (269 / 512) * _E5;\nconst P3 = (21 / 16) * _E2 - (55 / 32) * _E4;\nconst P4 = (151 / 96) * _E3 - (417 / 128) * _E5;\nconst P5 = (1097 / 512) * _E4;\n\nconst R = 6378137;\n\n/**\n * @param {number} easting Easting value of coordinate.\n * @param {number} northing Northing value of coordinate.\n * @param {UTMZone} zone The UTM zone.\n * @return {import(\"../coordinate.js\").Coordinate} The transformed coordinate.\n */\nfunction toLonLat(easting, northing, zone) {\n  const x = easting - 500000;\n  const y = zone.north ? northing : northing - 10000000;\n\n  const m = y / K0;\n  const mu = m / (R * M1);\n\n  const pRad =\n    mu +\n    P2 * Math.sin(2 * mu) +\n    P3 * Math.sin(4 * mu) +\n    P4 * Math.sin(6 * mu) +\n    P5 * Math.sin(8 * mu);\n\n  const pSin = Math.sin(pRad);\n  const pSin2 = pSin * pSin;\n\n  const pCos = Math.cos(pRad);\n\n  const pTan = pSin / pCos;\n  const pTan2 = pTan * pTan;\n  const pTan4 = pTan2 * pTan2;\n\n  const epSin = 1 - E * pSin2;\n  const epSinSqrt = Math.sqrt(1 - E * pSin2);\n\n  const n = R / epSinSqrt;\n  const r = (1 - E) / epSin;\n\n  const c = E_P2 * pCos ** 2;\n  const c2 = c * c;\n\n  const d = x / (n * K0);\n  const d2 = d * d;\n  const d3 = d2 * d;\n  const d4 = d3 * d;\n  const d5 = d4 * d;\n  const d6 = d5 * d;\n\n  const latitude =\n    pRad -\n    (pTan / r) *\n      (d2 / 2 - (d4 / 24) * (5 + 3 * pTan2 + 10 * c - 4 * c2 - 9 * E_P2)) +\n    (d6 / 720) * (61 + 90 * pTan2 + 298 * c + 45 * pTan4 - 252 * E_P2 - 3 * c2);\n\n  let longitude =\n    (d -\n      (d3 / 6) * (1 + 2 * pTan2 + c) +\n      (d5 / 120) * (5 - 2 * c + 28 * pTan2 - 3 * c2 + 8 * E_P2 + 24 * pTan4)) /\n    pCos;\n\n  longitude = wrap(\n    longitude + toRadians(zoneToCentralLongitude(zone.number)),\n    -Math.PI,\n    Math.PI,\n  );\n\n  return [toDegrees(longitude), toDegrees(latitude)];\n}\n\nconst MIN_LATITUDE = -80;\nconst MAX_LATITUDE = 84;\nconst MIN_LONGITUDE = -180;\nconst MAX_LONGITUDE = 180;\n\n/**\n * @param {number} longitude The longitude.\n * @param {number} latitude The latitude.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../coordinate.js').Coordinate} The UTM coordinate.\n */\nfunction fromLonLat(longitude, latitude, zone) {\n  longitude = wrap(longitude, MIN_LONGITUDE, MAX_LONGITUDE);\n\n  if (latitude < MIN_LATITUDE) {\n    latitude = MIN_LATITUDE;\n  } else if (latitude > MAX_LATITUDE) {\n    latitude = MAX_LATITUDE;\n  }\n\n  const latRad = toRadians(latitude);\n  const latSin = Math.sin(latRad);\n  const latCos = Math.cos(latRad);\n\n  const latTan = latSin / latCos;\n  const latTan2 = latTan * latTan;\n  const latTan4 = latTan2 * latTan2;\n\n  const lonRad = toRadians(longitude);\n  const centralLon = zoneToCentralLongitude(zone.number);\n  const centralLonRad = toRadians(centralLon);\n\n  const n = R / Math.sqrt(1 - E * latSin ** 2);\n  const c = E_P2 * latCos ** 2;\n\n  const a = latCos * wrap(lonRad - centralLonRad, -Math.PI, Math.PI);\n  const a2 = a * a;\n  const a3 = a2 * a;\n  const a4 = a3 * a;\n  const a5 = a4 * a;\n  const a6 = a5 * a;\n\n  const m =\n    R *\n    (M1 * latRad -\n      M2 * Math.sin(2 * latRad) +\n      M3 * Math.sin(4 * latRad) -\n      M4 * Math.sin(6 * latRad));\n\n  const easting =\n    K0 *\n      n *\n      (a +\n        (a3 / 6) * (1 - latTan2 + c) +\n        (a5 / 120) * (5 - 18 * latTan2 + latTan4 + 72 * c - 58 * E_P2)) +\n    500000;\n\n  let northing =\n    K0 *\n    (m +\n      n *\n        latTan *\n        (a2 / 2 +\n          (a4 / 24) * (5 - latTan2 + 9 * c + 4 * c ** 2) +\n          (a6 / 720) * (61 - 58 * latTan2 + latTan4 + 600 * c - 330 * E_P2)));\n\n  if (!zone.north) {\n    northing += 10000000;\n  }\n\n  return [easting, northing];\n}\n\n/**\n * @param {number} zone The zone number.\n * @return {number} The central longitude in degrees.\n */\nfunction zoneToCentralLongitude(zone) {\n  return (zone - 1) * 6 - 180 + 3;\n}\n\n/**\n * @type {Array<RegExp>}\n */\nconst epsgRegExes = [\n  /^EPSG:(\\d+)$/,\n  /^urn:ogc:def:crs:EPSG::(\\d+)$/,\n  /^http:\\/\\/www\\.opengis\\.net\\/def\\/crs\\/EPSG\\/0\\/(\\d+)$/,\n];\n\n/**\n * @param {string} code The projection code.\n * @return {UTMZone|null} The UTM zone info (or null if not UTM).\n */\nexport function zoneFromCode(code) {\n  let epsgId = 0;\n  for (const re of epsgRegExes) {\n    const match = code.match(re);\n    if (match) {\n      epsgId = parseInt(match[1]);\n      break;\n    }\n  }\n  if (!epsgId) {\n    return null;\n  }\n\n  let number = 0;\n  let north = false;\n  if (epsgId > 32700 && epsgId < 32761) {\n    number = epsgId - 32700;\n  } else if (epsgId > 32600 && epsgId < 32661) {\n    north = true;\n    number = epsgId - 32600;\n  }\n  if (!number) {\n    return null;\n  }\n\n  return {number, north};\n}\n\n/**\n * @param {function(number, number, UTMZone): import('../coordinate.js').Coordinate} transformer The transformer.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../proj.js').TransformFunction} The transform function.\n */\nfunction makeTransformFunction(transformer, zone) {\n  return function (input, output, dimension, stride) {\n    const length = input.length;\n    dimension = dimension > 1 ? dimension : 2;\n    stride = stride ?? dimension;\n    if (!output) {\n      if (dimension > 2) {\n        output = input.slice();\n      } else {\n        output = new Array(length);\n      }\n    }\n    for (let i = 0; i < length; i += stride) {\n      const x = input[i];\n      const y = input[i + 1];\n      const coord = transformer(x, y, zone);\n      output[i] = coord[0];\n      output[i + 1] = coord[1];\n    }\n    return output;\n  };\n}\n\n/**\n * @param {string} code The projection code.\n * @return {import('./Projection.js').default|null} A projection or null if unable to create one.\n */\nexport function makeProjection(code) {\n  const zone = zoneFromCode(code);\n  if (!zone) {\n    return null;\n  }\n  return new Projection({code, units: 'm'});\n}\n\n/**\n * @param {import('./Projection.js').default} projection The projection.\n * @return {import('../proj.js').Transforms|null} The transforms lookup or null if unable to handle projection.\n */\nexport function makeTransforms(projection) {\n  const zone = zoneFromCode(projection.getCode());\n  if (!zone) {\n    return null;\n  }\n\n  return {\n    forward: makeTransformFunction(fromLonLat, zone),\n    inverse: makeTransformFunction(toLonLat, zone),\n  };\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {warn} from './console.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport Projection from './proj/Projection.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {\n  makeProjection as makeUTMProjection,\n  makeTransforms as makeUTMTransforms,\n} from './proj/utm.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * @typedef {Object} Transforms\n * @property {TransformFunction} forward The forward transform (from geographic).\n * @property {TransformFunction} inverse The inverse transform (to geographic).\n */\n\n/**\n * @type {Array<function(Projection): Transforms|null>}\n */\nconst transformFactories = [makeUTMTransforms];\n\n/**\n * @type {Array<function(string): Projection|null>}\n */\nconst projectionFactories = [makeUTMProjection];\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @callback TransformFunction\n * @param {Array<number>} input\n * @param {Array<number>} [output]\n * @param {number} [dimension]\n * @param {number} [stride]\n * @return {Array<number>}\n *\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  if (!(typeof projectionLike === 'string')) {\n    return projectionLike;\n  }\n  const projection = getProj(projectionLike);\n  if (projection) {\n    return projection;\n  }\n  for (const makeProjection of projectionFactories) {\n    const projection = makeProjection(projectionLike);\n    if (projection) {\n      return projection;\n    }\n  }\n  return null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (!toEPSG4326 && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimensions that should be transformed.\n     * @param {number} [stride] Stride.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension, stride) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      stride = stride ?? dimension;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += stride) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = stride; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} source Source Projection object.\n * @param {Projection} destination Destination Projection\n *     object.\n * @return {TransformFunction|null} Transform function.\n */\nexport function getTransformFromProjections(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (transformFunc) {\n    return transformFunc;\n  }\n\n  /**\n   * @type {Transforms|null}\n   */\n  let sourceTransforms = null;\n\n  /**\n   * @type {Transforms|null}\n   */\n  let destinationTransforms = null;\n\n  // lazily add projections if we have supported transforms\n  for (const makeTransforms of transformFactories) {\n    if (!sourceTransforms) {\n      sourceTransforms = makeTransforms(source);\n    }\n    if (!destinationTransforms) {\n      destinationTransforms = makeTransforms(destination);\n    }\n  }\n\n  if (!sourceTransforms && !destinationTransforms) {\n    return null;\n  }\n\n  const intermediateCode = 'EPSG:4326';\n  if (!destinationTransforms) {\n    const toDestination = getTransformFunc(intermediateCode, destinationCode);\n    if (toDestination) {\n      transformFunc = composeTransformFuncs(\n        sourceTransforms.inverse,\n        toDestination,\n      );\n    }\n  } else if (!sourceTransforms) {\n    const fromSource = getTransformFunc(sourceCode, intermediateCode);\n    if (fromSource) {\n      transformFunc = composeTransformFuncs(\n        fromSource,\n        destinationTransforms.forward,\n      );\n    }\n  } else {\n    transformFunc = composeTransformFuncs(\n      sourceTransforms.inverse,\n      destinationTransforms.forward,\n    );\n  }\n\n  if (transformFunc) {\n    addProjection(source);\n    addProjection(destination);\n    addTransformFunc(source, destination, transformFunc);\n  }\n\n  return transformFunc;\n}\n\n/**\n * @param {TransformFunction} t1 The first transform function.\n * @param {TransformFunction} t2 The second transform function.\n * @return {TransformFunction} The composed transform function.\n */\nfunction composeTransformFuncs(t1, t2) {\n  return function (input, output, dimensions, stride) {\n    output = t1(input, output, dimensions, stride);\n    return t2(output, output, dimensions, stride);\n  };\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original). If there\n * is no available transform between the two projection, the function will throw\n * an error.\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  if (!transformFunc) {\n    const sourceCode = get(source).getCode();\n    const destinationCode = get(destination).getCode();\n    throw new Error(\n      `No transform available between ${sourceCode} and ${destinationCode}`,\n    );\n  }\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e5, 1e5, 1e5, 1e5, 2, 2];\n\n/**\n * A matrix string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  return transformString;\n}\n\n/**\n * Create a transform from a CSS transform matrix string.\n * @param {string} cssTransform The CSS string to parse.\n * @return {!Transform} The transform.\n */\nfunction fromString(cssTransform) {\n  const values = cssTransform.substring(7, cssTransform.length - 1).split(',');\n  return values.map(parseFloat);\n}\n\n/**\n * Compare two matrices for equality.\n * @param {!string} cssTransform1 A CSS transform matrix string.\n * @param {!string} cssTransform2 A CSS transform matrix string.\n * @return {boolean} The two matrices are equal.\n */\nexport function equivalent(cssTransform1, cssTransform2) {\n  const mat1 = fromString(cssTransform1);\n  const mat2 = fromString(cssTransform2);\n  for (let i = 0; i < 6; ++i) {\n    if (Math.round((mat1[i] - mat2[i]) * matrixPrecision[i]) !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destinationStride] Stride of destination coordinates; if unspecified, assumed to be 2.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n  destinationStride,\n) {\n  dest = dest ? dest : [];\n  destinationStride = destinationStride ? destinationStride : 2;\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n\n    for (let k = 2; k < destinationStride; k++) {\n      dest[i++] = flatCoordinates[j + k];\n    }\n  }\n\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {abstract} from '../util.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/** @type {import('../coordinate.js').Coordinate} */\nconst tmpPoint = [NaN, NaN];\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return this.closestPointXY(x, y, tmpPoint, Number.MIN_VALUE) === 0;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            const transformed = transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            const projTransform = getTransform(sourceProj, destination);\n            if (projTransform) {\n              return projTransform(transformed, transformed, stride);\n            }\n            return transformed;\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {abstract} from '../util.js';\nimport Geometry from './Geometry.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(\n        this.flatCoordinates,\n        this.flatCoordinates,\n        this.layout.startsWith('XYZ') ? 3 : 2,\n        this.stride,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n\n/**\n * Calculate the intersection point of two line segments.\n * Reference: https://stackoverflow.com/a/72474223/2389327\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment1 The first line segment as an array of two points.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment2 The second line segment as an array of two points.\n * @return {import(\"../../coordinate.js\").Coordinate|undefined} The intersection point or `undefined` if no intersection.\n */\nexport function getIntersectionPoint(segment1, segment2) {\n  const [a, b] = segment1;\n  const [c, d] = segment2;\n  const t =\n    ((a[0] - c[0]) * (c[1] - d[1]) - (a[1] - c[1]) * (c[0] - d[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n  const u =\n    ((a[0] - c[0]) * (a[1] - b[1]) - (a[1] - c[1]) * (a[0] - b[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n\n  // Check if lines actually intersect\n  if (0 <= t && t <= 1 && 0 <= u && u <= 1) {\n    return [a[0] + t * (b[0] - a[0]), a[1] + t * (b[1] - a[1])];\n  }\n  return undefined;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {import('../../extent.js').Extent} [coordinatesExtent] Coordinates extent\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n  coordinatesExtent,\n) {\n  coordinatesExtent =\n    coordinatesExtent ??\n    extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (\n    (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) ||\n    (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3])\n  ) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport {\n  add as addCoordinate,\n  equals,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {VOID} from './functions.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_?.length) {\n      if (this.resolutions_.length === 1) {\n        return this.resolutions_[0];\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z0-9]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/control/Control\n */\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {VOID} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.element?.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.element?.remove();\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_ ?? map.getOverlayContainerStopEvent();\n      if (this.element) {\n        target.appendChild(this.element);\n      }\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {toPromise} from '../functions.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {string|Array<string>|undefined} [attributions] Optional attribution(s) that will always be\n * displayed regardless of the layers rendered\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {string | Array<string> | undefined}\n     */\n    this.attributions_ = options.attributions;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const layers = this.getMap().getAllLayers();\n    const visibleAttributions = new Set(\n      layers.flatMap((layer) => layer.getAttributions(frameState)),\n    );\n    if (this.attributions_ !== undefined) {\n      Array.isArray(this.attributions_)\n        ? this.attributions_.forEach((item) => visibleAttributions.add(item))\n        : visibleAttributions.add(this.attributions_);\n    }\n\n    if (!this.overrideCollapsible_) {\n      const collapsible = !layers.some(\n        (layer) => layer.getSource()?.getAttributionsCollapsible() === false,\n      );\n      this.setCollapsible(collapsible);\n    }\n    return Array.from(visibleAttributions);\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     */\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n\n  return rootNode instanceof ShadowRoot\n    ? rootNode.host.contains(activeElement)\n    : targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const tabIndexCandidate =\n    rootNode instanceof ShadowRoot ? rootNode.host : targetElement;\n\n  return tabIndexCandidate.hasAttribute('tabindex') ? focus(event) : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent instanceof PointerEvent &&\n    originalEvent.button == 0 &&\n    !(WEBKIT && MAC && originalEvent.ctrlKey)\n  );\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return (\n    pointerEvent instanceof PointerEvent && pointerEvent.pointerType == 'mouse'\n  );\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return (\n    pointerEvt instanceof PointerEvent && pointerEvt.pointerType === 'touch'\n  );\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt instanceof PointerEvent && pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  return (\n    pointerEvent instanceof PointerEvent &&\n    pointerEvent.isPrimary &&\n    pointerEvent.button === 0\n  );\n};\n","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/DragPan\n */\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {mouseActionButton} from '../events/condition.js';\nimport RenderBox from '../render/Box.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ?? {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea ?? 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ?? mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ =\n      options.boxEndCondition ?? this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n\n    this.box_.setMap(null);\n    this.startPixel_ = null;\n\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n\n    if (oldMap) {\n      this.box_.setMap(null);\n\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setMap(map);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport DragBox from './DragBox.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../pixel.js\").Pixel}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.pixel;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(\n        -delta / this.deltaPerZoom_,\n        this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      );\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(\n      view,\n      delta,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      this.duration_,\n    );\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {abstract} from '../util.js';\nimport LayerProperty from './Property.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Group\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getIntersection} from '../extent.js';\nimport {clear} from '../obj.js';\nimport {getUid} from '../util.js';\nimport BaseLayer from './Base.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {intersects} from '../extent.js';\nimport RenderEventType from '../render/EventType.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n      this.clearRenderer();\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n      if (!layerState) {\n        return false;\n      }\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        this.handlePrecompose_,\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} renderEvent Render event\n   * @private\n   */\n  handlePrecompose_(renderEvent) {\n    const layerStatesArray =\n      /** @type {import(\"../render/Event.js\").default} */ (renderEvent)\n        .frameState.layerStatesArray;\n    const layerState = this.getLayerState(false);\n    assert(\n      !layerStatesArray.some(\n        (arrayLayerState) => arrayLayerState.layer === layerState.layer,\n      ),\n      'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n    );\n    layerStatesArray.push(layerState);\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * This will clear the renderer so that a new one can be created next time it is needed\n   */\n  clearRenderer() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.clearRenderer();\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/color\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {clamp, toFixed} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\nlet colorParseContext;\n/**\n * @return {CanvasRenderingContext2D} The color parse context\n */\nfunction getColorParseContext() {\n  if (!colorParseContext) {\n    colorParseContext = createCanvasContext2D(1, 1, undefined, {\n      willReadFrequently: true,\n      desynchronized: true,\n    });\n  }\n  return colorParseContext;\n}\n\nconst rgbModernRegEx =\n  /^rgba?\\(\\s*(\\d+%?)\\s+(\\d+%?)\\s+(\\d+%?)(?:\\s*\\/\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyAbsoluteRegEx =\n  /^rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyPercentageRegEx =\n  /^rgba?\\(\\s*(\\d+%)\\s*,\\s*(\\d+%)\\s*,\\s*(\\d+%)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst hexRegEx = /^#([\\da-f]{3,4}|[\\da-f]{6}|[\\da-f]{8})$/i;\n\n/**\n * @param {string} s Color component as number or percentage.\n * @param {number} divider Divider for percentage.\n * @return {number} Color component.\n */\nfunction toColorComponent(s, divider) {\n  return s.endsWith('%')\n    ? Number(s.substring(0, s.length - 1)) / divider\n    : Number(s);\n}\n\n/**\n * @param {string} color Color string.\n */\nfunction throwInvalidColor(color) {\n  throw new Error('failed to parse \"' + color + '\" as color');\n}\n\n/**\n * @param {string} color Color string.\n * @return {Color} RGBa color array.\n */\nfunction parseRgba(color) {\n  // Fast lane for rgb(a) colors\n  if (color.toLowerCase().startsWith('rgb')) {\n    const rgb =\n      color.match(rgbLegacyAbsoluteRegEx) ||\n      color.match(rgbModernRegEx) ||\n      color.match(rgbLegacyPercentageRegEx);\n    if (rgb) {\n      const alpha = rgb[4];\n      const rgbDivider = 100 / 255;\n      return [\n        clamp((toColorComponent(rgb[1], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[2], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[3], rgbDivider) + 0.5) | 0, 0, 255),\n        alpha !== undefined ? clamp(toColorComponent(alpha, 100), 0, 1) : 1,\n      ];\n    }\n    throwInvalidColor(color);\n  }\n  // Fast lane for hex colors (also with alpha)\n  if (color.startsWith('#')) {\n    if (hexRegEx.test(color)) {\n      const hex = color.substring(1);\n      const step = hex.length <= 4 ? 1 : 2;\n      const colorFromHex = [0, 0, 0, 255];\n      for (let i = 0, ii = hex.length; i < ii; i += step) {\n        let colorComponent = parseInt(hex.substring(i, i + step), 16);\n        if (step === 1) {\n          colorComponent += colorComponent << 4;\n        }\n        colorFromHex[i / step] = colorComponent;\n      }\n      colorFromHex[3] = colorFromHex[3] / 255;\n      return colorFromHex;\n    }\n    throwInvalidColor(color);\n  }\n  // Use canvas color serialization to parse the color into hex or rgba\n  // See https://www.w3.org/TR/2021/SPSD-2dcontext-20210128/#serialization-of-a-color\n  const context = getColorParseContext();\n  context.fillStyle = '#abcdef';\n  let invalidCheckFillStyle = context.fillStyle;\n  context.fillStyle = color;\n  if (context.fillStyle === invalidCheckFillStyle) {\n    context.fillStyle = '#fedcba';\n    invalidCheckFillStyle = context.fillStyle;\n    context.fillStyle = color;\n    if (context.fillStyle === invalidCheckFillStyle) {\n      throwInvalidColor(color);\n    }\n  }\n  const colorString = context.fillStyle;\n  if (colorString.startsWith('#') || colorString.startsWith('rgba')) {\n    return parseRgba(colorString);\n  }\n  context.clearRect(0, 0, 1, 1);\n  context.fillRect(0, 0, 1, 1);\n  const colorFromImage = Array.from(context.getImageData(0, 0, 1, 1).data);\n  colorFromImage[3] = toFixed(colorFromImage[3] / 255, 3);\n  return colorFromImage;\n}\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n// The functions b1, b2, a1, a2, rgbaToLcha and lchaToRgba below are adapted from\n// https://stackoverflow.com/a/67219995/2389327\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b1(v) {\n  return v > 0.0031308 ? Math.pow(v, 1 / 2.4) * 269.025 - 14.025 : v * 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b2(v) {\n  return v > 0.2068965 ? Math.pow(v, 3) : (v - 4 / 29) * (108 / 841);\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a1(v) {\n  return v > 10.314724 ? Math.pow((v + 14.025) / 269.025, 2.4) : v / 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a2(v) {\n  return v > 0.0088564 ? Math.pow(v, 1 / 3) : v / (108 / 841) + 4 / 29;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const r = a1(color[0]);\n  const g = a1(color[1]);\n  const b = a1(color[2]);\n  const y = a2(r * 0.222488403 + g * 0.716873169 + b * 0.06060791);\n  const l = 500 * (a2(r * 0.452247074 + g * 0.399439023 + b * 0.148375274) - y);\n  const q = 200 * (y - a2(r * 0.016863605 + g * 0.117638439 + b * 0.865350722));\n  const h = Math.atan2(q, l) * (180 / Math.PI);\n  return [\n    116 * y - 16,\n    Math.sqrt(l * l + q * q),\n    h < 0 ? h + 360 : h,\n    color[3],\n  ];\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const l = (color[0] + 16) / 116;\n  const c = color[1];\n  const h = (color[2] * Math.PI) / 180;\n  const y = b2(l);\n  const x = b2(l + (c / 500) * Math.cos(h));\n  const z = b2(l - (c / 200) * Math.sin(h));\n  const r = b1(x * 3.021973625 - y * 1.617392459 - z * 0.404875592);\n  const g = b1(x * -0.943766287 + y * 1.916279586 + z * 0.027607165);\n  const b = b1(x * 0.069407491 - y * 0.22898585 + z * 1.159737864);\n  return [\n    clamp((r + 0.5) | 0, 0, 255),\n    clamp((g + 0.5) | 0, 0, 255),\n    clamp((b + 0.5) | 0, 0, 255),\n    color[3],\n  ];\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throwInvalidColor(s);\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throwInvalidColor(s);\n    }\n  }\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch {\n    return false;\n  }\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * Reading operators:\n *   `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   `['resolution']` returns the current resolution\n *   `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   `['zoom']` The current zoom level (WebGL only).\n *   `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * Math operators:\n *   `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   `['/', value1, value2]` divides `value1` by `value2`\n *   `['+', value1, value2, ...]` adds the values\n *   `['-', value1, value2]` subtracts `value2` from `value1`\n *   `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   `['abs', value1]` returns the absolute value of `value1`\n *   `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *     Note that for WebGL layers, the hardcoded value `-9999999` is used to distinguish when a property is not defined.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {boolean} mapState The style uses the map state (view state or time elapsed).\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    mapState: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Time]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type {ArgValidator}\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesMapState(encoded, returnType, context) {\n  context.mapState = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  fromString,\n  lchaToRgba,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length - 1; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return lchaToRgba(lcha);\n}\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport ImageState from './ImageState.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {Loader|null}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              (CREATE_IMAGE_BITMAP && image instanceof ImageBitmap) ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 1024;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `1024`. Change this value when\n   * your map uses more than 1024 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport {decodeFallback} from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport EventTarget from '../events/Target.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const ctx = createCanvasContext2D(\n      Math.ceil(image.width * pixelRatio),\n      Math.ceil(image.height * pixelRatio),\n    );\n    const canvas = ctx.canvas;\n\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {toString} from './color.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {getFontParameters} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        const [style, weight, family] = font.split('\\n');\n        if (isAvailable(style, weight, family)) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/Image\n */\nimport {toSize} from '../size.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\nimport IconImage from './IconImage.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport ImageStyle from './Image.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    const fillKey = this.fill_?.getKey();\n    const cacheKey =\n      `${pixelRatio},${this.angle_},${this.radius},${this.radius2_},${this.points_},${fillKey}` +\n      Object.values(this.renderOptions_).join(',');\n    let image = /** @type {HTMLCanvasElement} */ (\n      iconImageCache.get(cacheKey, null, null)?.getImage(1)\n    );\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const size = Math.ceil(renderOptions.size * pixelRatio);\n      const context = createCanvasContext2D(size, size);\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      iconImageCache.set(\n        cacheKey,\n        null,\n        null,\n        new IconImage(image, undefined, null, ImageState.LOADED, null),\n      );\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {string} Key of the fill for cache lookup.\n   */\n  getKey() {\n    const fill = this.getColor();\n    if (!fill) {\n      return '';\n    }\n    return fill instanceof CanvasPattern || fill instanceof CanvasGradient\n      ? getUid(fill)\n      : typeof fill === 'object' && 'src' in fill\n        ? fill.src + ':' + fill.offset\n        : asArray(fill).toString();\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Icon\n */\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\nimport ImageStyle from './Image.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport {assert} from '../asserts.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * **declutter**: Overlapping symbols and text are decluttered.\n * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport {toSize} from '../size.js';\nimport Fill from './Fill.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {boolean} [keepUpright=true] Whether the text can be rotated 180° to prevent being rendered upside down.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.keepUpright_ = options.keepUpright;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      keepUpright: this.getKeepUpright(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Determine whether the text can be rendered upside down.\n   * @return {boolean|undefined} Keep text upright.\n   * @api\n   */\n  getKeepUpright() {\n    return this.keepUpright_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set whether the text can be rendered upside down.\n   *\n   * @param {boolean} keepUpright Keep text upright.\n   * @api\n   */\n  setKeepUpright(keepUpright) {\n    this.keepUpright_ = keepUpright;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/render/canvas/style\n */\n\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluateKeepUpright = booleanEvaluator(\n    flatStyle,\n    prefix + 'keep-upright',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    if (evaluateKeepUpright) {\n      text.setKeepUpright(evaluateKeepUpright(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport RBush from 'rbush';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport Layer from './Layer.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/VectorLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {import(\"../render.js\").OrderFunction|null|undefined} Render order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n\n  /**\n   * @param {boolean|string|number} declutter Declutter images and text.\n   * @api\n   */\n  setDeclutter(declutter) {\n    this.declutter_ = declutter ? String(declutter) : undefined;\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type {Array<import(\"../style/flat.js\").Rule>}\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {wrapX} from '../coordinate.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {inView} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport ObjectEventType from '../ObjectEventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {replaceChildren} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport {inView} from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport MapRenderer from './Map.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @private\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText,\n      map,\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(\n      (a, b) => a.zIndex - b.zIndex,\n    );\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/Map\n */\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {equals} from './array.js';\nimport {assert} from './asserts.js';\nimport {warn} from './console.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport Layer from './layer/Layer.js';\nimport PointerEventType from './pointer/EventType.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport {hasArea} from './size.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {getUid} from './util.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default<import('./render/canvas/Executor.js').DeclutterEntry>>|null} declutter\n * Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n *  `tabindex` atribute must be set on the custom element's host element.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @private\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {PointerEvent|KeyboardEvent|WheelEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = mapBrowserEvent.originalEvent;\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n\n      const currentDoc =\n        rootNode instanceof ShadowRoot\n          ? rootNode.host === target\n            ? rootNode.host.ownerDocument\n            : rootNode\n          : rootNode === doc\n            ? doc.documentElement\n            : rootNode;\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !currentDoc.contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    if (frameState) {\n      for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n        postRenderFunctions[i](this, frameState);\n      }\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      this.viewport_.remove();\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      let keyboardEventTarget;\n      if (!this.keyboardEventTarget_) {\n        // check if map target is in shadowDOM, if yes use host element as target\n        const targetRoot = targetElement.getRootNode();\n        const targetCandidate =\n          targetRoot instanceof ShadowRoot ? targetRoot.host : targetElement;\n        keyboardEventTarget = targetCandidate;\n      } else {\n        keyboardEventTarget = this.keyboardEventTarget_;\n      }\n\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      (this.hasListener(MapEventType.LOADSTART) ||\n        this.hasListener(MapEventType.LOADEND) ||\n        this.hasListener(RenderEventType.RENDERCOMPLETE)) &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n   *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n   *  `tabindex` atribute must be set on the custom element's host element.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>|null} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [Math.max(0, width), Math.max(0, height)];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          this.push_(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          this.push_(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @param {...*} args Arguments to push to the instructions array.\n   * @private\n   */\n  push_(...args) {\n    const instructions = this.instructions_;\n    const index = this.zIndex + this.offset_;\n    if (!instructions[index]) {\n      instructions[index] = [];\n    }\n    instructions[index].push(...args);\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.push_(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.push_(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/renderer/Layer\n */\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  equivalent,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport LayerRenderer from '../Layer.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS transform matrix.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && equivalent(context.canvas.style.transform, transform)) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport CanvasLayerRenderer from './Layer.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../Image.js\").default}\n     */\n    this.image = null;\n  }\n\n  /**\n   * @return {import('../../DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return !this.image ? null : this.image.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection),\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection,\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image = null;\n          }\n        }\n      } else {\n        this.image = null;\n      }\n    }\n\n    return !!this.image;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image.getExtent();\n    const img = this.image.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth),\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight),\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const image = this.image;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const [imageResolutionX, imageResolutionY] = Array.isArray(imageResolution)\n      ? imageResolution\n      : [imageResolution, imageResolution];\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scaleX =\n      (pixelRatio * imageResolutionX) / (viewResolution * imagePixelRatio);\n    const scaleY =\n      (pixelRatio * imageResolutionY) / (viewResolution * imagePixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const context = this.getRenderContext(frameState);\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection,\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scaleX,\n      scaleY,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolutionX,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolutionY,\n    );\n\n    this.renderedResolution = (imageResolutionY * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      if (opacity !== 1) {\n        context.save();\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.restore();\n      }\n    }\n    this.postRender(this.context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/layer/Image\n */\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\nimport BaseImageLayer from './BaseImage.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {abstract} from './util.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n    this.setState(TileState.EMPTY);\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state === TileState.EMPTY) {\n      // no more state changes\n      return;\n    }\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.release();\n    super.disposeInternal();\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/ImageTile\n */\nimport {listenImage} from './Image.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenImage_();\n    this.image_ = null;\n    super.disposeInternal();\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {\n  createTransformFromCoordinateTransform,\n  getTransform,\n  transform,\n} from '../proj.js';\nimport {apply as applyMatrix} from '../transform.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   * @param {import(\"../transform.js\").Transform} [sourceMatrix] Source transform matrix.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n    sourceMatrix,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = sourceMatrix\n      ? createTransformFromCoordinateTransform((input) =>\n          applyMatrix(\n            sourceMatrix,\n            transform(input, this.targetProj_, this.sourceProj_),\n          ),\n        )\n      : getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {releaseCanvas} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport Disposable from '../Disposable.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  deleteOldest() {\n    const entry = this.pop();\n    if (entry instanceof Disposable) {\n      entry.dispose();\n    }\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache. When the cache entry is a {@link module:ol/Disposable~Disposable},\n   * the entry will be disposed.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    while (this.oldest_) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport DataTile, {asImageLike} from '../../DataTile.js';\nimport ImageTile from '../../ImageTile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport {toSize} from '../../size.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport {createOrUpdate as createTileCoord, getKeyZXY} from '../../tilecoord.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {getUid} from '../../util.js';\nimport CanvasLayerRenderer from './Layer.js';\n\n/**\n * @param {string} sourceKey The source key.\n * @param {number} z The tile z level.\n * @param {number} x The tile x level.\n * @param {number} y The tile y level.\n * @return {string} The cache key.\n */\nfunction getCacheKey(sourceKey, z, x, y) {\n  return `${sourceKey},${getKeyZXY(z, x, y)}`;\n}\n\n/**\n * @typedef {Object<number, Set<import(\"../../Tile.js\").default>>} TileLookup\n */\n\n/**\n * Add a tile to the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was added to the lookup.\n */\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\n\n/**\n * Remove a tile from the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was removed from the lookup.\n */\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=512] The cache size.\n */\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer);\n\n    options = options || {};\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default|null}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedSourceKey_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedSourceRevision_;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tempExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../Tile.js\").default>}\n     * @private\n     */\n    this.tileCache_ = new LRUCache(cacheSize);\n\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n\n  /**\n   * @return {LRUCache} Tile cache.\n   */\n  getTileCache() {\n    return this.tileCache_;\n  }\n\n  /**\n   * Get a tile from the cache or create one if needed.\n   *\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource.getKey(), z, x, y);\n\n    /** @type {import(\"../../Tile.js\").default} */\n    let tile;\n\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(\n        z,\n        x,\n        y,\n        frameState.pixelRatio,\n        frameState.viewState.projection,\n      );\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      /**\n       * @type {import('../../DataTile.js').ImageLike}\n       */\n      let image;\n      if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n        image = tile.getImage();\n      } else if (tile instanceof DataTile) {\n        image = asImageLike(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    if (!this.renderedProjection) {\n      this.renderedProjection = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.renderedProjection) {\n      this.tileCache_.clear();\n      this.renderedProjection = frameState.viewState.projection;\n    }\n\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = source.getRevision();\n    if (!this.renderedRevision_) {\n      this.renderedRevision_ = sourceRevision;\n    } else if (this.renderedRevision_ !== sourceRevision) {\n      this.renderedRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    const rotation = viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(staleKeys[i], z, x, y);\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.peek(cacheKey);\n        if (tile.getState() === TileState.LOADED) {\n          tile.endTransition(getUid(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.peek(cacheKey);\n          if (tile.getState() === TileState.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * Render the layer.\n   *\n   * The frame rendering logic has three parts:\n   *\n   *  1. Enqueue tiles\n   *  2. Find alt tiles for those that are not yet loaded\n   *  3. Render loaded tiles\n   *\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    this.renderComplete = true;\n\n    /**\n     * TODO:\n     *  maybe skip transition when not fully opaque\n     *  decide if this.renderComplete is useful\n     */\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = getIntersection(\n        frameExtent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    /**\n     * @type {TileLookup}\n     */\n    const tilesByZ = {};\n\n    this.renderedTiles.length = 0;\n\n    /**\n     * Part 1: Enqueue tiles\n     */\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          renderExtent,\n          z - 1,\n          tilesByZ,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    if (!(z in tilesByZ)) {\n      return this.container;\n    }\n\n    /**\n     * Part 2: Find alt tiles for those that are not yet loaded\n     */\n\n    const uid = getUid(this);\n    const time = frameState.time;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (tileState === TileState.EMPTY) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileState === TileState.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      if (tileState !== TileState.ERROR) {\n        this.renderComplete = false;\n      }\n\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        // use the stale tile before the new tile's transition has completed\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tilesByZ,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tilesByZ,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Part 3: Render loaded tiles\n     */\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(ascending);\n\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== TileState.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n\n        let contextSaved = false;\n\n        // Clip mask for regions in this tile that already filled by a higher z tile\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if (\n              intersects(\n                [x, y, x + w, y + h],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n\n        // TODO: decide if this is necessary\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (this.renderComplete) {\n      /**\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = (map, frameState) => {\n        const tileSourceKey = getUid(tileSource);\n        const wantedTiles = frameState.wantedTiles[tileSourceKey];\n        const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n        this.updateCacheSize(tilesCount);\n        this.tileCache_.expireCache();\n      };\n\n      frameState.postRenderFunctions.push(postRenderFunction);\n    }\n\n    return this.container;\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   */\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(\n      this.tileCache_.highWaterMark,\n      tileCount * 2,\n    );\n  }\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @protected\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof DataTile) {\n      image = asImageLike(tile.getData());\n      if (!image) {\n        throw new Error('Rendering array data is not yet supported');\n      }\n    } else {\n      image = this.getTileImage(\n        /** @type {import(\"../../ImageTile.js\").default} */ (tile),\n      );\n    }\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=512] The internal tile cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * @return {number|undefined} The suggested cache size\n   * @protected\n   */\n  getCacheSize() {\n    return this.cacheSize_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport BaseTileLayer from './BaseTile.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} [TileSourceType=import(\"../source/Tile.js\").default]\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this, {\n      cacheSize: this.getCacheSize(),\n    });\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport Relationship from '../../extent/Relationship.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import('../canvas.js').FillStrokeState} [state] State.\n   * @return {import('../canvas.js').FillStrokeState} State.\n   */\n  fillStyleToState(\n    fillStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {import(\"../canvas.js\").FillStrokeState} State.\n   */\n  strokeStyleToState(\n    strokeStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    this.fillStyleToState(fillStyle, state);\n    this.strokeStyleToState(strokeStyle, state);\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      state.lineDash ? this.applyPixelRatio(state.lineDash) : null,\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport {snap} from '../../geom/flat/simplify.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textKeepUpright_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      const backgroundFill = textState.backgroundFill\n        ? this.createFill(this.fillStyleToState(textState.backgroundFill))\n        : null;\n      const backgroundStroke = textState.backgroundStroke\n        ? this.createStroke(this.strokeStyleToState(textState.backgroundStroke))\n        : null;\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        backgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const hitDetectionBackgroundFill = backgroundFill\n        ? backgroundFill.slice(0)\n        : null;\n      if (hitDetectionBackgroundFill) {\n        hitDetectionBackgroundFill[1] = defaultFillStyle;\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        hitDetectionBackgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textKeepUpright = textStyle.getKeepUpright();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textKeepUpright_ =\n        textKeepUpright === undefined ? true : textKeepUpright;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport {containsCoordinate} from '../../extent.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @override\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @param {boolean} keepUpright Whether the text needs to be kept upright\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n  keepUpright = true,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright if the option is selected\n  let reverse = false;\n  if (keepUpright) {\n    if (rotation) {\n      const flat = [beginX, beginY, endX, endY];\n      rotate(flat, 0, 4, 2, rotation, flat, flat);\n      reverse = flat[0] > flat[2];\n    } else {\n      reverse = beginX > endX;\n    }\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport {equals} from '../../array.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\n\n/**\n * @typedef {import('../../structs/RBush.js').Entry<import('../../Feature.js').FeatureLike>} DeclutterEntry\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {DeclutterEntry} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {DeclutterEntry} Declutter rbush entry.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\n/**\n * Converts rich text to plain text for text along lines.\n * @param {string} result The resulting plain text.\n * @param {string} part Item of the rich text array.\n * @param {number} index Index of the item in the rich text array.\n * @return {string} The resulting plain text.\n */\nfunction richTextToPlainText(result, part, index) {\n  if (index % 2 === 0) {\n    result += part;\n  }\n  return result;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = Array.isArray(text)\n      ? text\n      : String(text).split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      context.fillStyle = /** @type {string} */ (fillInstruction[1]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFillInstruction, backgroundStrokeInstruction;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFillInstruction = /** @type {Array<*>} */ (\n              instruction[17]\n            );\n            backgroundStrokeInstruction = /** @type {Array<*>} */ (\n              instruction[18]\n            );\n          } else {\n            padding = defaultPadding;\n            backgroundFillInstruction = null;\n            backgroundStrokeInstruction = null;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              !!backgroundFillInstruction || !!backgroundStrokeInstruction,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFillInstruction,\n              backgroundStrokeInstruction,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string|Array<string>} */ (instruction[11]);\n          if (Array.isArray(text)) {\n            //FIXME Add support for rich text along lines\n            text = text.reduce(richTextToPlainText, '');\n          }\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textKeepUpright = /** @type {boolean} */ (instruction[15]);\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n              textKeepUpright,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport {ascending, descending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport Executor from './Executor.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @private\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /** @type {import(\"../../extent.js\").Extent|undefined} */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    /** @type {import(\"../canvas.js\").BuilderType} */\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default<import('./Executor.js').DeclutterEntry>|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(declutterTree ? descending : ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      const replays = this.executorsByZIndex_[zIndexKey];\n      for (let j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + j;\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {toFixed} from '../../math.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   * @override\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   * @override\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   * @override\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   * @override\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport {ascending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {clamp} from '../../math.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {Icon} from '../../style.js';\nimport CanvasImmediateRenderer from './Immediate.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport RenderEventType from '../../render/EventType.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  getTolerance as getRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.clipped_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {import(\"../../render.js\").OrderFunction|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedFrameDeclutter_;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      let transform = this.getRenderTransform(\n        center,\n        resolution,\n        0,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      if (frameState.declutter) {\n        transform = transform.slice(0);\n      }\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    if (this.clipped_) {\n      this.context.restore();\n    }\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const viewState = frameState.viewState;\n\n    this.prepareContainer(frameState, target);\n    const context = this.context;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return this.container;\n      }\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    this.clipped_ = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      this.clipped_ = render && !containsExtent(layerExtent, frameState.extent);\n      if (this.clipped_) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (!frameState.declutter && this.clipped_) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (\n        this.frameState &&\n        !this.hitDetectionImageData_ &&\n        !this.animatingOrInteracting_\n      ) {\n        const size = this.frameState.size.slice();\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const declutter = this.getLayer().getDeclutter();\n    return this.replayGroup_.forEachFeatureAtCoordinate(\n      coordinate,\n      resolution,\n      rotation,\n      hitTolerance,\n      featureCallback,\n      declutter\n        ? frameState.declutter?.[declutter]?.all().map((item) => item.value)\n        : null,\n    );\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      this.renderedFrameDeclutter_ === !!frameState.declutter &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedFrameDeclutter_ = !!frameState.declutter;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\nimport BaseVectorLayer from './BaseVector.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/featureloader\n */\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), a\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").FeatureLike]\n * @typedef {(\n *           extent: import(\"./extent.js\").Extent,\n *           resolution: number,\n *           projection: import(\"./proj/Projection.js\").default,\n *           success?: (features: Array<FeatureType>) => void,\n *           failure?: () => void) => void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector.js\").default<FeatureType>}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      (features, dataProjection) => {\n        this.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      () => {\n        this.changed();\n        if (failure !== undefined) {\n          failure();\n        }\n      },\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport {assert} from './asserts.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius in units of the projection.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout,\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent,\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  /**\n   * @override\n   */\n  getCoordinates() {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center),\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport Geometry from './Geometry.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(geometries[i], EventType.CHANGE, this.changed, this),\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(\n      cloneGeometries(this.geometries_),\n    );\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance,\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive(),\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(\n        simplifiedGeometries,\n      );\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  return geometries.map((geometry) => geometry.clone());\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n      this.getExtent(),\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * Return the sum of all line string lengths\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    const ends = this.ends_;\n    let start = 0;\n    let length = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      length += lineStringLength(\n        this.flatCoordinates,\n        start,\n        ends[i],\n        this.stride,\n      );\n      start = ends[i];\n    }\n    return length;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {extend} from '../array.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {import(\"rbush\").BBox & {value: T}} Entry\n * @template T\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template {Object} T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     * @type {RBush_<Entry<T>>}\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry<T>>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry<T>} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry<T>} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {import(\"rbush\").BBox} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   * @private\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush<T>} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * a simple string (e.g. `'© Acme Inc.'`)\n * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty} from '../obj.js';\nimport RenderFeature from '../render/Feature.js';\nimport RBush from '../structs/RBush.js';\nimport {getUid} from '../util.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureType} [feature] Feature.\n   * @param {Array<FeatureType>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureType|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureType>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent<FeatureType>, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader<FeatureType>} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader<import(\"../Feature.js\").FeatureLike>}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format || null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, this.format_);\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if a {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else if (!Array.isArray(indexedFeature)) {\n          this.idIndex_[id] = [indexedFeature, feature];\n        } else {\n          indexedFeature.push(feature);\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type {Array<FeatureType>} */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach((feature) => {\n          this.removeFeatureInternal(feature);\n        });\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with a {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    /** @type {Array<FeatureType>} */\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<FeatureType>|null}} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          /**\n           * @param {Array<FeatureType>} features Loaded features\n           */\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const obj = loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        return object;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   * @api\n   */\n  removeFeatures(features) {\n    let removed = false;\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      removed = this.removeFeatureInternal(features[i]) || removed;\n    }\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const removed = this.removeFeatureInternal(feature);\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} True if the feature was removed, false if it was not found.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (!(featureKey in this.uidIndex_)) {\n      return false;\n    }\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    featureChangeKeys?.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      const idString = id.toString();\n      const indexedFeature = this.idIndex_[idString];\n      if (indexedFeature === feature) {\n        delete this.idIndex_[idString];\n      } else if (Array.isArray(indexedFeature)) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n        if (indexedFeature.length === 1) {\n          this.idIndex_[idString] = indexedFeature[0];\n        }\n      }\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return true;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        break;\n      }\n    }\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n\n  /**\n   * @param {boolean} overlaps The source can have overlapping geometries.\n   */\n  setOverlaps(overlaps) {\n    this.overlaps_ = overlaps;\n    this.changed();\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/uri\n */\n\nimport {modulo} from './math.js';\nimport {hashZXY} from './tilecoord.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/vec/mat4\n */\n\n/** @typedef {Array<number>} Mat4 */\n\n/**\n * @return {Mat4} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Mat4} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Mat4} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @param {Mat4} [out] mat4 frustum matrix will be written into\n * @return {Mat4} out\n */\nexport function orthographic(left, right, bottom, top, near, far, out) {\n  out = out ?? create();\n  const lr = 1 / (left - right),\n    bt = 1 / (bottom - top),\n    nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3\n *\n * @param {Mat4} m The matrix to scale.\n * @param {number} x How much to scale in the x direction.\n * @param {number} y How much to scale in the y direction.\n * @param {number} z How much to scale in the z direction.\n * @param {Mat4} [out] The matrix to write to.\n * @return {Mat4} out\n */\nexport function scale(m, x, y, z, out) {\n  out = out ?? create();\n  out[0] = m[0] * x;\n  out[1] = m[1] * x;\n  out[2] = m[2] * x;\n  out[3] = m[3] * x;\n  out[4] = m[4] * y;\n  out[5] = m[5] * y;\n  out[6] = m[6] * y;\n  out[7] = m[7] * y;\n  out[8] = m[8] * z;\n  out[9] = m[9] * z;\n  out[10] = m[10] * z;\n  out[11] = m[11] * z;\n  out[12] = m[12];\n  out[13] = m[13];\n  out[14] = m[14];\n  out[15] = m[15];\n  return out;\n}\n\n/**\n * Translate a matrix.\n *\n * @param {Mat4} m the matrix to translate\n * @param {number} x How much to translate in the x direction.\n * @param {number} y How much to translate in the y direction.\n * @param {number} z How much to translate in the z direction.\n * @param {Mat4} [out] the receiving matrix\n * @return {Mat4} out\n */\nexport function translate(m, x, y, z, out) {\n  out = out ?? create();\n  let a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23;\n\n  if (m === out) {\n    out[12] = m[0] * x + m[4] * y + m[8] * z + m[12];\n    out[13] = m[1] * x + m[5] * y + m[9] * z + m[13];\n    out[14] = m[2] * x + m[6] * y + m[10] * z + m[14];\n    out[15] = m[3] * x + m[7] * y + m[11] * z + m[15];\n  } else {\n    a00 = m[0];\n    a01 = m[1];\n    a02 = m[2];\n    a03 = m[3];\n    a10 = m[4];\n    a11 = m[5];\n    a12 = m[6];\n    a13 = m[7];\n    a20 = m[8];\n    a21 = m[9];\n    a22 = m[10];\n    a23 = m[11];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n\n    out[12] = a00 * x + a10 * y + a20 * z + m[12];\n    out[13] = a01 * x + a11 * y + a21 * z + m[13];\n    out[14] = a02 * x + a12 * y + a22 * z + m[14];\n    out[15] = a03 * x + a13 * y + a23 * z + m[15];\n  }\n\n  return out;\n}\n\n/**\n * @param {number} x x translation.\n * @param {number} y y translation.\n * @param {number} z z translation.\n * @param {Mat4} [out] optional matrix to store result\n * @return {Mat4} out\n */\nexport function translation(x, y, z, out) {\n  out = out ?? create();\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = x;\n  out[13] = y;\n  out[14] = z;\n  out[15] = 1;\n\n  return out;\n}\n","import * as mat4 from '../vec/mat4.js';\n\n/**\n * @module ol/webgl/Canvas\n */\n\nconst VERTEX_SHADER = `\n  attribute vec4 a_position;\n  attribute vec4 a_texcoord;\n\n  uniform mat4 u_matrix;\n  uniform mat4 u_textureMatrix;\n\n  varying vec2 v_texcoord;\n\n  void main() {\n    gl_Position = u_matrix * a_position;\n    vec2 texcoord = (u_textureMatrix * a_texcoord).xy;\n    v_texcoord = texcoord;\n  }\n`;\n\nconst FRAGMENT_SHADER = `\n  precision mediump float;\n\n  varying vec2 v_texcoord;\n\n  uniform sampler2D u_texture;\n\n  void main() {\n    if (\n      v_texcoord.x < 0.0 ||\n      v_texcoord.y < 0.0 ||\n      v_texcoord.x > 1.0 ||\n      v_texcoord.y > 1.0\n    ) {\n      discard;\n    }\n    gl_FragColor = texture2D(u_texture, v_texcoord);\n  }\n`;\n\n/** @typedef {import(\"../transform.js\").Transform} Matrix */\n\n/**\n * Canvas-like operations implemented in webgl.\n */\nexport class Canvas {\n  /**\n   * @param {WebGLRenderingContext} gl Context to render in.\n   */\n  constructor(gl) {\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = gl;\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.program_ = createProgram(gl, FRAGMENT_SHADER, VERTEX_SHADER);\n\n    this.positionLocation = gl.getAttribLocation(this.program_, 'a_position');\n    this.texcoordLocation = gl.getAttribLocation(this.program_, 'a_texcoord');\n\n    this.matrixLocation = gl.getUniformLocation(this.program_, 'u_matrix');\n    this.textureMatrixLocation = gl.getUniformLocation(\n      this.program_,\n      'u_textureMatrix',\n    );\n    this.textureLocation = gl.getUniformLocation(this.program_, 'u_texture');\n\n    this.positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n\n    this.positions = [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1];\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(this.positions),\n      gl.STATIC_DRAW,\n    );\n\n    this.texcoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n\n    this.texcoords = [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1];\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(this.texcoords),\n      gl.STATIC_DRAW,\n    );\n  }\n\n  /**\n   * 2dContext drawImage call implemented in webgl.\n   * Unlike images, textures do not have a width and height associated\n   * with them so we'll pass in the width and height of the texture.\n   *\n   * @param {WebGLTexture} tex Image to draw.\n   * @param {number} texWidth Image width.\n   * @param {number} texHeight Image height.\n   * @param {number} srcX Top-left x-point to read src image.\n   * @param {number} srcY Top-left y-point to read src image.\n   * @param {number} [srcWidth] Width of source to read.\n   * @param {number} [srcHeight] Height of source to read.\n   * @param {number} [dstX] Top-left x-point of destination.\n   * @param {number} [dstY] Top-left y-point of destination.\n   * @param {number} [dstWidth] Width of written image in destination.\n   * @param {number} [dstHeight] Height of written image in destination.\n   * @param {number} [width] Width of canvas.\n   * @param {number} [height] Height of canvas.\n   */\n  drawImage(\n    tex,\n    texWidth,\n    texHeight,\n    srcX,\n    srcY,\n    srcWidth,\n    srcHeight,\n    dstX,\n    dstY,\n    dstWidth,\n    dstHeight,\n    width,\n    height,\n  ) {\n    const gl = this.gl_;\n\n    if (dstX === undefined) {\n      dstX = srcX;\n    }\n    if (dstY === undefined) {\n      dstY = srcY;\n    }\n    if (srcWidth === undefined) {\n      srcWidth = texWidth;\n    }\n    if (srcHeight === undefined) {\n      srcHeight = texHeight;\n    }\n    if (dstWidth === undefined) {\n      dstWidth = srcWidth;\n    }\n    if (dstHeight === undefined) {\n      dstHeight = srcHeight;\n    }\n    if (width === undefined) {\n      width = gl.canvas.width;\n    }\n    if (height === undefined) {\n      height = gl.canvas.height;\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, tex);\n\n    gl.useProgram(this.program_);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n    gl.enableVertexAttribArray(this.positionLocation);\n    gl.vertexAttribPointer(this.positionLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n    gl.enableVertexAttribArray(this.texcoordLocation);\n    gl.vertexAttribPointer(this.texcoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n    // matrix for converting pixels to clip space\n    let matrix = mat4.orthographic(0, width, 0, height, -1, 1);\n    matrix = mat4.translate(matrix, dstX, dstY, 0);\n    matrix = mat4.scale(matrix, dstWidth, dstHeight, 1);\n    gl.uniformMatrix4fv(this.matrixLocation, false, matrix);\n\n    let texMatrix = mat4.translation(srcX / texWidth, srcY / texHeight, 0);\n    texMatrix = mat4.scale(\n      texMatrix,\n      srcWidth / texWidth,\n      srcHeight / texHeight,\n      1,\n    );\n\n    gl.uniformMatrix4fv(this.textureMatrixLocation, false, texMatrix);\n    gl.uniform1i(this.textureLocation, 0);\n    gl.drawArrays(gl.TRIANGLES, 0, this.positions.length / 2);\n  }\n}\n\n/**\n * @param {WebGLRenderingContext} gl Rendering Context.\n * @param {GLenum} type Type of shader.\n * @param {string} source source of shader.\n * @return {WebGLShader} [progam] The program.\n */\nfunction createShader(gl, type, source) {\n  const shader = gl.createShader(type);\n\n  if (shader === null) {\n    throw new Error('Shader compilation failed');\n  }\n\n  gl.shaderSource(shader, source);\n\n  gl.compileShader(shader);\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    const log = gl.getShaderInfoLog(shader);\n    if (log === null) {\n      throw new Error('Shader info log creation failed');\n    }\n    throw new Error(log);\n  }\n\n  return shader;\n}\n\n/**\n * @param {WebGLRenderingContext} gl Rendering Context.\n * @param {string} fragmentSource Fragment shader source.\n * @param {string} vertexSource Vertex shader source.\n * @return {WebGLProgram} [progam] The program.\n */\nexport function createProgram(gl, fragmentSource, vertexSource) {\n  const program = gl.createProgram();\n\n  const vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexSource);\n  const fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentSource);\n  if (program === null) {\n    throw new Error('Program creation failed');\n  }\n\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n\n  gl.linkProgram(program);\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    const log = gl.getProgramInfoLog(program);\n    if (log === null) {\n      throw new Error('Program info log creation failed');\n    }\n    throw new Error();\n  }\n  return program;\n}\n","/**\n * @module ol/reproj/glreproj\n */\nimport {\n  createEmpty,\n  extend,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from '../extent.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport * as mat4 from '../vec/mat4.js';\nimport {Canvas as WebGLCanvas, createProgram} from '../webgl/Canvas.js';\n\nconst EDGE_VERTEX_SHADER = `\n  attribute vec4 a_position;\n\n  uniform mat4 u_matrix;\n\n  void main() {\n     gl_Position = u_matrix * a_position;\n  }\n`;\nconst EDGE_FRAGMENT_SHADER = `\n  precision mediump float;\n\n  uniform vec4 u_val;\n  void main() {\n     gl_FragColor = u_val;\n  }\n`;\n\nconst TRIANGLE_VERTEX_SHADER = `\n  attribute vec4 a_position;\n  attribute vec2 a_texcoord;\n\n  varying vec2 v_texcoord;\n\n  uniform mat4 u_matrix;\n\n  void main() {\n     gl_Position = u_matrix * a_position;\n     v_texcoord = a_texcoord;\n  }\n`;\nconst TRIANGLE_FRAGMENT_SHADER = `\n  precision mediump float;\n\n  varying vec2 v_texcoord;\n\n  uniform sampler2D u_texture;\n\n  void main() {\n    if (v_texcoord.x < 0.0 || v_texcoord.x > 1.0 || v_texcoord.y < 0.0 || v_texcoord.y > 1.0) {\n      discard;\n    }\n    gl_FragColor = texture2D(u_texture, v_texcoord);\n  }\n`;\n\n/**\n * Create an html canvas element and returns its webgl context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement | OffscreenCanvas>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {WebGLContextAttributes} [settings] CanvasRenderingContext2DSettings\n * @return {WebGLRenderingContext} The context.\n */\nexport function createCanvasContextWebGL(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {WebGLRenderingContext} */ (\n    canvas.getContext('webgl', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {WebGLRenderingContext} gl Context.\n */\nexport function releaseGLCanvas(gl) {\n  const canvas = gl.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n}\n\n/**\n * @type {Array<HTMLCanvasElement | OffscreenCanvas>}\n */\nexport const canvasGLPool = [];\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"../extent.js\").Extent} extent Extent.\n * @property {import(\"../extent.js\").Extent} [clipExtent] Clip extent.\n * @property {WebGLTexture} texture Texture.\n * @property {number} width Width of texture.\n * @property {number} height Height of texture.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {WebGLRenderingContext} gl the context to render in.\n * @param {number} width_ Width of the canvas.\n * @param {number} height_ Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"../extent.js\").Extent} targetExtent Target extent (tile).\n * @param {import(\"../reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {number} dataType What kind of data is the textures, must be gl.FLOAT or gl.UNSIGNED_BYTE\n * TODO: Allow setting renderEdges value in the data as this is done in \"data-space\".\n * @param {boolean | Array<number>} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchTexture.\n * @return {{framebuffer: WebGLFramebuffer, width: number, height: number, texture: WebGLTexture}} Canvas with reprojected data.\n */\nexport function render(\n  gl,\n  width_,\n  height_,\n  pixelRatio,\n  sourceResolution,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  dataType,\n  renderEdges,\n  interpolate,\n  drawSingle,\n) {\n  const width = Math.round(pixelRatio * width_);\n  const height = Math.round(pixelRatio * height_);\n  gl.canvas.width = width;\n  gl.canvas.height = height;\n\n  /** @type {WebGLFramebuffer | null} */\n  let resultFrameBuffer;\n  /** @type {WebGLTexture | null} */\n  let resultTexture;\n  {\n    resultTexture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, resultTexture);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    if (interpolate) {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    } else {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    }\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA,\n      width,\n      height,\n      0,\n      gl.RGBA,\n      dataType,\n      null,\n    );\n\n    resultFrameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, resultFrameBuffer);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      resultTexture,\n      0,\n    );\n  }\n\n  if (resultFrameBuffer === null) {\n    throw new Error('Could not create framebuffer');\n  }\n  if (resultTexture === null) {\n    throw new Error('Could not create texture');\n  }\n\n  if (sources.length === 0) {\n    return {\n      width,\n      height,\n      framebuffer: resultFrameBuffer,\n      texture: resultTexture,\n    };\n  }\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  /** @type {WebGLTexture | null} */\n  let stitchTexture;\n  /** @type {number} */\n  let stitchWidth;\n  /** @type {number} */\n  let stitchHeight;\n  const stitchScale = 1 / sourceResolution;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchTexture = gl.createTexture();\n    if (resultTexture === null) {\n      throw new Error('Could not create texture');\n    }\n    stitchWidth = Math.round(getWidth(sourceDataExtent) * stitchScale);\n    stitchHeight = Math.round(getHeight(sourceDataExtent) * stitchScale);\n\n    // Make sure we do not exceed the max texture size by lowering the resolution for this image.\n    // https://github.com/openlayers/openlayers/pull/15860#issuecomment-2254123580\n    const maxTexSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    const largeSide = Math.max(stitchWidth, stitchHeight);\n    const scaleFactor = largeSide > maxTexSize ? maxTexSize / largeSide : 1;\n    const stitchWidthFixed = Math.round(stitchWidth * scaleFactor);\n    const stitchHeightFixed = Math.round(stitchHeight * scaleFactor);\n\n    gl.bindTexture(gl.TEXTURE_2D, stitchTexture);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    if (interpolate) {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    } else {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    }\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA,\n      stitchWidthFixed,\n      stitchHeightFixed,\n      0,\n      gl.RGBA,\n      dataType,\n      null,\n    );\n\n    const fb = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      stitchTexture,\n      0,\n    );\n    const webGLCanvas = new WebGLCanvas(gl);\n\n    sources.forEach(function (src, i, arr) {\n      const xPos =\n        (src.extent[0] - sourceDataExtent[0]) * stitchScale * scaleFactor;\n      const yPos =\n        -(src.extent[3] - sourceDataExtent[3]) * stitchScale * scaleFactor;\n      const srcWidth = getWidth(src.extent) * stitchScale * scaleFactor;\n      const srcHeight = getHeight(src.extent) * stitchScale * scaleFactor;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\n      gl.viewport(0, 0, stitchWidthFixed, stitchHeightFixed);\n\n      if (src.clipExtent) {\n        const xPos =\n          (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale * scaleFactor;\n        const yPos =\n          -(src.clipExtent[3] - sourceDataExtent[3]) *\n          stitchScale *\n          scaleFactor;\n        const width = getWidth(src.clipExtent) * stitchScale * scaleFactor;\n        const height = getHeight(src.clipExtent) * stitchScale * scaleFactor;\n        gl.enable(gl.SCISSOR_TEST);\n        gl.scissor(\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n          interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n        );\n      }\n\n      webGLCanvas.drawImage(\n        src.texture,\n        src.width,\n        src.height,\n        gutter,\n        gutter,\n        src.width - 2 * gutter,\n        src.height - 2 * gutter,\n        interpolate ? xPos : Math.round(xPos),\n        interpolate ? yPos : Math.round(yPos),\n        interpolate ? srcWidth : Math.round(xPos + srcWidth) - Math.round(xPos),\n        interpolate\n          ? srcHeight\n          : Math.round(yPos + srcHeight) - Math.round(yPos),\n        stitchWidthFixed,\n        stitchHeightFixed,\n      );\n\n      gl.disable(gl.SCISSOR_TEST);\n    });\n    gl.deleteFramebuffer(fb);\n  } else {\n    stitchTexture = sources[0].texture;\n    stitchWidth = sources[0].width;\n    stitchHeight = sources[0].width;\n  }\n\n  const targetTopLeft = getTopLeft(targetExtent);\n  const sourceTopLeft = getTopLeft(sourceDataExtent);\n\n  const getUVs = (\n    /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ target,\n  ) => {\n    const u0 =\n      ((target[0][0] - targetTopLeft[0]) / targetResolution) * pixelRatio;\n    const v0 =\n      (-(target[0][1] - targetTopLeft[1]) / targetResolution) * pixelRatio;\n    const u1 =\n      ((target[1][0] - targetTopLeft[0]) / targetResolution) * pixelRatio;\n    const v1 =\n      (-(target[1][1] - targetTopLeft[1]) / targetResolution) * pixelRatio;\n    const u2 =\n      ((target[2][0] - targetTopLeft[0]) / targetResolution) * pixelRatio;\n    const v2 =\n      (-(target[2][1] - targetTopLeft[1]) / targetResolution) * pixelRatio;\n    return {u1, v1, u0, v0, u2, v2};\n  };\n\n  gl.bindFramebuffer(gl.FRAMEBUFFER, resultFrameBuffer);\n  gl.viewport(0, 0, width, height);\n\n  // Draw source to reprojtile\n  {\n    /** @type {Array<number>} */\n    const vertices = [];\n    /** @type {Array<number>} */\n    const texcoords = [];\n\n    const triProgram = createProgram(\n      gl,\n      TRIANGLE_FRAGMENT_SHADER,\n      TRIANGLE_VERTEX_SHADER,\n    );\n    gl.useProgram(triProgram);\n\n    // Bind image\n    const textureLocation = gl.getUniformLocation(triProgram, 'u_texture');\n    gl.bindTexture(gl.TEXTURE_2D, stitchTexture);\n\n    // Tell the shader to get the texture from texture unit 0\n    gl.uniform1i(textureLocation, 0);\n\n    // Calculate vert and tex coordinates.\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const source = triangle.source;\n      const target = triangle.target;\n      // Make sure that everything is on pixel boundaries\n      const {u1, v1, u0, v0, u2, v2} = getUVs(target);\n\n      const su0 =\n        (source[0][0] - sourceTopLeft[0]) / sourceResolution / stitchWidth;\n      const sv0 =\n        -(source[0][1] - sourceTopLeft[1]) / sourceResolution / stitchHeight;\n      const su1 =\n        (source[1][0] - sourceTopLeft[0]) / sourceResolution / stitchWidth;\n      const sv1 =\n        -(source[1][1] - sourceTopLeft[1]) / sourceResolution / stitchHeight;\n      const su2 =\n        (source[2][0] - sourceTopLeft[0]) / sourceResolution / stitchWidth;\n      const sv2 =\n        -(source[2][1] - sourceTopLeft[1]) / sourceResolution / stitchHeight;\n\n      vertices.push(u1, v1, u0, v0, u2, v2);\n      texcoords.push(su1, sv1, su0, sv0, su2, sv2);\n    });\n\n    // Convert pixel space to clip space.\n    const matrix = mat4.orthographic(0, width, height, 0, -1, 1);\n    const matrixLocation = gl.getUniformLocation(triProgram, 'u_matrix');\n    gl.uniformMatrix4fv(matrixLocation, false, matrix);\n\n    const positionLocation = gl.getAttribLocation(triProgram, 'a_position');\n    const positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\n    gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(positionLocation);\n\n    const texcoordLocation = gl.getAttribLocation(triProgram, 'a_texcoord');\n    const texcoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(texcoords), gl.STATIC_DRAW);\n    gl.vertexAttribPointer(texcoordLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(texcoordLocation);\n\n    gl.drawArrays(gl.TRIANGLES, 0, vertices.length / 2);\n  }\n\n  if (renderEdges) {\n    const edgeProgram = createProgram(\n      gl,\n      EDGE_FRAGMENT_SHADER,\n      EDGE_VERTEX_SHADER,\n    );\n    gl.useProgram(edgeProgram);\n    const matrix = mat4.orthographic(0, width, height, 0, -1, 1);\n    const matrixLocation = gl.getUniformLocation(edgeProgram, 'u_matrix');\n    gl.uniformMatrix4fv(matrixLocation, false, matrix);\n\n    const burnval = Array.isArray(renderEdges) ? renderEdges : [0, 0, 0, 255];\n    const burnvalLocation = gl.getUniformLocation(edgeProgram, 'u_val');\n    const isFloat = true;\n    if (isFloat) {\n      gl.uniform4fv(burnvalLocation, burnval);\n    } else {\n      gl.uniform4iv(burnvalLocation, burnval);\n    }\n\n    const positionLocation = gl.getAttribLocation(edgeProgram, 'a_position');\n    const positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n    gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(positionLocation);\n\n    /** @type {Array<number>} */\n    const lines = triangulation.getTriangles().reduce(function (\n      /** @type {Array<number>} */ lines,\n      triangle,\n    ) {\n      const target = triangle.target;\n      const {u1, v1, u0, v0, u2, v2} = getUVs(target);\n\n      return lines.concat([u1, v1, u0, v0, u0, v0, u2, v2, u2, v2, u1, v1]);\n    }, []);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(lines), gl.STATIC_DRAW);\n    gl.drawArrays(gl.LINES, 0, lines.length / 2);\n  }\n\n  return {\n    width,\n    height,\n    framebuffer: resultFrameBuffer,\n    texture: resultTexture,\n  };\n}\n","/**\n * @module ol/reproj/DataTile\n */\n\nimport DataTile, {asArrayLike, asImageLike, toArray} from '../DataTile.js';\nimport TileState from '../TileState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceExtentResolution} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\nimport {\n  canvasGLPool,\n  createCanvasContextWebGL,\n  releaseGLCanvas,\n  render as renderReprojected,\n} from './glreproj.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../DataTile.js\").default} TileGetter\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {DataTile} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n * @property {import(\"../proj/Projection.js\").default} targetProj Target projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n * @property {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n * @property {import(\"../tilecoord.js\").TileCoord} [wrappedTileCoord] Coordinate of the tile wrapped in X.\n * @property {number} pixelRatio Pixel ratio.\n * @property {number} gutter Gutter of the source tiles.\n * @property {TileGetter} getTileFunction Function returning source tiles (z, x, y, pixelRatio).\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {number} [errorThreshold] Acceptable reprojection error (in px).\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {import(\"../transform.js\").Transform} [transformMatrix] Source transform matrix.\n * @property {boolean} [renderEdges] Render reprojection edges.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected data tile.\n * See {@link module:ol/source/DataTile~DataTileSource}.\n *\n */\nclass ReprojDataTile extends DataTile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    super({\n      tileCoord: options.tileCoord,\n      loader: () => Promise.resolve(new Uint8ClampedArray(4)),\n      interpolate: options.interpolate,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {boolean | Array<number>}\n     */\n    this.renderEdges_ =\n      options.renderEdges !== undefined ? options.renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     * @private\n     */\n    this.reprojData_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.reprojError_ = null;\n\n    /**\n     * @type {import('../size.js').Size}\n     * @private\n     */\n    this.reprojSize_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = options.sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = options.targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = options.wrappedTileCoord || options.tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const sourceProj = options.sourceProj;\n    const sourceProjExtent = sourceProj.getExtent();\n    const sourceTileGridExtent = options.sourceTileGrid.getExtent();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceTileGridExtent\n        ? getIntersection(sourceProjExtent, sourceTileGridExtent)\n        : sourceProjExtent\n      : sourceTileGridExtent;\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = this.targetTileGrid_.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const targetProj = options.targetProj;\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      options.errorThreshold !== undefined\n        ? options.errorThreshold\n        : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n      options.transformMatrix,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = this.sourceTileGrid_.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = this.sourceTileGrid_.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n        const getTile = options.getTileFunction;\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTile(this.sourceZ_, srcX, srcY, this.pixelRatio_);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('../size.js').Size} Tile size.\n   * @override\n   */\n  getSize() {\n    return this.reprojSize_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {import(\"../DataTile.js\").Data} Tile data.\n   * @override\n   */\n  getData() {\n    return this.reprojData_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @override\n   */\n  getError() {\n    return this.reprojError_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const dataSources = [];\n    let imageLike = false;\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const size = tile.getSize();\n      const gutter = this.gutter_;\n      /**\n       * @type {import(\"../DataTile.js\").ArrayLike}\n       */\n      let tileData;\n      const arrayData = asArrayLike(tile.getData());\n      if (arrayData) {\n        tileData = arrayData;\n      } else {\n        imageLike = true;\n        tileData = toArray(asImageLike(tile.getData()));\n      }\n      const pixelSize = [size[0] + 2 * gutter, size[1] + 2 * gutter];\n      const isFloat = tileData instanceof Float32Array;\n      const pixelCount = pixelSize[0] * pixelSize[1];\n      const DataType = isFloat ? Float32Array : Uint8ClampedArray;\n      const tileDataR = new DataType(tileData.buffer);\n      const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n      const bytesPerPixel = (bytesPerElement * tileDataR.length) / pixelCount;\n      const bytesPerRow = tileDataR.byteLength / pixelSize[1];\n      const bandCount = Math.floor(\n        bytesPerRow / bytesPerElement / pixelSize[0],\n      );\n      const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n      extent[0] += source.offset;\n      extent[2] += source.offset;\n      const clipExtent = this.clipExtent_?.slice();\n      if (clipExtent) {\n        clipExtent[0] += source.offset;\n        clipExtent[2] += source.offset;\n      }\n      dataSources.push({\n        extent: extent,\n        clipExtent: clipExtent,\n        data: tileDataR,\n        dataType: DataType,\n        bytesPerPixel: bytesPerPixel,\n        pixelSize: pixelSize,\n        bandCount: bandCount,\n      });\n    });\n    this.sourceTiles_.length = 0;\n\n    if (dataSources.length === 0) {\n      this.state = TileState.ERROR;\n      this.changed();\n      return;\n    }\n\n    const z = this.wrappedTileCoord_[0];\n    const size = this.targetTileGrid_.getTileSize(z);\n    const targetWidth = typeof size === 'number' ? size : size[0];\n    const targetHeight = typeof size === 'number' ? size : size[1];\n    const outWidth = targetWidth * this.pixelRatio_;\n    const outHeight = targetHeight * this.pixelRatio_;\n    const targetResolution = this.targetTileGrid_.getResolution(z);\n    const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n\n    const bandCount = dataSources[0].bandCount;\n    const dataR = new dataSources[0].dataType(bandCount * outWidth * outHeight);\n\n    const gl = createCanvasContextWebGL(outWidth, outHeight, canvasGLPool, {\n      premultipliedAlpha: false,\n      antialias: false,\n    });\n\n    let willInterpolate;\n    const format = gl.RGBA;\n    let textureType;\n    if (dataSources[0].dataType == Float32Array) {\n      textureType = gl.FLOAT;\n      gl.getExtension('WEBGL_color_buffer_float');\n      gl.getExtension('OES_texture_float');\n      gl.getExtension('EXT_float_blend');\n      const extension = gl.getExtension('OES_texture_float_linear');\n      const canInterpolate = extension !== null;\n      willInterpolate = canInterpolate && this.interpolate;\n    } else {\n      textureType = gl.UNSIGNED_BYTE;\n      willInterpolate = this.interpolate;\n    }\n\n    const BANDS_PR_REPROJ = 4;\n    const reprojs = Math.ceil(bandCount / BANDS_PR_REPROJ);\n    for (let reproj = reprojs - 1; reproj >= 0; --reproj) {\n      const sources = [];\n      for (let i = 0, len = dataSources.length; i < len; ++i) {\n        const dataSource = dataSources[i];\n\n        const pixelSize = dataSource.pixelSize;\n        const width = pixelSize[0];\n        const height = pixelSize[1];\n\n        const data = new dataSource.dataType(BANDS_PR_REPROJ * width * height);\n        const dataS = dataSource.data;\n        let offset = reproj * BANDS_PR_REPROJ;\n        for (let j = 0, len = data.length; j < len; j += BANDS_PR_REPROJ) {\n          data[j] = dataS[offset];\n          data[j + 1] = dataS[offset + 1];\n          data[j + 2] = dataS[offset + 2];\n          data[j + 3] = dataS[offset + 3];\n          offset += bandCount;\n        }\n\n        const texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n\n        if (willInterpolate) {\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        } else {\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        }\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texImage2D(\n          gl.TEXTURE_2D,\n          0,\n          format,\n          width,\n          height,\n          0,\n          format,\n          textureType,\n          data,\n        );\n\n        sources.push({\n          extent: dataSource.extent,\n          clipExtent: dataSource.clipExtent,\n          texture: texture,\n          width: width,\n          height: height,\n        });\n      }\n\n      const {framebuffer, width, height} = renderReprojected(\n        gl,\n        targetWidth,\n        targetHeight,\n        this.pixelRatio_,\n        sourceResolution,\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        textureType,\n        this.renderEdges_,\n        willInterpolate,\n      );\n\n      // The texture is always RGBA.\n      const rows = width;\n      const cols = height * BANDS_PR_REPROJ;\n      const data = new dataSources[0].dataType(rows * cols);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n      gl.readPixels(0, 0, width, height, gl.RGBA, textureType, data);\n\n      let offset = reproj * BANDS_PR_REPROJ;\n      for (let i = 0, len = data.length; i < len; i += BANDS_PR_REPROJ) {\n        // The data read by `readPixels` is flipped in the y-axis so flip it again.\n        const flipY = (rows - 1 - ((i / cols) | 0)) * cols + (i % cols);\n        dataR[offset] = data[flipY];\n        dataR[offset + 1] = data[flipY + 1];\n        dataR[offset + 2] = data[flipY + 2];\n        dataR[offset + 3] = data[flipY + 3];\n        offset += bandCount;\n      }\n    }\n\n    releaseGLCanvas(gl);\n    canvasGLPool.push(gl.canvas);\n\n    if (imageLike) {\n      const context = createCanvasContext2D(targetWidth, targetHeight);\n      const imageData = new ImageData(dataR, targetWidth);\n      context.putImageData(imageData, 0, 0);\n      this.reprojData_ = context.canvas;\n    } else {\n      this.reprojData_ = dataR;\n    }\n    this.reprojSize_ = [Math.round(outWidth), Math.round(outHeight)];\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach(({tile}) => {\n      const state = tile.getState();\n      if (state !== TileState.IDLE && state !== TileState.LOADING) {\n        return;\n      }\n      leftToLoad++;\n\n      const sourceListenKey = listen(tile, EventType.CHANGE, () => {\n        const state = tile.getState();\n        if (\n          state == TileState.LOADED ||\n          state == TileState.ERROR ||\n          state == TileState.EMPTY\n        ) {\n          unlistenByKey(sourceListenKey);\n          leftToLoad--;\n          if (leftToLoad === 0) {\n            this.unlistenSources_();\n            this.reproject_();\n          }\n        }\n      });\n      this.sourcesListenerKeys_.push(sourceListenKey);\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    } else {\n      this.sourceTiles_.forEach(function ({tile}) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojDataTile;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {toSize} from './size.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {abstract, getUid} from '../util.js';\nimport Source from './Source.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     * @protected\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || getUid(this);\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    const gridProjection =\n      projection !== undefined ? projection : this.getProjection();\n    const tileGrid =\n      projection !== undefined\n        ? this.getTileGridForProjection(gridProjection)\n        : this.tileGrid || this.getTileGridForProjection(gridProjection);\n    if (this.getWrapX() && gridProjection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, gridProjection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached reprojected tiles from the source. The next render cycle will create new tiles.\n   * @api\n   */\n  clear() {}\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/DataTile\n */\nimport DataTile from '../DataTile.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport {toPromise} from '../functions.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojDataTile from '../reproj/DataTile.js';\nimport {toSize} from '../size.js';\nimport {\n  createXYZ,\n  extentFromProjection,\n  getForProjection as getTileGridForProjection,\n} from '../tilegrid.js';\nimport {getUid} from '../util.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\n\n/**\n * @typedef {'anonymous'|'use-credentials'} CrossOriginAttribute\n */\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {AbortSignal} signal An abort controller signal.\n * @property {CrossOriginAttribute} [crossOrigin] The cross-origin attribute for images.\n * @property {number} [maxY] The maximum y coordinate at the given z level.  Will be undefined if the\n * underlying tile grid does not have a known extent.\n */\n\n/**\n * Data tile loading function.  The function is called with z, x, and y tile coordinates and\n * returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * @typedef {function(number, number, number, LoaderOptions) : (import(\"../DataTile.js\").Data|Promise<import(\"../DataTile.js\").Data>)} Loader\n */\n\n/**\n * @typedef {Object} Options\n * @property {Loader} [loader] Data loader.  Called with z, x, and y tile coordinates.\n * Returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The pixel width and height of the source tiles.\n * This may be different than the rendered pixel size if a `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around data tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported data should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Tile projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"./Source.js\").State} [state] The source state.\n * @property {boolean} [wrapX=false] Render tiles beyond the antimeridian.\n * @property {number} [transition] Transition time when fading in new tiles (in milliseconds).\n * @property {number} [bandCount=4] Number of bands represented in the data.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {CrossOriginAttribute} [crossOrigin='anonymous'] The crossOrigin property to pass to loaders for image data.\n * @property {string} [key] Key for use in caching tiles.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * A source for typed array data tiles.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @template {import(\"../Tile.js\").default} [TileType=DataTile]\n * @extends TileSource<TileType>\n * @api\n */\nclass DataTileSource extends TileSource {\n  /**\n   * @param {Options} options DataTile source options.\n   */\n  constructor(options) {\n    const projection =\n      options.projection === undefined ? 'EPSG:3857' : options.projection;\n\n    let tileGrid = options.tileGrid;\n    if (tileGrid === undefined && projection) {\n      tileGrid = createXYZ({\n        extent: extentFromProjection(projection),\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize,\n      });\n    }\n\n    super({\n      cacheSize: 0.1, // don't cache on the source\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: projection,\n      tileGrid: tileGrid,\n      state: options.state,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {import('../size.js').Size|null}\n     */\n    this.tileSize_ = options.tileSize ? toSize(options.tileSize) : null;\n\n    /**\n     * @private\n     * @type {Array<import('../size.js').Size>|null}\n     */\n    this.tileSizes_ = null;\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n    /**\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @private\n     */\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = options.bandCount === undefined ? 4 : options.bandCount; // assume RGBA if undefined\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection_ = {};\n\n    /**\n     * @private\n     * @type {CrossOriginAttribute}\n     */\n    this.crossOrigin_ = options.crossOrigin || 'anonymous';\n\n    /**\n     * @type {import(\"../transform.js\").Transform|null}\n     */\n    this.transformMatrix = null;\n  }\n\n  /**\n   * Set the source tile sizes.  The length of the array is expected to match the number of\n   * levels in the tile grid.\n   * @protected\n   * @param {Array<import('../size.js').Size>} tileSizes An array of tile sizes.\n   */\n  setTileSizes(tileSizes) {\n    this.tileSizes_ = tileSizes;\n  }\n\n  /**\n   * Get the source tile size at the given zoom level.  This may be different than the rendered tile\n   * size.\n   * @protected\n   * @param {number} z Tile zoom level.\n   * @return {import('../size.js').Size} The source tile size.\n   */\n  getTileSize(z) {\n    if (this.tileSizes_) {\n      return this.tileSizes_[z];\n    }\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    const tileGrid = this.getTileGrid();\n    return tileGrid ? toSize(tileGrid.getTileSize(z)) : [256, 256];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutterForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (\n      (!thisProj || equivalent(thisProj, projection)) &&\n      !this.transformMatrix\n    ) {\n      return this.gutter_;\n    }\n\n    return 0;\n  }\n\n  /**\n   * @param {Loader} loader The data loader.\n   * @protected\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} targetProj The output projection.\n   * @param {import(\"../proj/Projection.js\").default} sourceProj The input projection.\n   * @return {!TileType} Tile.\n   */\n  getReprojTile_(z, x, y, targetProj, sourceProj) {\n    const sourceTileGrid =\n      this.tileGrid || this.getTileGridForProjection(sourceProj || targetProj);\n    const reprojTilePixelRatio = Math.max.apply(\n      null,\n      sourceTileGrid.getResolutions().map((r, z) => {\n        const tileSize = toSize(sourceTileGrid.getTileSize(z));\n        const textureSize = this.getTileSize(z);\n        return Math.max(\n          textureSize[0] / tileSize[0],\n          textureSize[1] / tileSize[1],\n        );\n      }),\n    );\n\n    const targetTileGrid = this.getTileGridForProjection(targetProj);\n    const tileCoord = [z, x, y];\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      targetProj,\n    );\n\n    const options = Object.assign(\n      {\n        sourceProj: sourceProj || targetProj,\n        sourceTileGrid,\n        targetProj,\n        targetTileGrid,\n        tileCoord,\n        wrappedTileCoord,\n        pixelRatio: reprojTilePixelRatio,\n        gutter: this.gutter_,\n        getTileFunction: (z, x, y, pixelRatio) =>\n          this.getTile(z, x, y, pixelRatio),\n        transformMatrix: this.transformMatrix,\n      },\n      /** @type {import(\"../reproj/DataTile.js\").Options} */ (this.tileOptions),\n    );\n    const tile = /** @type {TileType} */ (\n      /** @type {*} */ (new ReprojDataTile(options))\n    );\n    tile.key = this.getKey();\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {TileType|null} Tile (or null if outside source extent).\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      projection &&\n      ((sourceProjection && !equivalent(sourceProjection, projection)) ||\n        this.transformMatrix)\n    ) {\n      return this.getReprojTile_(z, x, y, projection, sourceProjection);\n    }\n\n    const size = this.getTileSize(z);\n\n    const sourceLoader = this.loader_;\n\n    const controller = new AbortController();\n\n    /**\n     * @type {LoaderOptions}\n     */\n    const loaderOptions = {\n      signal: controller.signal,\n      crossOrigin: this.crossOrigin_,\n    };\n\n    const tileCoord = this.getTileCoordForTileUrlFunction([z, x, y]);\n    if (!tileCoord) {\n      return null;\n    }\n\n    const requestZ = tileCoord[0];\n    const requestX = tileCoord[1];\n    const requestY = tileCoord[2];\n    const range = this.getTileGrid()?.getFullTileRange(requestZ);\n    if (range) {\n      loaderOptions.maxY = range.getHeight() - 1;\n    }\n    function loader() {\n      return toPromise(function () {\n        return sourceLoader(requestZ, requestX, requestY, loaderOptions);\n      });\n    }\n\n    /**\n     * @type {import(\"../DataTile.js\").Options}\n     */\n    const options = Object.assign(\n      {\n        tileCoord: [z, x, y],\n        loader: loader,\n        size: size,\n        controller: controller,\n      },\n      this.tileOptions,\n    );\n\n    const tile = /** @type {TileType} */ (\n      /** @type {*} */ (new DataTile(options))\n    );\n    tile.key = this.getKey();\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n\n    return tile;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   */\n  handleTileChange_(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (\n      this.tileGrid &&\n      (!thisProj || equivalent(thisProj, projection)) &&\n      !this.transformMatrix\n    ) {\n      return this.tileGrid;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection_)) {\n      this.tileGridForProjection_[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection_[projKey];\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection_)) {\n        this.tileGridForProjection_[projKey] = tilegrid;\n      }\n    }\n  }\n}\n\nexport default DataTileSource;\n","/**\n * @module ol/source/ImageTile\n */\nimport {expandUrl, pickUrl, renderXYZTemplate} from '../uri.js';\nimport DataTileSource from './DataTile.js';\n\n/**\n * Image tile loading function.  The function is called with z, x, and y tile coordinates and\n * returns an {@link import(\"../DataTile.js\").ImageLike image} or a promise for the same.\n *\n * @typedef {function(number, number, number, import(\"./DataTile.js\").LoaderOptions):(import(\"../DataTile.js\").ImageLike|Promise<import(\"../DataTile.js\").ImageLike>)} Loader\n */\n\n/**\n * @typedef {function(number, number, number, import(\"./DataTile.js\").LoaderOptions):string} UrlGetter\n */\n\n/**\n * @typedef {string | Array<string> | UrlGetter} UrlLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {UrlLike} [url] The image URL template.  In addition to a single URL template, an array of URL templates or a function\n * can be provided.  If a function is provided, it will be called with z, x, y tile coordinates and loader options and should\n * return a URL.\n * @property {Loader} [loader] Data loader.  Called with z, x, and y tile coordinates.\n * Returns an {@link import(\"../DataTile.js\").ImageLike image} for a tile or a promise for the same.\n * The promise should not resolve until the image is loaded.  If the `url` option is provided, a loader will be created.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The pixel width and height of the source tiles.\n * This may be different than the rendered pixel size if a `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around data tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported data should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Tile projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"./Source.js\").State} [state] The source state.\n * @property {boolean} [wrapX=true] Render tiles beyond the antimeridian.\n * @property {number} [transition] Transition time when fading in new tiles (in miliseconds).\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.\n * @property {import('./DataTile.js').CrossOriginAttribute} [crossOrigin='anonymous'] The crossOrigin property to pass to loaders for image data.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\nconst loadError = new Error('Image failed to load');\n\n/**\n * @param {string} template The image url template.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {import('./DataTile.js').LoaderOptions} options The loader options.\n * @return {Promise<HTMLImageElement>} Resolves with a loaded image.\n */\nfunction loadImage(template, z, x, y, options) {\n  return new Promise((resolve, reject) => {\n    const image = new Image();\n    image.crossOrigin = options.crossOrigin ?? null;\n    image.addEventListener('load', () => resolve(image));\n    image.addEventListener('error', () => reject(loadError));\n    image.src = renderXYZTemplate(template, z, x, y, options.maxY);\n  });\n}\n\n/**\n * @param {Array<string>} templates The url templates.\n * @return {Loader} The image loader.\n */\nfunction makeLoaderFromTemplates(templates) {\n  return function (z, x, y, options) {\n    const template = pickUrl(templates, z, x, y);\n    return loadImage(template, z, x, y, options);\n  };\n}\n\n/**\n * @param {UrlGetter} getter The url getter.\n * @return {Loader} The image loader.\n */\nfunction makeLoaderFromGetter(getter) {\n  return function (z, x, y, options) {\n    const url = getter(z, x, y, options);\n    return loadImage(url, z, x, y, options);\n  };\n}\n\n/**\n * @param {UrlLike} url The URL-like option.\n * @return {Loader} The tile loader.\n */\nfunction makeLoaderFromUrlLike(url) {\n  /**\n   * @type {Loader}\n   */\n  let loader;\n\n  if (Array.isArray(url)) {\n    loader = makeLoaderFromTemplates(url);\n  } else if (typeof url === 'string') {\n    const urls = expandUrl(url);\n    loader = makeLoaderFromTemplates(urls);\n  } else if (typeof url === 'function') {\n    loader = makeLoaderFromGetter(url);\n  } else {\n    throw new Error(\n      'The url option must be a single template, an array of templates, or a function for getting a URL',\n    );\n  }\n  return loader;\n}\n\nlet keyCount = 0;\n\n/**\n * @param {UrlLike} url The URL-like option.\n * @return {string} A key for the URL.\n */\nfunction keyFromUrlLike(url) {\n  if (Array.isArray(url)) {\n    return url.join('\\n');\n  }\n\n  if (typeof url === 'string') {\n    return url;\n  }\n\n  ++keyCount;\n  return 'url-function-key-' + keyCount;\n}\n\n/**\n * @classdesc\n * A source for typed array data tiles.\n *\n * @extends DataTileSource<import(\"../ImageTile.js\").default>\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass ImageTileSource extends DataTileSource {\n  /**\n   * @param {Options} [options] DataTile source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {Loader}\n     */\n    let loader = options.loader;\n\n    /**\n     * @type {string}\n     */\n    let key;\n\n    if (options.url) {\n      loader = makeLoaderFromUrlLike(options.url);\n      key = keyFromUrlLike(options.url);\n    }\n\n    /**\n     * @type {import('./Source.js').State}\n     */\n    const state = !loader ? 'loading' : options.state;\n\n    const wrapX = options.wrapX === undefined ? true : options.wrapX;\n\n    super({\n      loader: loader,\n      key: key,\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize,\n      gutter: options.gutter,\n      maxResolution: options.maxResolution,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      state: state,\n      wrapX: wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate !== false,\n      crossOrigin: options.crossOrigin,\n      zDirection: options.zDirection,\n    });\n  }\n\n  /**\n   * @param {UrlLike} url The new URL.\n   * @api\n   */\n  setUrl(url) {\n    const loader = makeLoaderFromUrlLike(url);\n    this.setLoader(loader);\n    this.setKey(keyFromUrlLike(url));\n    if (this.getState() !== 'ready') {\n      this.setState('ready');\n    }\n  }\n}\n\nexport default ImageTileSource;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageWrapper from './Image.js';\nimport ImageState from './ImageState.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageWrapper {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   * @override\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/resolution\n */\n\n/**\n * @typedef {number|Array<number>} ResolutionLike\n */\n\n/**\n * @param {ResolutionLike} resolution Resolution.\n * @return {number} Resolution.\n */\nexport function fromResolutionLike(resolution) {\n  if (Array.isArray(resolution)) {\n    return Math.min(...resolution);\n  }\n  return resolution;\n}\n","/**\n * @module ol/reproj/Image\n */\n\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {\n  getCenter,\n  getHeight,\n  getIntersection,\n  getWidth,\n  isEmpty,\n} from '../extent.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../Image.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageWrapper {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate,\n  ) {\n    let maxSourceExtent = sourceProj.getExtent();\n    if (maxSourceExtent && sourceProj.canWrapX()) {\n      maxSourceExtent = maxSourceExtent.slice();\n      maxSourceExtent[0] = -Infinity;\n      maxSourceExtent[2] = Infinity;\n    }\n    let maxTargetExtent = targetProj.getExtent();\n    if (maxTargetExtent && targetProj.canWrapX()) {\n      maxTargetExtent = maxTargetExtent.slice();\n      maxTargetExtent[0] = -Infinity;\n      maxTargetExtent[2] = Infinity;\n    }\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution,\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = isEmpty(sourceExtent)\n      ? null\n      : getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   * @override\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        fromResolutionLike(this.sourceImage_.getResolution()),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_,\n        true,\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          (e) => {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (\n        this.sourceListenerKey_\n      ),\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nexport const DECIMALS = 4;\n","/**\n * @module ol/source/Image\n */\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {linearFindNearest} from '../array.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {\n  containsExtent,\n  equals,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {ceil} from '../math.js';\nimport {equivalent} from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport Source from './Source.js';\nimport {DECIMALS} from './common.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../Image.js\").Loader} [loader] Loader. Can either be a custom loader, or one of the\n * loaders created with a `createLoader()` function ({@link module:ol/source/wms.createLoader wms},\n * {@link module:ol/source/arcgisRest.createLoader arcgisRest}, {@link module:ol/source/mapguide.createLoader mapguide},\n * {@link module:ol/source/static.createLoader static}).\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Base class for sources providing a single image.\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").Loader}\n     */\n    this.loader = options.loader || null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.wantedExtent_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.wantedResolution_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.static_ = options.loader ? options.loader.length === 0 : false;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.wantedProjection_ = null;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate(),\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.loader) {\n      const requestExtent = getRequestExtent(extent, resolution, pixelRatio, 1);\n      const requestResolution = this.findNearestResolution(resolution);\n      if (\n        this.image &&\n        (this.static_ ||\n          (this.wantedProjection_ === projection &&\n            ((this.wantedExtent_ &&\n              containsExtent(this.wantedExtent_, requestExtent)) ||\n              containsExtent(this.image.getExtent(), requestExtent)) &&\n            ((this.wantedResolution_ &&\n              fromResolutionLike(this.wantedResolution_) ===\n                requestResolution) ||\n              fromResolutionLike(this.image.getResolution()) ===\n                requestResolution)))\n      ) {\n        return this.image;\n      }\n      this.wantedProjection_ = projection;\n      this.wantedExtent_ = requestExtent;\n      this.wantedResolution_ = requestResolution;\n      this.image = new ImageWrapper(\n        requestExtent,\n        requestResolution,\n        pixelRatio,\n        this.loader,\n      );\n      this.image.addEventListener(\n        EventType.CHANGE,\n        this.handleImageChange.bind(this),\n      );\n    }\n    return this.image;\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\n/**\n * Adjusts the extent so it aligns with pixel boundaries.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Reolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} ratio Ratio between request size and view size.\n * @return {import(\"../extent.js\").Extent} Request extent.\n */\nexport function getRequestExtent(extent, resolution, pixelRatio, ratio) {\n  const imageResolution = resolution / pixelRatio;\n  const center = getCenter(extent);\n  const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n  const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n  const marginWidth = ceil(((ratio - 1) * viewWidth) / 2, DECIMALS);\n  const requestWidth = viewWidth + 2 * marginWidth;\n  const marginHeight = ceil(((ratio - 1) * viewHeight) / 2, DECIMALS);\n  const requestHeight = viewHeight + 2 * marginHeight;\n  return getForViewAndSize(center, imageResolution, 0, [\n    requestWidth,\n    requestHeight,\n  ]);\n}\n\nexport default ImageSource;\n","/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport TileQueue from '../TileQueue.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport ImageLayer from '../layer/Image.js';\nimport TileLayer from '../layer/Tile.js';\nimport {create as createTransform} from '../transform.js';\nimport {getUid} from '../util.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport TileSource from './Tile.js';\n\n/**\n * @typedef {Object} MinionData\n * @property {Array<ArrayBuffer>} buffers Array of buffers.\n * @property {Object} meta Operation metadata.\n * @property {boolean} imageOps The operation is an image operation.\n * @property {number} width The width of the image.\n * @property {number} height The height of the image.\n */\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(MinionData):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (let b = 0; b < numBuffers; ++b) {\n        images[b] = new ImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height,\n        );\n      }\n      const output = operation(images, meta).data;\n      return output.buffer;\n    }\n\n    const output = new Uint8ClampedArray(numBytes);\n    const arrays = new Array(numBuffers);\n    const pixels = new Array(numBuffers);\n    for (let b = 0; b < numBuffers; ++b) {\n      arrays[b] = new Uint8ClampedArray(buffers[b]);\n      pixels[b] = [0, 0, 0, 0];\n    }\n    for (let i = 0; i < numBytes; i += 4) {\n      for (let j = 0; j < numBuffers; ++j) {\n        const array = arrays[j];\n        pixels[j][0] = array[i];\n        pixels[j][1] = array[i + 1];\n        pixels[j][2] = array[i + 2];\n        pixels[j][3] = array[i + 3];\n      }\n      const pixel = operation(pixels, meta);\n      output[i] = pixel[0];\n      output[i + 1] = pixel[1];\n      output[i + 2] = pixel[2];\n      output[i + 3] = pixel[3];\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {ProcessorOptions} config Processor options.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'const ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'const __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  const buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const worker = new Worker(\n    typeof Blob === 'undefined'\n      ? 'data:text/javascript;base64,' +\n        Buffer.from(lines.join('\\n'), 'binary').toString('base64')\n      : URL.createObjectURL(new Blob(lines, {type: 'text/javascript'})),\n  );\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {function(Error, ImageData, (Object|Array<Object>)): void} JobCallback\n */\n\n/**\n * @typedef {Object} Job\n * @property {Object} meta Job metadata.\n * @property {Array<ImageData>} inputs Array of input data.\n * @property {JobCallback} callback Called when the job is complete.\n */\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {Operation} operation The operation.\n * @property {Object<string, Function>} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.imageOps_ = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this.imageOps_) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n\n    /**\n     * @type {Array<Worker>}\n     */\n    const workers = new Array(threads);\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this.onWorkerMessage_.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this.onWorkerMessage_.bind(this, 0),\n      );\n    }\n    /**\n     * @type {Array<Worker>}\n     * @private\n     */\n    this.workers_ = workers;\n\n    /**\n     * @type {Array<Job>}\n     * @private\n     */\n    this.queue_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxQueueLength_ = config.queue || Infinity;\n    /**\n     * @type {number}\n     * @private\n     */\n    this.running_ = 0;\n\n    /**\n     * @type {Object<number, any>}\n     * @private\n     */\n    this.dataLookup_ = {};\n\n    /**\n     * @type {Job|null}\n     * @private\n     */\n    this.job_ = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<ImageData>} inputs Array of image data.\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this.enqueue_({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this.dispatch_();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Job} job The job.\n   */\n  enqueue_(job) {\n    this.queue_.push(job);\n    while (this.queue_.length > this.maxQueueLength_) {\n      this.queue_.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  dispatch_() {\n    if (this.running_ || this.queue_.length === 0) {\n      return;\n    }\n\n    const job = this.queue_.shift();\n    this.job_ = job;\n    const width = job.inputs[0].width;\n    const height = job.inputs[0].height;\n    const buffers = job.inputs.map(function (input) {\n      return input.data.buffer;\n    });\n    const threads = this.workers_.length;\n    this.running_ = threads;\n    if (threads === 1) {\n      this.workers_[0].postMessage(\n        {\n          buffers: buffers,\n          meta: job.meta,\n          imageOps: this.imageOps_,\n          width: width,\n          height: height,\n        },\n        buffers,\n      );\n      return;\n    }\n\n    const length = job.inputs[0].data.length;\n    const segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (let i = 0; i < threads; ++i) {\n      const offset = i * segmentLength;\n      const slices = [];\n      for (let j = 0, jj = buffers.length; j < jj; ++j) {\n        slices.push(buffers[j].slice(offset, offset + segmentLength));\n      }\n      this.workers_[i].postMessage(\n        {\n          buffers: slices,\n          meta: job.meta,\n          imageOps: this.imageOps_,\n          width: width,\n          height: height,\n        },\n        slices,\n      );\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  onWorkerMessage_(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this.dataLookup_[index] = event.data;\n    --this.running_;\n    if (this.running_ === 0) {\n      this.resolveJob_();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  resolveJob_() {\n    const job = this.job_;\n    const threads = this.workers_.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this.dataLookup_[0]['buffer']);\n      meta = this.dataLookup_[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(threads);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this.dataLookup_[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this.dataLookup_[i]['meta'];\n      }\n    }\n    this.job_ = null;\n    this.dataLookup_ = {};\n    job.callback(\n      null,\n      new ImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta,\n    );\n    this.dispatch_();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   * @override\n   */\n  disposeInternal() {\n    for (let i = 0; i < this.workers_.length; ++i) {\n      this.workers_[i].terminate();\n    }\n    this.workers_.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData)\n * and should return a single\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n * The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.  Listeners will receive an event object with\n   * a `data` property that can be used to make data available to operations.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.  Listeners will receive an event object with\n   * a `data` property.  If more than one thread is used, `data` will be an array of\n   * objects.  If a single thread is used, `data` will be a single object.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * @typedef {'pixel' | 'image'} RasterOperationType\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n */\n\n/**\n * @typedef {import(\"./Image.js\").ImageSourceEventTypes|'beforeoperations'|'afteroperations'} RasterSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster~RasterSource} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Object|Array<Object>} data An object made available to operations.  For \"afteroperations\" evenets\n   * this will be an array of objects if more than one thread is used.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n * @property {Array<number>|null} [resolutions] Resolutions. If specified, raster operations will only\n * be run at the given resolutions.  By default, the resolutions of the first source with resolutions\n * specified will be used, if any. Set to `null` to use any view resolution instead.\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Image.js\").ImageSourceEventTypes, import(\"./Image.js\").ImageSourceEvent, Return> &\n *   import(\"../Observable\").OnSignature<RasterSourceEventTypes, RasterSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |RasterSourceEventTypes, Return>} RasterSourceOnSignature\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {RasterSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined ? options.operationType : 'pixel';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useResolutions_ = options.resolutions !== null;\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.processSources_.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../Map.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     * @private\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutter: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      mapId: getUid(this),\n      renderTargets: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      /** @type {Array<string>} */\n      const attributions = [];\n      for (let i = 0, iMax = options.sources.length; i < iMax; ++i) {\n        const sourceOrLayer = options.sources[i];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        if (!source) {\n          continue;\n        }\n        const sourceAttributions = source.getAttributions()?.(frameState);\n        if (typeof sourceAttributions === 'string') {\n          attributions.push(sourceAttributions);\n        } else if (sourceAttributions !== undefined) {\n          attributions.push(...sourceAttributions);\n        }\n      }\n      return attributions;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === 'image',\n      queue: 1,\n      lib: lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../Map.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../Map.js\").FrameState} */ (\n      Object.assign({}, this.frameState_)\n    );\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (\n      Object.assign({}, frameState.viewState)\n    );\n\n    const center = getCenter(extent);\n\n    frameState.size[0] = Math.ceil(getWidth(extent) / resolution);\n    frameState.size[1] = Math.ceil(getHeight(extent) / resolution);\n    frameState.extent = [\n      center[0] - (frameState.size[0] * resolution) / 2,\n      center[1] - (frameState.size[1] * resolution) / 2,\n      center[0] + (frameState.size[0] * resolution) / 2,\n      center[1] + (frameState.size[1] * resolution) / 2,\n    ];\n    frameState.time = Date.now();\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (!source || source.getState() !== 'ready') {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   * @override\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    this.tileQueue_.loadMoreTiles(16, 16);\n\n    resolution = this.findNearestResolution(resolution);\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(frameState.extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      frameState.renderTargets = {};\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data),\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState),\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object|Array<Object>} data The user data (or an array if more than one thread).\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas,\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    } else {\n      this.changed();\n    }\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data),\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    if (!this.useResolutions_) {\n      return null;\n    }\n    let resolutions = super.getResolutions();\n    if (!resolutions) {\n      for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n        const source = this.layers_[i].getSource();\n        resolutions = source.getResolutions(projection);\n        if (resolutions) {\n          break;\n        }\n      }\n    }\n    return resolutions;\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container instanceof HTMLCanvasElement) {\n    element = container;\n  } else {\n    if (container) {\n      element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n      throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n      const context = element.getContext('2d');\n      return context.getImageData(0, 0, width, height);\n    }\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height, undefined, {\n      willReadFrequently: true,\n    });\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height, undefined, {\n        willReadFrequently: true,\n      });\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('ol/control/Control'), require('ol/Observable'), require('ol/layer/Group')) :\n\ttypeof define === 'function' && define.amd ? define(['ol/control/Control', 'ol/Observable', 'ol/layer/Group'], factory) :\n\t(global.LayerSwitcher = factory(global.ol.control.Control,global.ol.Observable,global.ol.layer.Group));\n}(this, (function (Control,ol_Observable,LayerGroup) { 'use strict';\n\nControl = 'default' in Control ? Control['default'] : Control;\nLayerGroup = 'default' in LayerGroup ? LayerGroup['default'] : LayerGroup;\n\n/**\n * @protected\n */\nconst CSS_PREFIX = 'layer-switcher-';\n/**\n * OpenLayers LayerSwitcher Control, displays a list of layers and groups\n * associated with a map which have a `title` property.\n *\n * To be shown in the LayerSwitcher panel layers must have a `title` property;\n * base map layers should have a `type` property set to `base`. Group layers\n * (`LayerGroup`) can be used to visually group layers together; a group\n * with a `fold` property set to either `'open'` or `'close'` will be displayed\n * with a toggle.\n *\n * See [BaseLayerOptions](#baselayeroptions) for a full list of LayerSwitcher\n * properties for layers (`TileLayer`, `ImageLayer`, `VectorTile` etc.) and\n * [GroupLayerOptions](#grouplayeroptions) for group layer (`LayerGroup`)\n * LayerSwitcher properties.\n *\n * Layer and group properties can either be set by adding extra properties\n * to their options when they are created or via their set method.\n *\n * Specify a `title` for a Layer by adding a `title` property to it's options object:\n * ```javascript\n * var lyr = new ol.layer.Tile({\n *   // Specify a title property which will be displayed by the layer switcher\n *   title: 'OpenStreetMap',\n *   visible: true,\n *   source: new ol.source.OSM()\n * })\n * ```\n *\n * Alternatively the properties can be set via the `set` method after a layer has been created:\n * ```javascript\n * var lyr = new ol.layer.Tile({\n *   visible: true,\n *   source: new ol.source.OSM()\n * })\n * // Specify a title property which will be displayed by the layer switcher\n * lyr.set('title', 'OpenStreetMap');\n * ```\n *\n * To create a LayerSwitcher and add it to a map, create a new instance then pass it to the map's [`addControl` method](https://openlayers.org/en/latest/apidoc/module-ol_Map-Map.html#addControl).\n * ```javascript\n * var layerSwitcher = new LayerSwitcher({\n *   reverse: true,\n *   groupSelectStyle: 'group'\n * });\n * map.addControl(layerSwitcher);\n * ```\n *\n * @constructor\n * @extends {ol/control/Control~Control}\n * @param opt_options LayerSwitcher options, see  [LayerSwitcher Options](#options) and [RenderOptions](#renderoptions) which LayerSwitcher `Options` extends for more details.\n */\nclass LayerSwitcher extends Control {\n    constructor(opt_options) {\n        const options = Object.assign({}, opt_options);\n        const element = document.createElement('div');\n        super({ element: element, target: options.target });\n        this.activationMode = options.activationMode || 'mouseover';\n        this.startActive = options.startActive === true;\n        // TODO Next: Rename to showButtonContent\n        this.label = options.label !== undefined ? options.label : '';\n        // TODO Next: Rename to hideButtonContent\n        this.collapseLabel =\n            options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        // TODO Next: Rename to showButtonTitle\n        this.tipLabel = options.tipLabel ? options.tipLabel : 'Legend';\n        // TODO Next: Rename to hideButtonTitle\n        this.collapseTipLabel = options.collapseTipLabel\n            ? options.collapseTipLabel\n            : 'Collapse legend';\n        this.groupSelectStyle = LayerSwitcher.getGroupSelectStyle(options.groupSelectStyle);\n        this.reverse = options.reverse !== false;\n        this.mapListeners = [];\n        this.hiddenClassName = 'ol-unselectable ol-control layer-switcher';\n        if (LayerSwitcher.isTouchDevice_()) {\n            this.hiddenClassName += ' touch';\n        }\n        this.shownClassName = 'shown';\n        element.className = this.hiddenClassName;\n        this.button = document.createElement('button');\n        element.appendChild(this.button);\n        this.panel = document.createElement('div');\n        this.panel.className = 'panel';\n        element.appendChild(this.panel);\n        LayerSwitcher.enableTouchScroll_(this.panel);\n        element.classList.add(CSS_PREFIX + 'group-select-style-' + this.groupSelectStyle);\n        element.classList.add(CSS_PREFIX + 'activation-mode-' + this.activationMode);\n        if (this.activationMode === 'click') {\n            // TODO Next: Remove in favour of layer-switcher-activation-mode-click\n            element.classList.add('activationModeClick');\n            this.button.onclick = (e) => {\n                const evt = e || window.event;\n                if (this.element.classList.contains(this.shownClassName)) {\n                    this.hidePanel();\n                }\n                else {\n                    this.showPanel();\n                }\n                evt.preventDefault();\n            };\n        }\n        else {\n            this.button.onmouseover = () => {\n                this.showPanel();\n            };\n            this.button.onclick = (e) => {\n                const evt = e || window.event;\n                this.showPanel();\n                evt.preventDefault();\n            };\n            this.panel.onmouseout = (evt) => {\n                if (!this.panel.contains(evt.relatedTarget)) {\n                    this.hidePanel();\n                }\n            };\n        }\n        this.updateButton();\n    }\n    /**\n     * Set the map instance the control is associated with.\n     * @param map The map instance.\n     */\n    setMap(map) {\n        // Clean up listeners associated with the previous map\n        for (let i = 0; i < this.mapListeners.length; i++) {\n            ol_Observable.unByKey(this.mapListeners[i]);\n        }\n        this.mapListeners.length = 0;\n        // Wire up listeners etc. and store reference to new map\n        super.setMap(map);\n        if (map) {\n            if (this.startActive) {\n                this.showPanel();\n            }\n            else {\n                this.renderPanel();\n            }\n            if (this.activationMode !== 'click') {\n                this.mapListeners.push(map.on('pointerdown', () => {\n                    this.hidePanel();\n                }));\n            }\n        }\n    }\n    /**\n     * Show the layer panel. Fires `'show'` event.\n     * @fires LayerSwitcher#show\n     */\n    showPanel() {\n        if (!this.element.classList.contains(this.shownClassName)) {\n            this.element.classList.add(this.shownClassName);\n            this.updateButton();\n            this.renderPanel();\n        }\n        /**\n         * Event triggered after the panel has been shown.\n         * Listen to the event via the `on` or `once` methods; for example:\n         * ```js\n         * var layerSwitcher = new LayerSwitcher();\n         * map.addControl(layerSwitcher);\n         *\n         * layerSwitcher.on('show', evt => {\n         *   console.log('show', evt);\n         * });\n         * @event LayerSwitcher#show\n         */\n        this.dispatchEvent('show');\n    }\n    /**\n     * Hide the layer panel. Fires `'hide'` event.\n     * @fires LayerSwitcher#hide\n     */\n    hidePanel() {\n        if (this.element.classList.contains(this.shownClassName)) {\n            this.element.classList.remove(this.shownClassName);\n            this.updateButton();\n        }\n        /**\n         * Event triggered after the panel has been hidden.\n         * @event LayerSwitcher#hide\n         */\n        this.dispatchEvent('hide');\n    }\n    /**\n     * Update button text content and attributes based on current\n     * state\n     */\n    updateButton() {\n        if (this.element.classList.contains(this.shownClassName)) {\n            this.button.textContent = this.collapseLabel;\n            this.button.setAttribute('title', this.collapseTipLabel);\n            this.button.setAttribute('aria-label', this.collapseTipLabel);\n        }\n        else {\n            this.button.textContent = this.label;\n            this.button.setAttribute('title', this.tipLabel);\n            this.button.setAttribute('aria-label', this.tipLabel);\n        }\n    }\n    /**\n     * Re-draw the layer panel to represent the current state of the layers.\n     */\n    renderPanel() {\n        this.dispatchEvent('render');\n        LayerSwitcher.renderPanel(this.getMap(), this.panel, {\n            groupSelectStyle: this.groupSelectStyle,\n            reverse: this.reverse\n        });\n        this.dispatchEvent('rendercomplete');\n    }\n    /**\n     * **_[static]_** - Re-draw the layer panel to represent the current state of the layers.\n     * @param map The OpenLayers Map instance to render layers for\n     * @param panel The DOM Element into which the layer tree will be rendered\n     * @param options Options for panel, group, and layers\n     */\n    static renderPanel(map, panel, options) {\n        // Create the event.\n        const render_event = new Event('render');\n        // Dispatch the event.\n        panel.dispatchEvent(render_event);\n        options = options || {};\n        options.groupSelectStyle = LayerSwitcher.getGroupSelectStyle(options.groupSelectStyle);\n        LayerSwitcher.ensureTopVisibleBaseLayerShown(map, options.groupSelectStyle);\n        while (panel.firstChild) {\n            panel.removeChild(panel.firstChild);\n        }\n        // Reset indeterminate state for all layers and groups before\n        // applying based on groupSelectStyle\n        LayerSwitcher.forEachRecursive(map, function (l, _idx, _a) {\n            l.set('indeterminate', false);\n        });\n        if (options.groupSelectStyle === 'children' ||\n            options.groupSelectStyle === 'none') {\n            // Set visibile and indeterminate state of groups based on\n            // their children's visibility\n            LayerSwitcher.setGroupVisibility(map);\n        }\n        else if (options.groupSelectStyle === 'group') {\n            // Set child indetermiate state based on their parent's visibility\n            LayerSwitcher.setChildVisibility(map);\n        }\n        const ul = document.createElement('ul');\n        panel.appendChild(ul);\n        // passing two map arguments instead of lyr as we're passing the map as the root of the layers tree\n        LayerSwitcher.renderLayers_(map, map, ul, options, function render(_changedLyr) {\n            LayerSwitcher.renderPanel(map, panel, options);\n        });\n        // Create the event.\n        const rendercomplete_event = new Event('rendercomplete');\n        // Dispatch the event.\n        panel.dispatchEvent(rendercomplete_event);\n    }\n    /**\n     * **_[static]_** - Determine if a given layer group contains base layers\n     * @param grp Group to test\n     */\n    static isBaseGroup(grp) {\n        if (grp instanceof LayerGroup) {\n            const lyrs = grp.getLayers().getArray();\n            return lyrs.length && lyrs[0].get('type') === 'base';\n        }\n        else {\n            return false;\n        }\n    }\n    static setGroupVisibility(map) {\n        // Get a list of groups, with the deepest first\n        const groups = LayerSwitcher.getGroupsAndLayers(map, function (l) {\n            return (l instanceof LayerGroup &&\n                !l.get('combine') &&\n                !LayerSwitcher.isBaseGroup(l));\n        }).reverse();\n        // console.log(groups.map(g => g.get('title')));\n        groups.forEach(function (grp) {\n            // TODO Can we use getLayersArray, is it public in the esm build?\n            const descendantVisibility = grp.getLayersArray().map(function (l) {\n                const state = l.getVisible();\n                // console.log('>', l.get('title'), state);\n                return state;\n            });\n            // console.log(descendantVisibility);\n            if (descendantVisibility.every(function (v) {\n                return v === true;\n            })) {\n                grp.setVisible(true);\n                grp.set('indeterminate', false);\n            }\n            else if (descendantVisibility.every(function (v) {\n                return v === false;\n            })) {\n                grp.setVisible(false);\n                grp.set('indeterminate', false);\n            }\n            else {\n                grp.setVisible(true);\n                grp.set('indeterminate', true);\n            }\n        });\n    }\n    static setChildVisibility(map) {\n        // console.log('setChildVisibility');\n        const groups = LayerSwitcher.getGroupsAndLayers(map, function (l) {\n            return (l instanceof LayerGroup &&\n                !l.get('combine') &&\n                !LayerSwitcher.isBaseGroup(l));\n        });\n        groups.forEach(function (grp) {\n            const group = grp;\n            // console.log(group.get('title'));\n            const groupVisible = group.getVisible();\n            const groupIndeterminate = group.get('indeterminate');\n            group\n                .getLayers()\n                .getArray()\n                .forEach(function (l) {\n                l.set('indeterminate', false);\n                if ((!groupVisible || groupIndeterminate) && l.getVisible()) {\n                    l.set('indeterminate', true);\n                }\n            });\n        });\n    }\n    /**\n     * Ensure only the top-most base layer is visible if more than one is visible.\n     * @param map The map instance.\n     * @param groupSelectStyle\n     * @protected\n     */\n    static ensureTopVisibleBaseLayerShown(map, groupSelectStyle) {\n        let lastVisibleBaseLyr;\n        LayerSwitcher.forEachRecursive(map, function (lyr, _idx, _arr) {\n            if (lyr.get('type') === 'base' && lyr.getVisible()) {\n                lastVisibleBaseLyr = lyr;\n            }\n        });\n        if (lastVisibleBaseLyr)\n            LayerSwitcher.setVisible_(map, lastVisibleBaseLyr, true, groupSelectStyle);\n    }\n    /**\n     * **_[static]_** - Get an Array of all layers and groups displayed by the LayerSwitcher (has a `'title'` property)\n     * contained by the specified map or layer group; optionally filtering via `filterFn`\n     * @param grp The map or layer group for which layers are found.\n     * @param filterFn Optional function used to filter the returned layers\n     */\n    static getGroupsAndLayers(grp, filterFn) {\n        const layers = [];\n        filterFn =\n            filterFn ||\n                function (_lyr, _idx, _arr) {\n                    return true;\n                };\n        LayerSwitcher.forEachRecursive(grp, function (lyr, idx, arr) {\n            if (lyr.get('title')) {\n                if (filterFn(lyr, idx, arr)) {\n                    layers.push(lyr);\n                }\n            }\n        });\n        return layers;\n    }\n    /**\n     * Toggle the visible state of a layer.\n     * Takes care of hiding other layers in the same exclusive group if the layer\n     * is toggle to visible.\n     * @protected\n     * @param map The map instance.\n     * @param lyr layer whose visibility will be toggled.\n     * @param visible Set whether the layer is shown\n     * @param groupSelectStyle\n     * @protected\n     */\n    static setVisible_(map, lyr, visible, groupSelectStyle) {\n        // console.log(lyr.get('title'), visible, groupSelectStyle);\n        lyr.setVisible(visible);\n        if (visible && lyr.get('type') === 'base') {\n            // Hide all other base layers regardless of grouping\n            LayerSwitcher.forEachRecursive(map, function (l, _idx, _arr) {\n                if (l != lyr && l.get('type') === 'base') {\n                    l.setVisible(false);\n                }\n            });\n        }\n        if (lyr instanceof LayerGroup &&\n            !lyr.get('combine') &&\n            groupSelectStyle === 'children') {\n            lyr.getLayers().forEach((l) => {\n                LayerSwitcher.setVisible_(map, l, lyr.getVisible(), groupSelectStyle);\n            });\n        }\n    }\n    /**\n     * Render all layers that are children of a group.\n     * @param map The map instance.\n     * @param lyr Layer to be rendered (should have a title property).\n     * @param idx Position in parent group list.\n     * @param options Options for groups and layers\n     * @protected\n     */\n    static renderLayer_(map, lyr, idx, options, render) {\n        const li = document.createElement('li');\n        const lyrTitle = lyr.get('title');\n        const checkboxId = LayerSwitcher.uuid();\n        const label = document.createElement('label');\n        if (lyr instanceof LayerGroup && !lyr.get('combine')) {\n            const isBaseGroup = LayerSwitcher.isBaseGroup(lyr);\n            li.classList.add('group');\n            if (isBaseGroup) {\n                li.classList.add(CSS_PREFIX + 'base-group');\n            }\n            // Group folding\n            if (lyr.get('fold')) {\n                li.classList.add(CSS_PREFIX + 'fold');\n                li.classList.add(CSS_PREFIX + lyr.get('fold'));\n                const btn = document.createElement('button');\n                btn.onclick = function (e) {\n                    const evt = e || window.event;\n                    LayerSwitcher.toggleFold_(lyr, li);\n                    evt.preventDefault();\n                };\n                li.appendChild(btn);\n            }\n            if (!isBaseGroup && options.groupSelectStyle != 'none') {\n                const input = document.createElement('input');\n                input.type = 'checkbox';\n                input.id = checkboxId;\n                input.checked = lyr.getVisible();\n                input.indeterminate = lyr.get('indeterminate');\n                input.onchange = function (e) {\n                    const target = e.target;\n                    LayerSwitcher.setVisible_(map, lyr, target.checked, options.groupSelectStyle);\n                    render(lyr);\n                };\n                li.appendChild(input);\n                label.htmlFor = checkboxId;\n            }\n            label.innerHTML = lyrTitle;\n            li.appendChild(label);\n            const ul = document.createElement('ul');\n            li.appendChild(ul);\n            LayerSwitcher.renderLayers_(map, lyr, ul, options, render);\n        }\n        else {\n            li.className = 'layer';\n            const input = document.createElement('input');\n            if (lyr.get('type') === 'base') {\n                input.type = 'radio';\n            }\n            else {\n                input.type = 'checkbox';\n            }\n            input.id = checkboxId;\n            input.checked = lyr.get('visible');\n            input.indeterminate = lyr.get('indeterminate');\n            input.onchange = function (e) {\n                const target = e.target;\n                LayerSwitcher.setVisible_(map, lyr, target.checked, options.groupSelectStyle);\n                render(lyr);\n            };\n            li.appendChild(input);\n            label.htmlFor = checkboxId;\n            label.innerHTML = lyrTitle;\n            const rsl = map.getView().getResolution();\n            if (rsl >= lyr.getMaxResolution() || rsl < lyr.getMinResolution()) {\n                label.className += ' disabled';\n            }\n            else if (lyr.getMinZoom && lyr.getMaxZoom) {\n                const zoom = map.getView().getZoom();\n                if (zoom <= lyr.getMinZoom() || zoom > lyr.getMaxZoom()) {\n                    label.className += ' disabled';\n                }\n            }\n            li.appendChild(label);\n        }\n        return li;\n    }\n    /**\n     * Render all layers that are children of a group.\n     * @param map The map instance.\n     * @param lyr Group layer whose children will be rendered.\n     * @param elm DOM element that children will be appended to.\n     * @param options Options for groups and layers\n     * @protected\n     */\n    static renderLayers_(map, lyr, elm, options, render) {\n        let lyrs = lyr.getLayers().getArray().slice();\n        if (options.reverse)\n            lyrs = lyrs.reverse();\n        for (let i = 0, l; i < lyrs.length; i++) {\n            l = lyrs[i];\n            if (l.get('title')) {\n                elm.appendChild(LayerSwitcher.renderLayer_(map, l, i, options, render));\n            }\n        }\n    }\n    /**\n     * **_[static]_** - Call the supplied function for each layer in the passed layer group\n     * recursing nested groups.\n     * @param lyr The layer group to start iterating from.\n     * @param fn Callback which will be called for each layer\n     * found under `lyr`.\n     */\n    static forEachRecursive(lyr, fn) {\n        lyr.getLayers().forEach(function (lyr, idx, a) {\n            fn(lyr, idx, a);\n            if (lyr instanceof LayerGroup) {\n                LayerSwitcher.forEachRecursive(lyr, fn);\n            }\n        });\n    }\n    /**\n     * **_[static]_** - Generate a UUID\n     * Adapted from http://stackoverflow.com/a/2117523/526860\n     * @returns {String} UUID\n     */\n    static uuid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n            return v.toString(16);\n        });\n    }\n    /**\n     * Apply workaround to enable scrolling of overflowing content within an\n     * element. Adapted from https://gist.github.com/chrismbarr/4107472\n     * @param elm Element on which to enable touch scrolling\n     * @protected\n     */\n    static enableTouchScroll_(elm) {\n        if (LayerSwitcher.isTouchDevice_()) {\n            let scrollStartPos = 0;\n            elm.addEventListener('touchstart', function (event) {\n                scrollStartPos = this.scrollTop + event.touches[0].pageY;\n            }, false);\n            elm.addEventListener('touchmove', function (event) {\n                this.scrollTop = scrollStartPos - event.touches[0].pageY;\n            }, false);\n        }\n    }\n    /**\n     * Determine if the current browser supports touch events. Adapted from\n     * https://gist.github.com/chrismbarr/4107472\n     * @returns {Boolean} True if client can have 'TouchEvent' event\n     * @protected\n     */\n    static isTouchDevice_() {\n        try {\n            document.createEvent('TouchEvent');\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Fold/unfold layer group\n     * @param lyr Layer group to fold/unfold\n     * @param li List item containing layer group\n     * @protected\n     */\n    static toggleFold_(lyr, li) {\n        li.classList.remove(CSS_PREFIX + lyr.get('fold'));\n        lyr.set('fold', lyr.get('fold') === 'open' ? 'close' : 'open');\n        li.classList.add(CSS_PREFIX + lyr.get('fold'));\n    }\n    /**\n     * If a valid groupSelectStyle value is not provided then return the default\n     * @param groupSelectStyle The string to check for validity\n     * @returns The value groupSelectStyle, if valid, the default otherwise\n     * @protected\n     */\n    static getGroupSelectStyle(groupSelectStyle) {\n        return ['none', 'children', 'group'].indexOf(groupSelectStyle) >= 0\n            ? groupSelectStyle\n            : 'children';\n    }\n}\n// Expose LayerSwitcher as ol.control.LayerSwitcher if using a full build of\n// OpenLayers\nif (window['ol'] && window['ol']['control']) {\n    window['ol']['control']['LayerSwitcher'] = LayerSwitcher;\n}\n\nreturn LayerSwitcher;\n\n})));\n","/**\n * @module ol/interaction/Draw\n */\nimport Feature from '../Feature.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {\n  distance,\n  squaredDistance as squaredCoordinateDistance,\n} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {\n  always,\n  never,\n  noModifierKeys,\n  shiftKeyOnly,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clamp, squaredDistance, toFixed} from '../math.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/Geometry.js\").Type} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style for sketch features. The draw interaction can have up to three sketch features, depending on the mode.\n * It will always contain a feature with a `Point` geometry that corresponds to the current cursor position.\n * If the mode is `LineString` or `Polygon`, and there is at least one drawn point, it will also contain a feature with\n * a `LineString` geometry that corresponds to the line between the already drawn points and the current cursor position.\n * If the mode is `Polygon`, and there is at least one drawn point, it will also contain a feature with a `Polygon`\n * geometry that corresponds to the polygon between the already drawn points and the current cursor position\n * (note that this polygon has only two points if only one point is drawn).\n * If the mode is `Circle`, and there is one point drawn, it will also contain a feature with a `Circle` geometry whose\n * center is the drawn point and the radius is determined by the distance between the drawn point and the cursor.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean|import(\"../events/condition.js\").Condition} [trace=false] Trace a portion of another geometry.\n * Ignored when in freehand mode.\n * @property {VectorSource} [traceSource] Source for features to trace.  If tracing is active and a `traceSource` is\n * not provided, the interaction's `source` will be used.  Tracing requires that the interaction is configured with\n * either a `traceSource` or a `source`.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the draw interaction.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * @typedef {Object} TraceState\n * @property {boolean} active Tracing active.\n * @property {import(\"../pixel.js\").Pixel} [startPx] The initially clicked pixel location.\n * @property {Array<TraceTarget>} [targets] Targets available for tracing.\n * @property {number} [targetIndex] The index of the currently traced target.  A value of -1 indicates\n * that no trace target is active.\n */\n\n/**\n * @typedef {Object} TraceTarget\n * @property {Array<import(\"../coordinate.js\").Coordinate>} coordinates Target coordinates.\n * @property {boolean} ring The target coordinates are a linear ring.\n * @property {number} startIndex The index of first traced coordinate.  A fractional index represents an\n * edge intersection.  Index values for rings will wrap (may be negative or larger than coordinates length).\n * @property {number} endIndex The index of last traced coordinate.  Details from startIndex also apply here.\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'Polygon' | 'Circle'} Mode\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n */\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {Array<Feature>} features The candidate features.\n * @return {Array<TraceTarget>} The trace targets.\n */\nfunction getTraceTargets(coordinate, features) {\n  /**\n   * @type {Array<TraceTarget>}\n   */\n  const targets = [];\n\n  for (let i = 0; i < features.length; ++i) {\n    const feature = features[i];\n    const geometry = feature.getGeometry();\n    appendGeometryTraceTargets(coordinate, geometry, targets);\n  }\n\n  return targets;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} a One coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b Another coordinate.\n * @return {number} The squared distance between the two coordinates.\n */\nfunction getSquaredDistance(a, b) {\n  return squaredDistance(a[0], a[1], b[0], b[1]);\n}\n\n/**\n * @param {LineCoordType} coordinates The ring coordinates.\n * @param {number} index The index.  May be wrapped.\n * @return {import(\"../coordinate.js\").Coordinate} The coordinate.\n */\nfunction getCoordinate(coordinates, index) {\n  const count = coordinates.length;\n  if (index < 0) {\n    return coordinates[index + count];\n  }\n  if (index >= count) {\n    return coordinates[index - count];\n  }\n  return coordinates[index];\n}\n\n/**\n * Get the cumulative squared distance along a ring path.  The end index index may be \"wrapped\" and it may\n * be less than the start index to indicate the direction of travel.  The start and end index may have\n * a fractional part to indicate a point between two coordinates.\n * @param {LineCoordType} coordinates Ring coordinates.\n * @param {number} startIndex The start index.\n * @param {number} endIndex The end index.\n * @return {number} The cumulative squared distance along the ring path.\n */\nfunction getCumulativeSquaredDistance(coordinates, startIndex, endIndex) {\n  let lowIndex, highIndex;\n  if (startIndex < endIndex) {\n    lowIndex = startIndex;\n    highIndex = endIndex;\n  } else {\n    lowIndex = endIndex;\n    highIndex = startIndex;\n  }\n  const lowWholeIndex = Math.ceil(lowIndex);\n  const highWholeIndex = Math.floor(highIndex);\n\n  if (lowWholeIndex > highWholeIndex) {\n    // both start and end are on the same segment\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    return getSquaredDistance(start, end);\n  }\n\n  let sd = 0;\n\n  if (lowIndex < lowWholeIndex) {\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = getCoordinate(coordinates, lowWholeIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  if (highWholeIndex < highIndex) {\n    const start = getCoordinate(coordinates, highWholeIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  for (let i = lowWholeIndex; i < highWholeIndex - 1; ++i) {\n    const start = getCoordinate(coordinates, i);\n    const end = getCoordinate(coordinates, i + 1);\n    sd += getSquaredDistance(start, end);\n  }\n\n  return sd;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {import(\"../geom/Geometry.js\").default} geometry The candidate geometry.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendGeometryTraceTargets(coordinate, geometry, targets) {\n  if (geometry instanceof LineString) {\n    appendTraceTarget(coordinate, geometry.getCoordinates(), false, targets);\n    return;\n  }\n  if (geometry instanceof MultiLineString) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], false, targets);\n    }\n    return;\n  }\n  if (geometry instanceof Polygon) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], true, targets);\n    }\n    return;\n  }\n  if (geometry instanceof MultiPolygon) {\n    const polys = geometry.getCoordinates();\n    for (let i = 0, ii = polys.length; i < ii; ++i) {\n      const coordinates = polys[i];\n      for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n        appendTraceTarget(coordinate, coordinates[j], true, targets);\n      }\n    }\n    return;\n  }\n  if (geometry instanceof GeometryCollection) {\n    const geometries = geometry.getGeometries();\n    for (let i = 0; i < geometries.length; ++i) {\n      appendGeometryTraceTargets(coordinate, geometries[i], targets);\n    }\n    return;\n  }\n  // other types cannot be traced\n}\n\n/**\n * @typedef {Object} TraceTargetUpdateInfo\n * @property {number} index The new target index.\n * @property {number} endIndex The new segment end index.\n */\n\n/**\n * @type {TraceTargetUpdateInfo}\n */\nconst sharedUpdateInfo = {index: -1, endIndex: NaN};\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {TraceState} traceState The trace state.\n * @param {import(\"../Map.js\").default} map The map.\n * @param {number} snapTolerance The snap tolerance.\n * @return {TraceTargetUpdateInfo} Information about the new trace target.  The returned\n * object is reused between calls and must not be modified by the caller.\n */\nfunction getTraceTargetUpdate(coordinate, traceState, map, snapTolerance) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n\n  let closestTargetDistance = Infinity;\n\n  let newTargetIndex = -1;\n  let newEndIndex = NaN;\n\n  for (\n    let targetIndex = 0;\n    targetIndex < traceState.targets.length;\n    ++targetIndex\n  ) {\n    const target = traceState.targets[targetIndex];\n    const coordinates = target.coordinates;\n\n    let minSegmentDistance = Infinity;\n    let endIndex;\n    for (\n      let coordinateIndex = 0;\n      coordinateIndex < coordinates.length - 1;\n      ++coordinateIndex\n    ) {\n      const start = coordinates[coordinateIndex];\n      const end = coordinates[coordinateIndex + 1];\n      const rel = getPointSegmentRelationship(x, y, start, end);\n      if (rel.squaredDistance < minSegmentDistance) {\n        minSegmentDistance = rel.squaredDistance;\n        endIndex = coordinateIndex + rel.along;\n      }\n    }\n\n    if (minSegmentDistance < closestTargetDistance) {\n      closestTargetDistance = minSegmentDistance;\n      if (target.ring && traceState.targetIndex === targetIndex) {\n        // same target, maintain the same trace direction\n        if (target.endIndex > target.startIndex) {\n          // forward trace\n          if (endIndex < target.startIndex) {\n            endIndex += coordinates.length;\n          }\n        } else if (target.endIndex < target.startIndex) {\n          // reverse trace\n          if (endIndex > target.startIndex) {\n            endIndex -= coordinates.length;\n          }\n        }\n      }\n      newEndIndex = endIndex;\n      newTargetIndex = targetIndex;\n    }\n  }\n\n  const newTarget = traceState.targets[newTargetIndex];\n  let considerBothDirections = newTarget.ring;\n  if (traceState.targetIndex === newTargetIndex && considerBothDirections) {\n    // only consider switching trace direction if close to the start\n    const newCoordinate = interpolateCoordinate(\n      newTarget.coordinates,\n      newEndIndex,\n    );\n    const pixel = map.getPixelFromCoordinate(newCoordinate);\n    if (distance(pixel, traceState.startPx) > snapTolerance) {\n      considerBothDirections = false;\n    }\n  }\n\n  if (considerBothDirections) {\n    const coordinates = newTarget.coordinates;\n    const count = coordinates.length;\n    const startIndex = newTarget.startIndex;\n    const endIndex = newEndIndex;\n    if (startIndex < endIndex) {\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex,\n      );\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex - count,\n      );\n      if (reverseDistance < forwardDistance) {\n        newEndIndex -= count;\n      }\n    } else {\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex,\n      );\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex + count,\n      );\n      if (forwardDistance < reverseDistance) {\n        newEndIndex += count;\n      }\n    }\n  }\n\n  sharedUpdateInfo.index = newTargetIndex;\n  sharedUpdateInfo.endIndex = newEndIndex;\n  return sharedUpdateInfo;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The clicked coordinate.\n * @param {Array<import(\"../coordinate.js\").Coordinate>} coordinates The geometry component coordinates.\n * @param {boolean} ring The coordinates represent a linear ring.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendTraceTarget(coordinate, coordinates, ring, targets) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const start = coordinates[i];\n    const end = coordinates[i + 1];\n    const rel = getPointSegmentRelationship(x, y, start, end);\n    if (rel.squaredDistance === 0) {\n      const index = i + rel.along;\n      targets.push({\n        coordinates: coordinates,\n        ring: ring,\n        startIndex: index,\n        endIndex: index,\n      });\n      return;\n    }\n  }\n}\n\n/**\n * @typedef {Object} PointSegmentRelationship\n * @property {number} along The closest point expressed as a fraction along the segment length.\n * @property {number} squaredDistance The squared distance of the point to the segment.\n */\n\n/**\n * @type {PointSegmentRelationship}\n */\nconst sharedRel = {along: 0, squaredDistance: 0};\n\n/**\n * @param {number} x The point x.\n * @param {number} y The point y.\n * @param {import(\"../coordinate.js\").Coordinate} start The segment start.\n * @param {import(\"../coordinate.js\").Coordinate} end The segment end.\n * @return {PointSegmentRelationship} The point segment relationship.  The returned object is\n * shared between calls and must not be modified by the caller.\n */\nfunction getPointSegmentRelationship(x, y, start, end) {\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  let along = 0;\n  let px = x1;\n  let py = y1;\n  if (dx !== 0 || dy !== 0) {\n    along = clamp(((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy), 0, 1);\n    px += dx * along;\n    py += dy * along;\n  }\n\n  sharedRel.along = along;\n  sharedRel.squaredDistance = toFixed(squaredDistance(x, y, px, py), 10);\n  return sharedRel;\n}\n\n/**\n * @param {LineCoordType} coordinates The coordinates.\n * @param {number} index The index.  May be fractional and may wrap.\n * @return {import(\"../coordinate.js\").Coordinate} The interpolated coordinate.\n */\nfunction interpolateCoordinate(coordinates, index) {\n  const count = coordinates.length;\n\n  let startIndex = Math.floor(index);\n  const along = index - startIndex;\n  if (startIndex >= count) {\n    startIndex -= count;\n  } else if (startIndex < 0) {\n    startIndex += count;\n  }\n\n  let endIndex = startIndex + 1;\n  if (endIndex >= count) {\n    endIndex -= count;\n  }\n\n  const start = coordinates[startIndex];\n  const x0 = start[0];\n  const y0 = start[1];\n  const end = coordinates[endIndex];\n  const dx = end[0] - x0;\n  const dy = end[1] - y0;\n\n  return [x0 + dx * along, y0 + dy * along];\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/Geometry.js\").Type}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/Geometry.js\").Type} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === 'Polygon'\n        ? 3\n        : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === 'Circle'\n        ? 2\n        : options.maxPoints\n          ? options.maxPoints\n          : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === 'Circle') {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = (coordinates, geometry, projection) => {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection),\n          );\n          circle.setCenterAndRadius(\n            center,\n            Math.sqrt(squaredLength),\n            this.geometryLayout_,\n          );\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === 'Point') {\n          Constructor = Point;\n        } else if (mode === 'LineString') {\n          Constructor = LineString;\n        } else if (mode === 'Polygon') {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = (coordinates, geometry, projection) => {\n          if (geometry) {\n            if (mode === 'Polygon') {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates(\n                  [coordinates[0].concat([coordinates[0][0]])],\n                  this.geometryLayout_,\n                );\n              } else {\n                geometry.setCoordinates([], this.geometryLayout_);\n              }\n            } else {\n              geometry.setCoordinates(coordinates, this.geometryLayout_);\n            }\n          } else {\n            geometry = new Constructor(coordinates, this.geometryLayout_);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.traceCondition_;\n    this.setTrace(options.trace || false);\n\n    /**\n     * @type {TraceState}\n     * @private\n     */\n    this.traceState_ = {active: false};\n\n    /**\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.traceSource_ = options.traceSource || options.source || null;\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Toggle tracing mode or set a tracing condition.\n   *\n   * @param {boolean|import(\"../events/condition.js\").Condition} trace A boolean to toggle tracing mode or an event\n   *     condition that will be checked when a feature is clicked to determine if tracing should be active.\n   */\n  setTrace(trace) {\n    let condition;\n    if (!trace) {\n      condition = never;\n    } else if (trace === true) {\n      condition = always;\n    } else {\n      condition = trace;\n    }\n    this.traceCondition_ = condition;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   * @override\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default<PointerEvent>} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== 'Point' && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default<PointerEvent>} event Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    }\n\n    if (!this.condition_(event)) {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(() => {\n      this.handlePointerMove_(\n        new MapBrowserEvent(\n          MapBrowserEventType.POINTERMOVE,\n          event.map,\n          event.originalEvent,\n          false,\n          event.frameState,\n        ),\n      );\n    }, this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  deactivateTrace_() {\n    this.traceState_ = {active: false};\n  }\n\n  /**\n   * Activate or deactivate trace state based on a browser event.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  toggleTraceState_(event) {\n    if (!this.traceSource_ || !this.traceCondition_(event)) {\n      return;\n    }\n\n    if (this.traceState_.active) {\n      this.deactivateTrace_();\n      return;\n    }\n\n    const map = this.getMap();\n    const lowerLeft = map.getCoordinateFromPixel([\n      event.pixel[0] - this.snapTolerance_,\n      event.pixel[1] + this.snapTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      event.pixel[0] + this.snapTolerance_,\n      event.pixel[1] - this.snapTolerance_,\n    ]);\n    const extent = boundingExtent([lowerLeft, upperRight]);\n    const features = this.traceSource_.getFeaturesInExtent(extent);\n    if (features.length === 0) {\n      return;\n    }\n\n    const targets = getTraceTargets(event.coordinate, features);\n    if (targets.length) {\n      this.traceState_ = {\n        active: true,\n        startPx: event.pixel.slice(),\n        targets: targets,\n        targetIndex: -1,\n      };\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} endIndex The new end index of the trace.\n   * @private\n   */\n  addOrRemoveTracedCoordinates_(target, endIndex) {\n    // three cases to handle:\n    //  1. traced in the same direction and points need adding\n    //  2. traced in the same direction and points need removing\n    //  3. traced in a new direction\n    const previouslyForward = target.startIndex <= target.endIndex;\n    const currentlyForward = target.startIndex <= endIndex;\n    if (previouslyForward === currentlyForward) {\n      // same direction\n      if (\n        (previouslyForward && endIndex > target.endIndex) ||\n        (!previouslyForward && endIndex < target.endIndex)\n      ) {\n        // case 1 - add new points\n        this.addTracedCoordinates_(target, target.endIndex, endIndex);\n      } else if (\n        (previouslyForward && endIndex < target.endIndex) ||\n        (!previouslyForward && endIndex > target.endIndex)\n      ) {\n        // case 2 - remove old points\n        this.removeTracedCoordinates_(endIndex, target.endIndex);\n      }\n    } else {\n      // case 3 - remove old points, add new points\n      this.removeTracedCoordinates_(target.startIndex, target.endIndex);\n      this.addTracedCoordinates_(target, target.startIndex, endIndex);\n    }\n  }\n\n  /**\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  removeTracedCoordinates_(fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    let remove = 0;\n    if (fromIndex < toIndex) {\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        end -= 1;\n      }\n      remove = end - start + 1;\n    } else {\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      remove = start - end + 1;\n    }\n\n    if (remove > 0) {\n      this.removeLastPoints_(remove);\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  addTracedCoordinates_(target, fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    const coordinates = [];\n    if (fromIndex < toIndex) {\n      // forward trace\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        // if end is snapped to a vertex, it will be added later\n        end -= 1;\n      }\n      for (let i = start; i <= end; ++i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    } else {\n      // reverse trace\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      for (let i = start; i >= end; --i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    }\n    if (coordinates.length) {\n      this.appendCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Update the trace.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  updateTrace_(event) {\n    const traceState = this.traceState_;\n    if (!traceState.active) {\n      return;\n    }\n\n    if (traceState.targetIndex === -1) {\n      // check if we are ready to pick a target\n      if (distance(traceState.startPx, event.pixel) < this.snapTolerance_) {\n        return;\n      }\n    }\n\n    const updatedTraceTarget = getTraceTargetUpdate(\n      event.coordinate,\n      traceState,\n      this.getMap(),\n      this.snapTolerance_,\n    );\n\n    if (traceState.targetIndex !== updatedTraceTarget.index) {\n      // target changed\n      if (traceState.targetIndex !== -1) {\n        // remove points added during previous trace\n        const oldTarget = traceState.targets[traceState.targetIndex];\n        this.removeTracedCoordinates_(oldTarget.startIndex, oldTarget.endIndex);\n      }\n      // add points for the new target\n      const newTarget = traceState.targets[updatedTraceTarget.index];\n      this.addTracedCoordinates_(\n        newTarget,\n        newTarget.startIndex,\n        updatedTraceTarget.endIndex,\n      );\n    } else {\n      // target stayed the same\n      const target = traceState.targets[traceState.targetIndex];\n      this.addOrRemoveTracedCoordinates_(target, updatedTraceTarget.endIndex);\n    }\n\n    // modify the state with updated info\n    traceState.targetIndex = updatedTraceTarget.index;\n    const target = traceState.targets[traceState.targetIndex];\n    target.endIndex = updatedTraceTarget.endIndex;\n\n    // update event coordinate and pixel to match end point of final segment\n    const coordinate = interpolateCoordinate(\n      target.coordinates,\n      target.endIndex,\n    );\n    const pixel = this.getMap().getPixelFromCoordinate(coordinate);\n    event.coordinate = coordinate;\n    event.pixel = [Math.round(pixel[0]), Math.round(pixel[1])];\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default<PointerEvent>} event Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n      const tracing = this.traceState_.active;\n      this.toggleTraceState_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === 'Point')\n        ) {\n          if (this.atFinish_(event.pixel, tracing)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default<PointerEvent>} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (!this.finishCoordinate_) {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n      return;\n    }\n\n    this.updateTrace_(event);\n    this.modifyDrawing_(event.coordinate);\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {boolean} [tracing] Drawing in trace mode (only stop if at the starting point).\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel, tracing) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === 'Point') {\n        at = true;\n      } else if (mode === 'Circle') {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === 'LineString') {\n        potentiallyDone =\n          !tracing && this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === 'Polygon') {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n        if (tracing) {\n          potentiallyFinishCoordinates = [sketchCoords[0][0]];\n        } else {\n          potentiallyFinishCoordinates = [\n            sketchCoords[0][0],\n            sketchCoords[0][sketchCoords[0].length - 2],\n          ];\n        }\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout(),\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates(),\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    while (start.length < stride) {\n      start.push(0);\n    }\n    this.finishCoordinate_ = start;\n    if (this.mode_ === 'Point') {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === 'Polygon') {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection,\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_),\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    let coordinates, last;\n    while (coordinate.length < stride) {\n      coordinate.push(0);\n    }\n    if (this.mode_ === 'Point') {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection,\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (geometry.getType() === 'Polygon' && this.mode_ !== 'Polygon') {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>} The sketch feature.\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === 'LineString' || mode === 'Circle') {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      return this.finishDrawing();\n    }\n    return this.sketchFeature_;\n  }\n\n  /**\n   * @param {number} n The number of points to remove.\n   */\n  removeLastPoints_(n) {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    const mode = this.mode_;\n    for (let i = 0; i < n; ++i) {\n      let coordinates;\n      if (mode === 'LineString' || mode === 'Circle') {\n        coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n        coordinates.splice(-2, 1);\n        if (coordinates.length >= 2) {\n          this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n          const finishCoordinate = this.finishCoordinate_.slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        this.geometryFunction_(coordinates, geometry, projection);\n        if (geometry.getType() === 'Polygon' && this.sketchLine_) {\n          this.createOrUpdateCustomSketchLine_(\n            /** @type {Polygon} */ (geometry),\n          );\n        }\n      } else if (mode === 'Polygon') {\n        coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n        coordinates.splice(-2, 1);\n        const sketchLineGeom = this.sketchLine_.getGeometry();\n        if (coordinates.length >= 2) {\n          const finishCoordinate = coordinates[coordinates.length - 2].slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        sketchLineGeom.setCoordinates(coordinates);\n        this.geometryFunction_(this.sketchCoords_, geometry, projection);\n      }\n\n      if (coordinates.length === 1) {\n        this.abortDrawing();\n        break;\n      }\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    this.removeLastPoints_(1);\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The drawn feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return null;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === 'LineString') {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === 'Polygon') {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === 'MultiPoint') {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)]),\n      );\n    } else if (this.type_ === 'MultiLineString') {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)]),\n      );\n    } else if (this.type_ === 'MultiPolygon') {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)]),\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    this.deactivateTrace_();\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === 'LineString' || mode === 'Circle') {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === 'Polygon') {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.sketchFeature_ = this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_),\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(sides, angle) {\n  return function (coordinates, geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection,\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection,\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    geometry = geometry || fromCircle(new Circle(center), sides);\n\n    let internalAngle = angle;\n    if (!angle && angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      internalAngle = Math.atan2(y, x);\n    }\n    makeRegular(\n      /** @type {Polygon} */ (geometry),\n      center,\n      radius,\n      internalAngle,\n    );\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      }),\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n      return 'Point';\n    case 'LineString':\n    case 'MultiLineString':\n      return 'LineString';\n    case 'Polygon':\n    case 'MultiPolygon':\n      return 'Polygon';\n    case 'Circle':\n      return 'Circle';\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","import OLMap from 'ol/Map.js';\nimport View from 'ol/View.js';\nimport ImageLayer from 'ol/layer/Image.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport Feature from 'ol/Feature.js';\nimport Polygon from 'ol/geom/Polygon.js';\nimport {Stroke, Style, Fill} from 'ol/style.js';\nimport {fromLonLat} from 'ol/proj.js';\nimport ImageTile from 'ol/source/ImageTile.js';\nimport RasterSource from 'ol/source/Raster.js';\nimport LayerSwitcher from 'ol-layerswitcher';\nimport {simplifyLineString} from 'ol/geom/flat/simplify.js';\nimport Draw from 'ol/interaction/Draw.js';\nimport Modify from 'ol/interaction/Modify.js';\nimport Snap from 'ol/interaction/Snap.js';\nimport {Select} from 'ol/interaction.js';\nimport {never, click} from 'ol/events/condition.js';\nimport Circle from 'ol/geom/Circle.js';\nimport LineString from 'ol/geom/LineString.js';\n\n// --- Configuration Management with Local Storage ---\n\n// Configuration storage key\nconst CONFIG_STORAGE_KEY = 'fbd_configuration';\nconst CONSTRAINT_STORAGE_KEY = 'fbd_constraints';\n\n// Default configuration values\nconst DEFAULT_CONFIG = {\n  epsilon: 0.011,\n  minClusterSize: 2,\n  coordWeight: 1.4,\n  constraintTolerance: 50,\n  rasterVisible: true,\n  simplifyTolerance: 0.5,\n  smoothingIterations: 5,\n  movingAverageWindow: 10\n};\n\n// Global state variables\nlet rasterVisible = true;\nlet mapReady = false; // Track if map is ready for clustering\n\n// --- Constraint Management System ---\n\n/**\n * Manages spatial constraints for DBSCAN clustering.\n * Supports must-link and cannot-link constraints with efficient storage and lookup.\n */\nclass ConstraintManager {\n  constructor() {\n    // Map constraint IDs to constraint objects\n    this.constraintMap = new Map();\n\n    // Spatial index for fast constraint lookup\n    // Maps pixel coordinates \"x,y\" to constraint IDs\n    this.spatialIndex = new Map();\n\n    // Counter for generating unique constraint IDs\n    this.nextId = 1;\n\n    // Cache for pixel constraint lookups\n    this.pixelConstraintCache = new Map();\n\n    // Flag to track if constraints have been modified\n    this.isDirty = false;\n\n    console.log('ConstraintManager initialized successfully');\n  }\n\n      /**\n   * Add a new constraint to the system\n   * @param {string} type - 'must-link' or 'cannot-link'\n   * @param {Array} pixels - Array of pixel coordinates [{x, y}, ...]\n   * @param {Object} metadata - Additional constraint metadata\n   * @returns {string} - Unique constraint ID\n   */\n  addConstraint(type, pixels, metadata = {}) {\n    const id = `constraint_${this.nextId++}`;\n\n    // Mark RGB values for calculation during first clustering run\n    const averageRGB = {\n      r: 0.0, g: 0.0, b: 0.0,\n      pixelCount: pixels.length,\n      needsCalculation: true\n    };\n\n    const constraint = {\n      id,\n      type,\n      pixels: [...pixels], // Deep copy\n      metadata: {...metadata},\n      averageRGB, // Will be calculated during first clustering\n      created: Date.now(),\n      active: true\n    };\n\n    this.constraintMap.set(id, constraint);\n\n    // Update spatial index\n    this.updateSpatialIndex(id, pixels);\n\n    // Clear cache as constraints have changed\n    this.clearCache();\n\n    this.isDirty = true;\n\n    // Debug logging\n    console.log(`Adding constraint ${id}:`, {\n      type,\n      pixelCount: pixels.length,\n      constraintMapSize: this.constraintMap.size,\n      constraintMapKeys: Array.from(this.constraintMap.keys())\n    });\n\n    // Save constraints to localStorage\n    this.saveConstraintsToStorage();\n\n    console.log(`Added ${type} constraint ${id} with ${pixels.length} pixels, RGB will be calculated during clustering`);\n    console.log(`📊 Current constraint statistics:`, this.getStatistics());\n    return id;\n  }\n\n  /**\n   * Remove a constraint from the system\n   * @param {string} constraintId - The constraint ID to remove\n   * @returns {boolean} - True if constraint was removed\n   */\n  removeConstraint(constraintId) {\n    const constraint = this.constraintMap.get(constraintId);\n    if (!constraint) {\n      return false;\n    }\n\n    // Remove from spatial index\n    this.removeSpatialIndex(constraintId, constraint.pixels);\n\n    // Remove from constraints map\n    this.constraintMap.delete(constraintId);\n\n    // Clear cache\n    this.clearCache();\n\n    this.isDirty = true;\n\n    // Save constraints to localStorage\n    this.saveConstraintsToStorage();\n\n    console.log(`Removed constraint ${constraintId}`);\n    return true;\n  }\n\n  /**\n   * Get all constraints affecting a specific pixel\n   * @param {number} x - Pixel x coordinate\n   * @param {number} y - Pixel y coordinate\n   * @returns {Array} - Array of constraint objects\n   */\n  getPixelConstraints(x, y) {\n    const key = `${x},${y}`;\n\n    // Check cache first\n    if (this.pixelConstraintCache.has(key)) {\n      return this.pixelConstraintCache.get(key);\n    }\n\n    const constraintIds = this.spatialIndex.get(key) || [];\n    const constraints = constraintIds\n      .map(id => this.constraintMap.get(id))\n      .filter(c => c && c.active);\n\n    // Cache the result\n    this.pixelConstraintCache.set(key, constraints);\n\n    return constraints;\n  }\n\n  /**\n   * Check if two pixels have a must-link constraint\n   * @param {number} x1 - First pixel x coordinate\n   * @param {number} y1 - First pixel y coordinate\n   * @param {number} x2 - Second pixel x coordinate\n   * @param {number} y2 - Second pixel y coordinate\n   * @returns {boolean} - True if pixels must be linked\n   */\n  hasMustLink(x1, y1, x2, y2) {\n    const constraints1 = this.getPixelConstraints(x1, y1);\n    const constraints2 = this.getPixelConstraints(x2, y2);\n\n    // Check if both pixels share any must-link constraints\n    for (const c1 of constraints1) {\n      if (c1.type !== 'must-link') continue;\n\n      for (const c2 of constraints2) {\n        if (c2.type === 'must-link' && c1.id === c2.id) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Check if two pixels have a cannot-link constraint\n   * @param {number} x1 - First pixel x coordinate\n   * @param {number} y1 - First pixel y coordinate\n   * @param {number} x2 - Second pixel x coordinate\n   * @param {number} y2 - Second pixel y coordinate\n   * @returns {boolean} - True if pixels cannot be linked\n   */\n  hasCannotLink(x1, y1, x2, y2) {\n    const constraints1 = this.getPixelConstraints(x1, y1);\n    const constraints2 = this.getPixelConstraints(x2, y2);\n\n    // Check if both pixels share any cannot-link constraints\n    for (const c1 of constraints1) {\n      if (c1.type !== 'cannot-link') continue;\n\n      for (const c2 of constraints2) {\n        if (c2.type === 'cannot-link' && c1.id === c2.id) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Get all active constraints\n   * @returns {Array} - Array of all constraint objects\n   */\n  getAllConstraints() {\n    if (!this.constraintMap || typeof this.constraintMap.values !== 'function') {\n      console.warn('Constraints not properly initialized, returning empty array');\n      return [];\n    }\n    return Array.from(this.constraintMap.values())\n      .filter(c => c.active);\n  }\n\n  /**\n   * Get constraints by type\n   * @param {string} type - 'must-link' or 'cannot-link'\n   * @returns {Array} - Array of constraint objects of the specified type\n   */\n  getConstraintsByType(type) {\n    return this.getAllConstraints()\n      .filter(c => c.type === type);\n  }\n\n  /**\n   * Clear all constraints\n   */\n  clearAllConstraints() {\n    this.clearConstraintsFromMemory();\n\n    // Save constraints to localStorage (empty state)\n    this.saveConstraintsToStorage();\n\n    console.log('Cleared all constraints');\n  }\n\n  /**\n   * Clear constraints from memory only (without saving to localStorage)\n   */\n  clearConstraintsFromMemory() {\n    this.constraintMap.clear();\n    this.spatialIndex.clear();\n    this.clearCache();\n    this.isDirty = true;\n  }\n\n  /**\n   * Clear constraints from localStorage only (for testing)\n   */\n  clearConstraintsFromLocalStorageOnly() {\n    try {\n      localStorage.removeItem(CONSTRAINT_STORAGE_KEY);\n      console.log('Constraints cleared from localStorage only');\n    } catch (error) {\n      console.warn('Error clearing constraints from localStorage:', error);\n    }\n  }\n\n  /**\n   * Update spatial index for a constraint\n   * @private\n   */\n  updateSpatialIndex(constraintId, pixels) {\n    for (const pixel of pixels) {\n      const key = `${pixel.x},${pixel.y}`;\n\n      if (!this.spatialIndex.has(key)) {\n        this.spatialIndex.set(key, []);\n      }\n\n      const constraintIds = this.spatialIndex.get(key);\n      if (!constraintIds.includes(constraintId)) {\n        constraintIds.push(constraintId);\n      }\n    }\n  }\n\n  /**\n   * Remove spatial index entries for a constraint\n   * @private\n   */\n  removeSpatialIndex(constraintId, pixels) {\n    for (const pixel of pixels) {\n      const key = `${pixel.x},${pixel.y}`;\n      const constraintIds = this.spatialIndex.get(key);\n\n      if (constraintIds) {\n        const index = constraintIds.indexOf(constraintId);\n        if (index > -1) {\n          constraintIds.splice(index, 1);\n        }\n\n        // Remove empty entries\n        if (constraintIds.length === 0) {\n          this.spatialIndex.delete(key);\n        }\n      }\n    }\n  }\n\n  /**\n   * Clear internal caches\n   * @private\n   */\n  clearCache() {\n    this.pixelConstraintCache.clear();\n  }\n\n\n\n  /**\n   * Update constraint RGB values when image data becomes available\n   * @param {Object} imageData - Current image data\n   */\n  updateConstraintRGBs(imageData) {\n    if (!imageData || !imageData.data) {\n      return;\n    }\n\n    let updatedCount = 0;\n    for (const constraint of this.constraintMap.values()) {\n      if (constraint.averageRGB && constraint.averageRGB.needsCalculation) {\n        const newAvgRGB = this.calculateAverageRGB(constraint.pixels, imageData);\n        if (newAvgRGB) {\n          constraint.averageRGB = newAvgRGB;\n          updatedCount++;\n        }\n      }\n    }\n\n    if (updatedCount > 0) {\n      console.log(`Updated RGB values for ${updatedCount} constraints`);\n      this.clearCache();\n    }\n  }\n\n  /**\n   * Reactivate constraints that were deactivated due to view changes\n   */\n  reactivateConstraints() {\n    let reactivatedCount = 0;\n    for (const constraint of this.constraintMap.values()) {\n      if (!constraint.active && constraint.averageRGB && constraint.averageRGB.needsCalculation) {\n        constraint.active = true;\n        reactivatedCount++;\n      }\n    }\n\n    if (reactivatedCount > 0) {\n      console.log(`Reactivated ${reactivatedCount} constraints for new view`);\n      this.clearCache();\n    }\n  }\n\n  /**\n   * Get statistics about the constraint system\n   * @returns {Object} - Statistics object\n   */\n  getStatistics() {\n    const constraints = this.getAllConstraints();\n    const mustLinkCount = constraints.filter(c => c.type === 'must-link').length;\n    const cannotLinkCount = constraints.filter(c => c.type === 'cannot-link').length;\n\n    let totalPixels = 0;\n    for (const constraint of constraints) {\n      totalPixels += constraint.pixels.length;\n    }\n\n    return {\n      totalConstraints: constraints.length,\n      mustLinkConstraints: mustLinkCount,\n      cannotLinkConstraints: cannotLinkCount,\n      totalPixelsConstrained: totalPixels,\n      spatialIndexSize: this.spatialIndex.size,\n      cacheSize: this.pixelConstraintCache.size\n    };\n  }\n\n  /**\n   * Export constraints to JSON\n   * @returns {string} - JSON representation of constraints\n   */\n  exportConstraints() {\n    // Safety check for constraints initialization\n    if (!this.constraintMap || typeof this.constraintMap.values !== 'function') {\n      console.warn('Constraints not properly initialized as Map, reinitializing...');\n      console.log('constraintMap type:', typeof this.constraintMap);\n      console.log('constraintMap value:', this.constraintMap);\n      console.log('constraintMap constructor:', this.constraintMap?.constructor?.name);\n      this.constraintMap = new Map();\n    }\n\n    console.log('Exporting constraints - constraintMap size:', this.constraintMap.size);\n    console.log('Exporting constraints - constraintMap keys:', Array.from(this.constraintMap.keys()));\n\n    const data = {\n      constraints: Array.from(this.constraintMap.values()).map(constraint => {\n        // Create a clean export without circular references\n        return {\n          id: constraint.id,\n          type: constraint.type,\n          pixels: constraint.pixels,\n          metadata: constraint.metadata,\n          averageRGB: constraint.averageRGB,\n          created: constraint.created,\n          active: constraint.active\n        };\n      }),\n      metadata: {\n        version: '1.1', // Updated version for new structure\n        exported: Date.now(),\n        totalConstraints: this.constraintMap.size\n      }\n    };\n\n    console.log('Exported constraint data:', data);\n    return data; // Return object directly, not JSON string\n  }\n\n  /**\n   * Export constraints as JSON string\n   * @returns {string} - JSON representation of constraints\n   */\n  exportConstraintsAsJSON() {\n    return JSON.stringify(this.exportConstraints(), null, 2);\n  }\n\n  /**\n   * Import constraints from JSON\n   * @param {string} jsonData - JSON string containing constraints\n   * @returns {boolean} - True if import was successful\n   */\n  importConstraints(jsonData) {\n    try {\n      // Handle both JSON string and object input\n      const data = typeof jsonData === 'string' ? JSON.parse(jsonData) : jsonData;\n\n      if (!data.constraints || !Array.isArray(data.constraints)) {\n        throw new Error('Invalid constraint data format');\n      }\n\n      // Clear existing constraints from memory only (not localStorage)\n      this.clearConstraintsFromMemory();\n\n      // Import constraints\n      for (const constraint of data.constraints) {\n        if (constraint.id && constraint.type && constraint.pixels) {\n          this.constraintMap.set(constraint.id, constraint);\n          this.updateSpatialIndex(constraint.id, constraint.pixels);\n\n          // Update next ID to avoid conflicts\n          const idNum = parseInt(constraint.id.replace('constraint_', ''));\n          if (!isNaN(idNum) && idNum >= this.nextId) {\n            this.nextId = idNum + 1;\n          }\n        }\n      }\n\n      console.log(`Imported ${data.constraints.length} constraints`);\n      return true;\n    } catch (error) {\n      console.error('Error importing constraints:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Save constraints to localStorage\n   */\n  saveConstraintsToStorage() {\n    try {\n      const constraintData = this.exportConstraints();\n      localStorage.setItem(CONSTRAINT_STORAGE_KEY, JSON.stringify(constraintData));\n    } catch (error) {\n      console.warn('Error saving constraints to localStorage:', error);\n    }\n  }\n\n  /**\n   * Load constraints from localStorage\n   * @returns {boolean} - True if load was successful\n   */\n  loadConstraintsFromStorage() {\n    try {\n      const saved = localStorage.getItem(CONSTRAINT_STORAGE_KEY);\n      if (saved) {\n        const success = this.importConstraints(saved);\n        if (success) {\n          console.log('Constraints loaded from localStorage');\n          return true;\n        }\n      }\n    } catch (error) {\n      console.warn('Error loading constraints from localStorage:', error);\n    }\n    return false;\n  }\n\n  /**\n   * Clear constraints from localStorage\n   */\n  clearConstraintsFromStorage() {\n    try {\n      localStorage.removeItem(CONSTRAINT_STORAGE_KEY);\n      console.log('Constraints cleared from localStorage');\n    } catch (error) {\n      console.warn('Error clearing constraints from localStorage:', error);\n    }\n  }\n}\n\n// Global constraint manager instance\nconst globalConstraintManager = new ConstraintManager();\n\n// --- Drawing Tools for Annotations ---\n\n/**\n * Drawing manager for creating spatial annotations\n * Handles circle (must-link) and line (boundary) drawing tools\n */\nclass DrawingManager {\n  constructor(map, constraintManager) {\n    this.map = map;\n    this.constraintManager = constraintManager;\n\n    // Drawing interactions\n    this.circleDrawInteraction = null;\n    this.lineDrawInteraction = null;\n\n    // Drawing state\n    this.isDrawingEnabled = false;\n    this.currentTool = null; // 'circle' or 'line'\n\n    // Status message\n    this.statusMessage = null;\n    this.keyboardHandler = null;\n\n    // Annotation layer for visual feedback\n    this.annotationSource = new VectorSource();\n    this.annotationLayer = new VectorLayer({\n      title: 'Annotations',\n      source: this.annotationSource,\n      style: this.getAnnotationStyle.bind(this),\n      zIndex: 1000 // Ensure annotations appear on top\n    });\n\n    // Add annotation layer to map\n    this.map.addLayer(this.annotationLayer);\n\n    // Initialize drawing interactions\n    this.initializeDrawingInteractions();\n  }\n\n  /**\n   * Get style for annotation features\n   */\n  getAnnotationStyle(feature) {\n    const geometry = feature.getGeometry();\n\n    if (geometry instanceof Circle) {\n      // Must-link constraint (circle)\n      return new Style({\n        stroke: new Stroke({\n          color: '#00ff00',\n          width: 2,\n          lineDash: [5, 5]\n        }),\n        fill: new Fill({\n          color: 'rgba(0, 255, 0, 0.1)'\n        })\n      });\n    } else if (geometry instanceof LineString) {\n      // Cannot-link constraint (line)\n      return new Style({\n        stroke: new Stroke({\n          color: '#ff0000',\n          width: 3,\n          lineDash: [10, 5]\n        })\n      });\n    }\n\n    // Default style\n    return new Style({\n      stroke: new Stroke({\n        color: '#666666',\n        width: 2\n      })\n    });\n  }\n\n  /**\n   * Initialize drawing interactions\n   */\n  initializeDrawingInteractions() {\n    // Circle drawing for must-link constraints\n    this.circleDrawInteraction = new Draw({\n      source: this.annotationSource,\n      type: 'Circle',\n      style: new Style({\n        stroke: new Stroke({\n          color: '#00ff00',\n          width: 2,\n          lineDash: [5, 5]\n        }),\n        fill: new Fill({\n          color: 'rgba(0, 255, 0, 0.2)'\n        })\n      })\n    });\n\n    // Line drawing for boundary constraints\n    this.lineDrawInteraction = new Draw({\n      source: this.annotationSource,\n      type: 'LineString',\n      style: new Style({\n        stroke: new Stroke({\n          color: '#ff0000',\n          width: 3,\n          lineDash: [10, 5]\n        })\n      })\n    });\n\n    // Event handlers for drawing completion\n    this.circleDrawInteraction.on('drawend', this.handleCircleDrawEnd.bind(this));\n    this.lineDrawInteraction.on('drawend', this.handleLineDrawEnd.bind(this));\n\n    // Initialize keyboard event handling\n    this.initializeKeyboardHandling();\n  }\n\n  /**\n   * Initialize keyboard event handling for drawing tools\n   */\n  initializeKeyboardHandling() {\n    // Add keyboard event listener to document\n    this.keyboardHandler = this.handleKeyboardEvent.bind(this);\n    document.addEventListener('keydown', this.keyboardHandler);\n  }\n\n  /**\n   * Handle keyboard events for drawing tools\n   */\n  handleKeyboardEvent(event) {\n    if (!this.isDrawingEnabled || !this.map) {\n      return; // Only handle keyboard events when drawing is enabled and map exists\n    }\n\n    switch (event.key) {\n      case 'Escape':\n        // Disable drawing on ESC\n        event.preventDefault();\n        this.disableAllDrawing();\n        if (typeof updateDrawingButtonStates === 'function') {\n          updateDrawingButtonStates();\n        }\n        console.log('Drawing disabled by ESC key');\n        break;\n\n      case 'Enter':\n        // Finish line drawing on ENTER (only for line tool)\n        if (this.currentTool === 'line') {\n          event.preventDefault();\n          // Show feedback that ENTER was pressed\n          this.showStatusMessage('Finishing line... Press ENTER again or click to complete');\n          console.log('Line drawing finished by ENTER key');\n        }\n        break;\n    }\n  }\n\n  /**\n   * Clean up keyboard event handling\n   */\n  cleanupKeyboardHandling() {\n    if (this.keyboardHandler) {\n      document.removeEventListener('keydown', this.keyboardHandler);\n      this.keyboardHandler = null;\n    }\n  }\n\n  /**\n   * Clean up all resources\n   */\n  cleanup() {\n    this.cleanupKeyboardHandling();\n    this.hideStatusMessage();\n    this.disableAllDrawing();\n  }\n\n  /**\n   * Handle circle drawing completion\n   */\n  handleCircleDrawEnd(event) {\n    console.log('Circle drawing completed');\n    const feature = event.feature;\n    const circle = feature.getGeometry();\n\n    console.log('Circle center:', circle.getCenter());\n    console.log('Circle radius:', circle.getRadius());\n\n    // Extract pixels within the circle\n    const pixels = this.extractPixelsFromCircle(circle);\n\n    console.log(`Extracted ${pixels.length} pixels from circle`);\n    if (pixels.length > 0) {\n      console.log('Sample pixels:', pixels.slice(0, 3)); // Log first 3 pixels for debugging\n\n      // Check if constraint manager exists\n      if (!this.constraintManager) {\n        console.error('Constraint manager not available');\n        this.annotationSource.removeFeature(feature);\n        return;\n      }\n\n      // Add must-link constraint (RGB will be calculated during clustering)\n      const constraintId = this.constraintManager.addConstraint(\n        'must-link',\n        pixels,\n        {\n          source: 'drawing',\n          shape: 'circle',\n          center: circle.getCenter(),\n          radius: circle.getRadius()\n        }\n      );\n\n      console.log(`Created constraint with ID: ${constraintId}`);\n\n      // Store constraint ID in feature for reference\n      feature.set('constraintId', constraintId);\n      feature.set('constraintType', 'must-link');\n\n      console.log(`Created must-link constraint with ${pixels.length} pixels`);\n\n      // Show success feedback\n      this.showStatusMessage(`Circle constraint created with ${pixels.length} pixels!`, 2000);\n\n      // Update constraint tooltip if available\n      if (typeof updateConstraintTooltip === 'function') {\n        updateConstraintTooltip();\n      }\n\n      // Trigger clustering update\n      this.updateClustering();\n    } else {\n      console.warn('No pixels found within drawn circle');\n      // Remove the feature if no pixels were captured\n      this.annotationSource.removeFeature(feature);\n\n      // Show error feedback\n      this.showStatusMessage('No pixels captured - try drawing a larger circle', 3000);\n    }\n  }\n\n  /**\n   * Handle line drawing completion\n   */\n  handleLineDrawEnd(event) {\n    const feature = event.feature;\n    const lineString = feature.getGeometry();\n\n    // Extract pixels on both sides of the line\n    const pixels = this.extractPixelsFromLine(lineString);\n\n    if (pixels.length > 0) {\n      // Check if constraint manager exists\n      if (!this.constraintManager) {\n        console.error('Constraint manager not available');\n        this.annotationSource.removeFeature(feature);\n        return;\n      }\n\n      // Add cannot-link constraint (RGB will be calculated during clustering)\n      const constraintId = this.constraintManager.addConstraint(\n        'cannot-link',\n        pixels,\n        {\n          source: 'drawing',\n          shape: 'line',\n          coordinates: lineString.getCoordinates()\n        }\n      );\n\n      // Store constraint ID in feature for reference\n      feature.set('constraintId', constraintId);\n      feature.set('constraintType', 'cannot-link');\n\n      console.log(`Created cannot-link constraint with ${pixels.length} pixels`);\n\n      // Show success feedback\n      this.showStatusMessage(`Line constraint created with ${pixels.length} pixels!`, 2000);\n\n      // Update constraint tooltip if available\n      if (typeof updateConstraintTooltip === 'function') {\n        updateConstraintTooltip();\n      }\n\n      // Trigger clustering update\n      this.updateClustering();\n    } else {\n      console.warn('No pixels found along drawn line');\n      // Remove the feature if no pixels were captured\n      this.annotationSource.removeFeature(feature);\n\n      // Show error feedback\n      this.showStatusMessage('No pixels captured - try drawing a longer line', 3000);\n    }\n  }\n\n  /**\n   * Extract pixels within a circle geometry\n   */\n  extractPixelsFromCircle(circle) {\n    const pixels = [];\n    const center = circle.getCenter();\n    const radius = circle.getRadius();\n\n    // Get current view data for coordinate conversion\n    const view = this.map.getView();\n    const viewData = {\n      center: view.getCenter(),\n      resolution: view.getResolution(),\n      mapSize: this.map.getSize()\n    };\n\n    if (!viewData.center || !viewData.resolution || !viewData.mapSize) {\n      console.warn('View data not available for pixel extraction');\n      return pixels;\n    }\n\n    // Calculate approximate pixel bounds based on circle\n    const extent = circle.getExtent();\n    const pixelBounds = this.getPixelBoundsFromExtent(extent, viewData);\n\n    if (!pixelBounds) {\n      return pixels;\n    }\n\n    // Sample pixels within the circle\n    for (let y = pixelBounds.minY; y <= pixelBounds.maxY; y++) {\n      for (let x = pixelBounds.minX; x <= pixelBounds.maxX; x++) {\n        // Convert pixel to map coordinates\n        const pixelCoord = this.pixelToMapCoordinate(x, y, pixelBounds.width, pixelBounds.height, viewData);\n\n        if (pixelCoord) {\n          // Check if pixel is within circle\n          const distance = Math.sqrt(\n            Math.pow(pixelCoord[0] - center[0], 2) +\n            Math.pow(pixelCoord[1] - center[1], 2)\n          );\n\n          if (distance <= radius) {\n            // We need to get RGB values from the current raster data\n            // For now, store coordinates and we'll extract RGB during clustering\n            pixels.push({\n              x,\n              y,\n              mapX: pixelCoord[0],\n              mapY: pixelCoord[1]\n            });\n          }\n        }\n      }\n    }\n\n    return pixels;\n  }\n\n  /**\n   * Extract pixels along a line geometry\n   */\n  extractPixelsFromLine(lineString) {\n    const pixels = [];\n    const coordinates = lineString.getCoordinates();\n\n    // Get current view data for coordinate conversion\n    const view = this.map.getView();\n    const viewData = {\n      center: view.getCenter(),\n      resolution: view.getResolution(),\n      mapSize: this.map.getSize()\n    };\n\n    if (!viewData.center || !viewData.resolution || !viewData.mapSize) {\n      console.warn('View data not available for pixel extraction');\n      return pixels;\n    }\n\n    // Get extent of the line\n    const extent = lineString.getExtent();\n    const pixelBounds = this.getPixelBoundsFromExtent(extent, viewData);\n\n    if (!pixelBounds) {\n      return pixels;\n    }\n\n    // Sample pixels along the line and buffer zone\n    const bufferDistance = 50; // pixels on each side of line\n\n    for (let y = pixelBounds.minY; y <= pixelBounds.maxY; y++) {\n      for (let x = pixelBounds.minX; x <= pixelBounds.maxX; x++) {\n        // Convert pixel to map coordinates\n        const pixelCoord = this.pixelToMapCoordinate(x, y, pixelBounds.width, pixelBounds.height, viewData);\n\n        if (pixelCoord) {\n          // Check if pixel is close to the line\n          const distanceToLine = this.distancePointToLineString(pixelCoord, coordinates);\n\n          // Convert buffer distance from pixels to map units\n          const bufferInMapUnits = bufferDistance * viewData.resolution;\n\n          if (distanceToLine <= bufferInMapUnits) {\n            pixels.push({\n              x,\n              y,\n              mapX: pixelCoord[0],\n              mapY: pixelCoord[1]\n            });\n          }\n        }\n      }\n    }\n\n    return pixels;\n  }\n\n  /**\n   * Calculate distance from a point to a line string\n   */\n  distancePointToLineString(point, lineCoordinates) {\n    let minDistance = Infinity;\n\n    for (let i = 0; i < lineCoordinates.length - 1; i++) {\n      const segmentStart = lineCoordinates[i];\n      const segmentEnd = lineCoordinates[i + 1];\n\n      const distance = this.distancePointToLineSegment(point, segmentStart, segmentEnd);\n      minDistance = Math.min(minDistance, distance);\n    }\n\n    return minDistance;\n  }\n\n  /**\n   * Calculate distance from a point to a line segment\n   */\n  distancePointToLineSegment(point, segmentStart, segmentEnd) {\n    const A = point[0] - segmentStart[0];\n    const B = point[1] - segmentStart[1];\n    const C = segmentEnd[0] - segmentStart[0];\n    const D = segmentEnd[1] - segmentStart[1];\n\n    const dot = A * C + B * D;\n    const lenSq = C * C + D * D;\n\n    if (lenSq === 0) {\n      // Degenerate segment (point)\n      return Math.sqrt(A * A + B * B);\n    }\n\n    let param = dot / lenSq;\n\n    let xx, yy;\n\n    if (param < 0) {\n      xx = segmentStart[0];\n      yy = segmentStart[1];\n    } else if (param > 1) {\n      xx = segmentEnd[0];\n      yy = segmentEnd[1];\n    } else {\n      xx = segmentStart[0] + param * C;\n      yy = segmentStart[1] + param * D;\n    }\n\n    const dx = point[0] - xx;\n    const dy = point[1] - yy;\n\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  /**\n   * Get pixel bounds from map extent\n   */\n  getPixelBoundsFromExtent(extent, viewData) {\n    const { center, resolution, mapSize } = viewData;\n\n    // Calculate the extent of the visible area\n    const halfWidth = (mapSize[0] * resolution) / 2;\n    const halfHeight = (mapSize[1] * resolution) / 2;\n\n    const viewExtent = [\n      center[0] - halfWidth,\n      center[1] - halfHeight,\n      center[0] + halfWidth,\n      center[1] + halfHeight\n    ];\n\n    // Convert extent to pixel coordinates\n    const width = mapSize[0];\n    const height = mapSize[1];\n\n    const minX = Math.max(0, Math.floor((extent[0] - viewExtent[0]) / (viewExtent[2] - viewExtent[0]) * width));\n    const maxX = Math.min(width - 1, Math.ceil((extent[2] - viewExtent[0]) / (viewExtent[2] - viewExtent[0]) * width));\n    const minY = Math.max(0, Math.floor((viewExtent[3] - extent[3]) / (viewExtent[3] - viewExtent[1]) * height));\n    const maxY = Math.min(height - 1, Math.ceil((viewExtent[3] - extent[1]) / (viewExtent[3] - viewExtent[1]) * height));\n\n    return {\n      minX,\n      minY,\n      maxX,\n      maxY,\n      width,\n      height\n    };\n  }\n\n  /**\n   * Convert pixel coordinates to map coordinates\n   */\n  pixelToMapCoordinate(pixelX, pixelY, width, height, viewData) {\n    const { center, resolution, mapSize } = viewData;\n\n    // Calculate the extent of the visible area\n    const halfWidth = (mapSize[0] * resolution) / 2;\n    const halfHeight = (mapSize[1] * resolution) / 2;\n\n    const viewExtent = [\n      center[0] - halfWidth,\n      center[1] - halfHeight,\n      center[0] + halfWidth,\n      center[1] + halfHeight\n    ];\n\n    // Convert pixel coordinates to map coordinates\n    const mapX = viewExtent[0] + (pixelX / width) * (viewExtent[2] - viewExtent[0]);\n    const mapY = viewExtent[3] - (pixelY / height) * (viewExtent[3] - viewExtent[1]);\n\n    return [mapX, mapY];\n  }\n\n  /**\n   * Enable circle drawing tool\n   */\n  enableCircleDrawing() {\n    this.disableAllDrawing();\n    this.map.addInteraction(this.circleDrawInteraction);\n    this.currentTool = 'circle';\n    this.isDrawingEnabled = true;\n    this.showDrawingFeedback();\n    console.log('Circle drawing enabled (must-link constraints)');\n  }\n\n  /**\n   * Enable line drawing tool\n   */\n  enableLineDrawing() {\n    this.disableAllDrawing();\n    this.map.addInteraction(this.lineDrawInteraction);\n    this.currentTool = 'line';\n    this.isDrawingEnabled = true;\n    this.showDrawingFeedback();\n    console.log('Line drawing enabled (cannot-link constraints)');\n  }\n\n  /**\n   * Disable all drawing tools\n   */\n  disableAllDrawing() {\n    this.map.removeInteraction(this.circleDrawInteraction);\n    this.map.removeInteraction(this.lineDrawInteraction);\n    this.currentTool = null;\n    this.isDrawingEnabled = false;\n    this.hideDrawingFeedback();\n    console.log('Drawing disabled');\n  }\n\n  /**\n   * Show visual feedback that drawing is active\n   */\n  showDrawingFeedback() {\n    // Add a temporary overlay or change cursor\n    const mapElement = this.map ? this.map.getViewport() : null;\n    if (mapElement) {\n      mapElement.style.cursor = this.currentTool === 'circle' ? 'crosshair' : 'crosshair';\n\n      // Add a temporary status message\n      this.showStatusMessage(`Drawing ${this.currentTool === 'circle' ? 'circle' : 'line'} - Press ESC to cancel, ${this.currentTool === 'line' ? 'ENTER to finish' : 'click to draw'}`);\n    }\n  }\n\n  /**\n   * Hide visual feedback that drawing is active\n   */\n  hideDrawingFeedback() {\n    const mapElement = this.map ? this.map.getViewport() : null;\n    if (mapElement) {\n      mapElement.style.cursor = '';\n    }\n    this.hideStatusMessage();\n  }\n\n  /**\n   * Show a temporary status message\n   */\n  showStatusMessage(message, duration = 3000) {\n    // Remove existing status message\n    this.hideStatusMessage();\n\n    // Create status message element\n    this.statusMessage = document.createElement('div');\n    this.statusMessage.id = 'drawing-status';\n    this.statusMessage.style.cssText = `\n      position: fixed;\n      top: 20px;\n      left: 50%;\n      transform: translateX(-50%);\n      background: rgba(0, 0, 0, 0.8);\n      color: white;\n      padding: 10px 20px;\n      border-radius: 5px;\n      z-index: 10000;\n      font-family: Arial, sans-serif;\n      font-size: 14px;\n      pointer-events: none;\n      animation: fadeOut 3s ease-out forwards;\n    `;\n    this.statusMessage.textContent = message;\n\n    document.body.appendChild(this.statusMessage);\n\n    // Remove status message after duration\n    setTimeout(() => {\n      if (this.statusMessage && this.statusMessage.parentNode) {\n        this.statusMessage.remove();\n      }\n      this.statusMessage = null;\n    }, duration);\n  }\n\n  /**\n   * Hide the status message\n   */\n  hideStatusMessage() {\n    if (this.statusMessage && this.statusMessage.parentNode) {\n      this.statusMessage.remove();\n    }\n    this.statusMessage = null;\n  }\n\n  /**\n   * Clear all annotations and constraints\n   */\n  clearAllAnnotations() {\n    // Check if constraint manager exists\n    if (!this.constraintManager) {\n      console.error('Constraint manager not available');\n      return;\n    }\n\n    // Remove all constraint-related features\n    const features = this.annotationSource.getFeatures();\n    const constraintIds = [];\n\n    features.forEach(feature => {\n      const constraintId = feature.get('constraintId');\n      if (constraintId) {\n        constraintIds.push(constraintId);\n      }\n    });\n\n    // Remove constraints from manager\n    constraintIds.forEach(id => {\n      this.constraintManager.removeConstraint(id);\n    });\n\n    // Clear all features from annotation layer\n    this.annotationSource.clear();\n\n    // Clear constraints from localStorage\n    this.constraintManager.clearConstraintsFromStorage();\n\n    console.log(`Cleared ${constraintIds.length} constraints and annotations`);\n\n    // Trigger clustering update\n    this.updateClustering();\n  }\n\n  /**\n   * Clear all annotations only (without affecting constraints)\n   */\n  clearAllAnnotationsOnly() {\n    this.annotationSource.clear();\n    console.log('Cleared all annotations (constraints preserved)');\n  }\n\n  /**\n   * Remove specific annotation and its constraint\n   */\n  removeAnnotation(feature) {\n    const constraintId = feature.get('constraintId');\n\n    if (constraintId) {\n      this.constraintManager.removeConstraint(constraintId);\n      console.log(`Removed constraint ${constraintId}`);\n    }\n\n    this.annotationSource.removeFeature(feature);\n\n    // Trigger clustering update\n    this.updateClustering();\n  }\n\n  /**\n   * Get current drawing state\n   */\n  getDrawingState() {\n    return {\n      isEnabled: this.isDrawingEnabled,\n      currentTool: this.currentTool,\n      annotationCount: this.annotationSource.getFeatures().length,\n      constraintCount: this.constraintManager.getAllConstraints().length\n    };\n  }\n\n      /**\n   * Get current image data from the raster source\n   */\n  getCurrentImageData() {\n    try {\n      // Get the current raster source\n      const rasterSource = this.map.getLayers().getArray()\n        .find(layer => layer.getSource() instanceof RasterSource);\n\n      if (rasterSource) {\n        const source = rasterSource.getSource();\n\n        // Try to get the canvas from the raster source\n        if (source && source.getImage) {\n          const image = source.getImage();\n          if (image && image.getImage) {\n            const canvas = image.getImage();\n            if (canvas && canvas.getContext) {\n              const ctx = canvas.getContext('2d');\n              const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n              return {\n                width: canvas.width,\n                height: canvas.height,\n                data: imageData.data\n              };\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.warn('Could not get current image data:', error);\n    }\n    return null;\n  }\n\n  /**\n   * Get current image data from the base imagery layer\n   */\n  getBaseImageData() {\n    try {\n      // Get the base imagery layer\n      const imageryLayer = this.map.getLayers().getArray()\n        .find(layer => layer.get('title') === 'Satellite Imagery');\n\n      if (imageryLayer) {\n        const source = imageryLayer.getSource();\n        // For now, return null - we'll need to access the actual image data differently\n        return null;\n      }\n    } catch (error) {\n      console.warn('Could not get base image data:', error);\n    }\n    return null;\n  }\n\n  /**\n   * Trigger clustering update\n   */\n  updateClustering() {\n    // Only trigger clustering if map is ready\n    if (mapReady) {\n      console.log('🔄 Triggering clustering update after constraint change');\n      // Trigger raster recalculation to apply new constraints\n      if (typeof raster !== 'undefined') {\n        raster.changed();\n        console.log('✅ Raster.changed() called successfully');\n      } else {\n        console.error('❌ Raster variable not accessible in updateClustering');\n        // Try to access via window\n        if (window.raster) {\n          window.raster.changed();\n          console.log('✅ Window.raster.changed() called successfully');\n        } else {\n          console.error('❌ Window.raster also not accessible');\n        }\n      }\n    } else {\n      console.log('Map not ready yet, clustering will be triggered when map loads');\n    }\n  }\n\n  /**\n   * Load constraints from localStorage on initialization\n   */\n  loadSavedConstraints() {\n    if (this.constraintManager) {\n      const loaded = this.constraintManager.loadConstraintsFromStorage();\n      if (loaded) {\n        console.log('Loaded saved constraints from localStorage');\n\n        // Restore drawing annotations from loaded constraints\n        this.restoreDrawingAnnotations();\n\n        // Update constraint tooltip if available (but don't fail if DOM not ready)\n        setTimeout(() => {\n          if (typeof updateConstraintTooltip === 'function') {\n            updateConstraintTooltip();\n          }\n        }, 100); // Small delay to ensure DOM is ready\n\n        // Trigger clustering update after constraints are loaded\n        setTimeout(() => {\n          this.updateClustering();\n        }, 100); // Small delay to ensure map is ready\n      }\n    }\n  }\n\n  /**\n   * Restore drawing annotations from loaded constraints\n   */\n  restoreDrawingAnnotations() {\n    if (!this.constraintManager) return;\n\n    const constraints = this.constraintManager.getAllConstraints();\n    console.log(`Restoring ${constraints.length} drawing annotations from constraints`);\n\n    for (const constraint of constraints) {\n      if (constraint.metadata && constraint.metadata.source === 'drawing') {\n        this.restoreAnnotationFromConstraint(constraint);\n      }\n    }\n  }\n\n  /**\n   * Restore a single annotation from constraint metadata\n   */\n  restoreAnnotationFromConstraint(constraint) {\n    try {\n      let feature = null;\n\n      if (constraint.metadata.shape === 'circle') {\n        // Restore circle annotation\n        const center = constraint.metadata.center;\n        const radius = constraint.metadata.radius;\n\n        if (center && radius) {\n          const circle = new Circle(center, radius);\n          feature = new Feature({\n            geometry: circle,\n            constraintId: constraint.id,\n            constraintType: constraint.type\n          });\n\n          console.log(`Restored circle annotation for constraint ${constraint.id}`);\n        }\n      } else if (constraint.metadata.shape === 'line') {\n        // Restore line annotation\n        const coordinates = constraint.metadata.coordinates;\n\n        if (coordinates && coordinates.length > 0) {\n          const lineString = new LineString(coordinates);\n          feature = new Feature({\n            geometry: lineString,\n            constraintId: constraint.id,\n            constraintType: constraint.type\n          });\n\n          console.log(`Restored line annotation for constraint ${constraint.id}`);\n        }\n      }\n\n      if (feature) {\n        this.annotationSource.addFeature(feature);\n      }\n    } catch (error) {\n      console.warn(`Error restoring annotation for constraint ${constraint.id}:`, error);\n    }\n  }\n}\n\n// Global drawing manager instance\nlet globalDrawingManager = null;\n\n// Function to save configuration to localStorage\nfunction saveConfiguration(config) {\n  try {\n    localStorage.setItem(CONFIG_STORAGE_KEY, JSON.stringify(config));\n  } catch (error) {\n    console.warn('Error saving configuration to localStorage:', error);\n  }\n}\n\n// Function to load configuration from localStorage\nfunction loadConfiguration() {\n  try {\n    const saved = localStorage.getItem(CONFIG_STORAGE_KEY);\n    if (saved) {\n      const config = JSON.parse(saved);\n      // Merge with defaults to handle missing properties\n      return { ...DEFAULT_CONFIG, ...config };\n    }\n  } catch (error) {\n    console.warn('Error loading configuration from localStorage:', error);\n  }\n  return DEFAULT_CONFIG;\n}\n\n// Function to reset configuration to defaults\nfunction resetConfiguration() {\n  // Update UI controls to default values\n  epsilonControl.value = DEFAULT_CONFIG.epsilon;\n  minClusterSizeControl.value = DEFAULT_CONFIG.minClusterSize;\n  coordWeightControl.value = DEFAULT_CONFIG.coordWeight;\n  constraintToleranceControl.value = DEFAULT_CONFIG.constraintTolerance;\n\n  // Update display values\n  updateEpsilonValue();\n  updateMinClusterSizeValue();\n  updateCoordWeightValue();\n  updateConstraintToleranceValue();\n\n  // Reset raster visibility\n  if (!DEFAULT_CONFIG.rasterVisible) {\n    rasterImage.setOpacity(0);\n    toggleRasterButton.textContent = 'Show Raster';\n    rasterVisible = false;\n  } else {\n    rasterImage.setOpacity(0.25);\n    toggleRasterButton.textContent = 'Hide Raster';\n    rasterVisible = true;\n  }\n\n  // Save default configuration\n  saveConfiguration(DEFAULT_CONFIG);\n\n  // Trigger raster update\n  raster.changed();\n\n  console.log('Configuration reset to defaults');\n}\n\n// Function to apply configuration to UI\nfunction applyConfiguration(config) {\n  epsilonControl.value = config.epsilon;\n  minClusterSizeControl.value = config.minClusterSize;\n  coordWeightControl.value = config.coordWeight;\n  constraintToleranceControl.value = config.constraintTolerance || DEFAULT_CONFIG.constraintTolerance;\n\n  updateEpsilonValue();\n  updateMinClusterSizeValue();\n  updateCoordWeightValue();\n\n  // Apply raster visibility\n  if (!config.rasterVisible) {\n    rasterImage.setOpacity(0);\n    toggleRasterButton.textContent = 'Show Raster';\n    rasterVisible = false;\n  } else {\n    rasterImage.setOpacity(0.25);\n    toggleRasterButton.textContent = 'Hide Raster';\n    rasterVisible = true;\n  }\n}\n\n// Function to save current configuration\nfunction saveCurrentConfiguration() {\n  const config = {\n    epsilon: parseFloat(epsilonControl.value),\n    minClusterSize: parseInt(minClusterSizeControl.value),\n    coordWeight: parseFloat(coordWeightControl.value),\n    constraintTolerance: parseFloat(constraintToleranceControl.value),\n    rasterVisible: rasterVisible\n  };\n  saveConfiguration(config);\n}\n\n// --- DBSCAN implementation for feature space clustering (RGB + coordinates) ---\nfunction dbscanClusterFeatures(image, epsilon, minPts = 3, coordWeight = 1.0, constraintData = null) {\n  const width = image.width;\n  const height = image.height;\n  const inputData = image.data;\n  const nPixels = width * height;\n  const visited = new Uint8Array(nPixels);\n  const labels = new Int32Array(nPixels).fill(-1);\n  let clusterId = 0;\n\n  function pixelIdx(x, y) {\n    return y * width + x;\n  }\n\n  // Extract features for a pixel: [R, G, B, normalized_x, normalized_y]\n  function getFeatures(idx) {\n    const x = idx % width;\n    const y = Math.floor(idx / width);\n\n    // RGB values (0-255)\n    const r = inputData[idx * 4];\n    const g = inputData[idx * 4 + 1];\n    const b = inputData[idx * 4 + 2];\n\n    // Normalize coordinates to [0, 1] range for better balance with RGB\n    const normalizedX = x / width;\n    const normalizedY = y / height;\n\n    return [r, g, b, normalizedX, normalizedY];\n  }\n\n\n\n  // Simple constraint checking based on RGB similarity with safeguards\n  function checkConstraints(r1, g1, b1, r2, g2, b2, constraintData) {\n    if (!constraintData || !constraintData.constraints) {\n      return null; // No constraints\n    }\n\n    // Get constraint tolerance from data\n    const constraintTolerance = constraintData.constraintTolerance || 15;\n\n    // Check each constraint - apply all constraints that have calculated RGB values\n    for (const constraint of constraintData.constraints) {\n      if (!constraint.averageRGB) continue;\n\n      const avgRGB = constraint.averageRGB;\n\n      // Calculate RGB distance for more precise matching\n      const rgbDist1 = Math.sqrt((avgRGB.r - r1) ** 2 + (avgRGB.g - g1) ** 2 + (avgRGB.b - b1) ** 2);\n      const rgbDist2 = Math.sqrt((avgRGB.r - r2) ** 2 + (avgRGB.g - g2) ** 2 + (avgRGB.b - b2) ** 2);\n\n      // Use Euclidean distance instead of component-wise tolerance for more accurate matching\n      const pixel1Similar = rgbDist1 <= constraintTolerance;\n      const pixel2Similar = rgbDist2 <= constraintTolerance;\n\n      if (pixel1Similar && pixel2Similar) {\n        return constraint.type; // Return 'must-link' or 'cannot-link'\n        // // Additional safeguard: only apply constraints if pixels are already somewhat similar\n        // const pixelSimilarity = Math.sqrt((r1 - r2) ** 2 + (g1 - g2) ** 2 + (b1 - b2) ** 2);\n        // if (pixelSimilarity <= constraintTolerance * 2) { // Only force clustering if pixels are already similar\n        //   // console.log(`📏 Constraint ${constraint.id} applies to pixels with pixelSimilarity ${pixelSimilarity} and rgbDist1 ${rgbDist1}`);\n        //   return constraint.type; // Return 'must-link' or 'cannot-link'\n        // }\n      }\n    }\n\n    return null; // No constraint applies\n  }\n\n\n\n\n  // Calculate distance in feature space with weighted coordinates and constraints\n  function distFeatures(idx1, idx2) {\n    const a = getFeatures(idx1);\n    const b = getFeatures(idx2);\n\n    // Extract RGB values for constraint checking\n    const r1 = a[0], g1 = a[1], b1 = a[2];\n    const r2 = b[0], g2 = b[1], b2 = b[2];\n\n    // Check constraints if constraint data is provided\n    if (constraintData) {\n      const constraintType = checkConstraints(r1, g1, b1, r2, g2, b2, constraintData);\n\n      if (constraintType === 'must-link') {\n        return 0.0; // Zero distance to force clustering\n      } else if (constraintType === 'cannot-link') {\n        return 1000.0; // Very large distance to prevent clustering\n      }\n    }\n\n    // Calculate base distance\n    const rgbDist = ((r1 - r2) ** 2 + (g1 - g2) ** 2 + (b1 - b2) ** 2) / (255 * 255 * 3);\n    const coordDist = coordWeight * (Math.abs(a[3] - b[3]) + Math.abs(a[4] - b[4]));\n    const baseDistance = Math.sqrt(rgbDist) + coordDist;\n\n    return baseDistance;\n  }\n\n  function regionQuery(idx) {\n    const neighbors = [];\n    const x0 = idx % width;\n    const y0 = Math.floor(idx / width);\n    for (let dy = -1; dy <= 1; dy++) {\n      for (let dx = -1; dx <= 1; dx++) {\n        const x = x0 + dx;\n        const y = y0 + dy;\n        if (x >= 0 && x < width && y >= 0 && y < height) {\n          const nIdx = pixelIdx(x, y);\n          if (distFeatures(idx, nIdx) <= epsilon) {\n            neighbors.push(nIdx);\n          }\n        }\n      }\n    }\n    return neighbors;\n  }\n\n  for (let idx = 0; idx < nPixels; idx++) {\n    if (visited[idx]) continue;\n    visited[idx] = 1;\n    const neighbors = regionQuery(idx);\n    if (neighbors.length < minPts) {\n      labels[idx] = -1; // noise\n    } else {\n      // expand cluster\n      const queue = [idx, ...neighbors];\n      labels[idx] = clusterId;\n      while (queue.length) {\n        const current = queue.pop();\n        if (!visited[current]) {\n          visited[current] = 1;\n          const nbs = regionQuery(current);\n          if (nbs.length >= minPts) {\n            queue.push(...nbs);\n          }\n        }\n        if (labels[current] === -1) {\n          labels[current] = clusterId;\n        }\n        if (labels[current] === -1 || labels[current] === undefined) {\n          labels[current] = clusterId;\n        }\n      }\n      clusterId++;\n    }\n  }\n  return labels;\n}\n\nfunction randomColor(seed) {\n  // Simple deterministic color for cluster id\n  const r = (Math.sin(seed + 1) * 10000) % 256;\n  const g = (Math.sin(seed + 2) * 10000) % 256;\n  const b = (Math.sin(seed + 3) * 10000) % 256;\n  return [Math.abs(r), Math.abs(g), Math.abs(b)];\n}\n\n// --- Moore Neighborhood Boundary Tracing Algorithm ---\n\nfunction traceBoundary(labels, width, height, startX, startY, clusterId) {\n  // Moore neighborhood boundary tracing algorithm\n  const boundary = [];\n\n  // Moore neighborhood directions (8-connected) - defined locally to avoid lib serialization issues\n  const MOORE_DIRECTIONS = [\n    [-1, -1], [-1, 0], [-1, 1],  // top-left, top, top-right\n    [0, 1],                      // right\n    [1, 1], [1, 0], [1, -1],     // bottom-right, bottom, bottom-left\n    [0, -1]                      // left\n  ];\n\n  // Helper function to check if a pixel belongs to the cluster\n  function isClusterPixel(x, y) {\n    if (x < 0 || x >= width || y < 0 || y >= height) {\n      return false; // Outside image bounds\n    }\n    const idx = y * width + x;\n    return labels[idx] === clusterId;\n  }\n\n  // Check if this is a single pixel cluster\n  let neighborCount = 0;\n  for (const [dx, dy] of MOORE_DIRECTIONS) {\n    if (isClusterPixel(startX + dx, startY + dy)) {\n      neighborCount++;\n    }\n  }\n\n  // Handle single pixel cluster\n  if (neighborCount === 0) {\n    boundary.push([startX, startY]);\n    return boundary;\n  }\n\n  // Find the leftmost pixel in the starting row\n  let currentX = startX;\n  let currentY = startY;\n  while (currentX > 0 && isClusterPixel(currentX - 1, currentY)) {\n    currentX--;\n  }\n\n  const startPixel = [currentX, currentY];\n  boundary.push([currentX, currentY]);\n\n  // Find initial direction - look for first non-cluster pixel\n  let direction = 0; // Start looking north-west\n\n  // Find the first background pixel when moving clockwise from north-west\n  for (let i = 0; i < 8; i++) {\n    const dir = MOORE_DIRECTIONS[(direction + i) % 8];\n    const checkX = currentX + dir[0];\n    const checkY = currentY + dir[1];\n    if (!isClusterPixel(checkX, checkY)) {\n      direction = (direction + i) % 8;\n      break;\n    }\n  }\n\n  let prevDirection = direction;\n  let iterationCount = 0;\n  const maxIterations = Math.max(width * height, 10000); // Safety limit\n\n  do {\n    iterationCount++;\n\n    // Look for next boundary pixel\n    let found = false;\n\n    // Start searching from the direction counter-clockwise from previous direction\n    let searchDir = (prevDirection + 6) % 8; // 6 steps counter-clockwise (equivalent to -2 mod 8)\n\n    for (let i = 0; i < 8; i++) {\n      const dir = MOORE_DIRECTIONS[(searchDir + i) % 8];\n      const nextX = currentX + dir[0];\n      const nextY = currentY + dir[1];\n\n      if (isClusterPixel(nextX, nextY)) {\n        // Found next boundary pixel\n        currentX = nextX;\n        currentY = nextY;\n        prevDirection = (searchDir + i) % 8;\n        boundary.push([currentX, currentY]);\n        found = true;\n        break;\n      }\n    }\n\n    if (!found) {\n      // No next pixel found - this might be the end of tracing for irregular shapes\n      break;\n    }\n\n    // Check if we've returned to start\n    if (currentX === startPixel[0] && currentY === startPixel[1] && boundary.length > 2) {\n      // Remove duplicate start point\n      boundary.pop();\n      break;\n    }\n\n    // Safety check to prevent infinite loops\n    if (iterationCount > maxIterations) {\n      console.warn('Boundary tracing exceeded maximum iterations (' + maxIterations + ') for cluster ' + clusterId);\n      break;\n    }\n\n  } while (true);\n\n  return boundary;\n}\n\nfunction extractClusterBoundaries(labels, width, height) {\n  const boundaries = {};\n  const processed = new Set();\n\n  // Moore neighborhood directions (8-connected) - defined locally to avoid lib serialization issues\n  const MOORE_DIRECTIONS = [\n    [-1, -1], [-1, 0], [-1, 1],  // top-left, top, top-right\n    [0, 1],                      // right\n    [1, 1], [1, 0], [1, -1],     // bottom-right, bottom, bottom-left\n    [0, -1]                      // left\n  ];\n\n  // First pass: count pixels per cluster\n  const clusterSizes = {};\n  for (let i = 0; i < labels.length; i++) {\n    const clusterId = labels[i];\n    if (clusterId !== -1) {\n      clusterSizes[clusterId] = (clusterSizes[clusterId] || 0) + 1;\n    }\n  }\n\n  // Filter out small clusters (< 100 pixels)\n  const MIN_CLUSTER_SIZE = 500;\n  const validClusters = new Set();\n  Object.entries(clusterSizes).forEach(([clusterId, size]) => {\n    if (size >= MIN_CLUSTER_SIZE) {\n      validClusters.add(parseInt(clusterId));\n    }\n  });\n\n  // Find all clusters and their boundary starting points\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const idx = y * width + x;\n      const clusterId = labels[idx];\n\n      if (clusterId === -1) continue; // Skip noise pixels\n      if (!validClusters.has(clusterId)) continue; // Skip small clusters\n\n      if (!boundaries[clusterId] && !processed.has(clusterId + '-' + x + '-' + y)) {\n        // Check if this pixel is on the boundary (has at least one non-cluster neighbor)\n        let isBoundary = false;\n\n        for (const [dx, dy] of MOORE_DIRECTIONS) {\n          const nx = x + dx;\n          const ny = y + dy;\n\n          if (nx < 0 || nx >= width || ny < 0 || ny >= height) {\n            isBoundary = true; // Edge of image\n            break;\n          }\n\n          const nIdx = ny * width + nx;\n          if (labels[nIdx] !== clusterId) {\n            isBoundary = true; // Different cluster or noise\n            break;\n          }\n        }\n\n        if (isBoundary) {\n          try {\n            const boundary = traceBoundary(labels, width, height, x, y, clusterId);\n            if (boundary.length > 0) {\n              boundaries[clusterId] = boundary;\n\n              // Mark all boundary pixels as processed for this cluster\n              for (const [bx, by] of boundary) {\n                processed.add(clusterId + '-' + bx + '-' + by);\n              }\n            }\n          } catch (error) {\n            console.warn('Error tracing boundary for cluster ' + clusterId + ':', error);\n          }\n        }\n      }\n    }\n  }\n\n  return boundaries;\n}\n\n// Utility function to get coordinates for pixels using provided view data\nfunction getPixelCoordinates(labels, width, height, viewData) {\n  if (!viewData || !viewData.center || !viewData.resolution || !viewData.mapSize) {\n    console.warn('View data not available for coordinate conversion - clustering will proceed without coordinate mapping');\n    return {};\n  }\n\n  const { center, resolution, mapSize } = viewData;\n\n  // Additional validation\n  if (!Array.isArray(center) || center.length !== 2 ||\n      typeof resolution !== 'number' || resolution <= 0 ||\n      !Array.isArray(mapSize) || mapSize.length !== 2 || mapSize[0] <= 0 || mapSize[1] <= 0) {\n    console.warn('Invalid view data for coordinate conversion - clustering will proceed without coordinate mapping');\n    return {};\n  }\n\n  // Calculate the extent of the visible area\n  const halfWidth = (mapSize[0] * resolution) / 2;\n  const halfHeight = (mapSize[1] * resolution) / 2;\n\n  const viewExtent = [\n    center[0] - halfWidth,\n    center[1] - halfHeight,\n    center[0] + halfWidth,\n    center[1] + halfHeight\n  ];\n\n  const pixelToCoord = (pixelX, pixelY) => {\n    // Convert pixel coordinates to map coordinates\n    const mapX = viewExtent[0] + (pixelX / width) * (viewExtent[2] - viewExtent[0]);\n    const mapY = viewExtent[3] - (pixelY / height) * (viewExtent[3] - viewExtent[1]);\n\n    // Return map coordinates (EPSG:3857 by default for web mercator)\n    return [mapX, mapY];\n  };\n\n  const clusterCoordinates = {};\n  const nPixels = width * height;\n\n  for (let idx = 0; idx < nPixels; idx++) {\n    const label = labels[idx];\n    if (label !== -1) { // Skip noise pixels\n      const pixelX = idx % width;\n      const pixelY = Math.floor(idx / width);\n      const coords = pixelToCoord(pixelX, pixelY);\n\n      if (!clusterCoordinates[label]) {\n        clusterCoordinates[label] = [];\n      }\n      clusterCoordinates[label].push({\n        pixelX,\n        pixelY,\n        coordinates: coords,\n        pixelIndex: idx\n      });\n    }\n  }\n\n  return clusterCoordinates;\n}\n\n// Function to get coordinates for a specific pixel\nfunction getPixelCoordinate(pixelX, pixelY, width, height, viewData) {\n  if (!viewData || !viewData.center || !viewData.resolution || !viewData.mapSize) {\n    console.warn('View data not available for coordinate conversion');\n    return null;\n  }\n\n  // Additional validation\n  if (!Array.isArray(viewData.center) || viewData.center.length !== 2 ||\n      typeof viewData.resolution !== 'number' || viewData.resolution <= 0 ||\n      !Array.isArray(viewData.mapSize) || viewData.mapSize.length !== 2 ||\n      viewData.mapSize[0] <= 0 || viewData.mapSize[1] <= 0) {\n    console.warn('Invalid view data for coordinate conversion');\n    return null;\n  }\n\n  const { center, resolution, mapSize } = viewData;\n\n  const halfWidth = (mapSize[0] * resolution) / 2;\n  const halfHeight = (mapSize[1] * resolution) / 2;\n\n  const viewExtent = [\n    center[0] - halfWidth,\n    center[1] - halfHeight,\n    center[0] + halfWidth,\n    center[1] + halfHeight\n  ];\n\n  const mapX = viewExtent[0] + (pixelX / width) * (viewExtent[2] - viewExtent[0]);\n  const mapY = viewExtent[3] - (pixelY / height) * (viewExtent[3] - viewExtent[1]);\n\n  return [mapX, mapY];\n}\n\n// Function to get coordinates for all pixels in a specific cluster\nfunction getClusterCoordinates(clusterId, labels, width, height, viewData) {\n  const clusterCoordinates = getPixelCoordinates(labels, width, height, viewData);\n  return clusterCoordinates[clusterId] || [];\n}\n\n// Function to convert boundary pixel coordinates to map coordinates\nfunction getBoundaryCoordinates(boundaries, width, height, viewData) {\n  if (!viewData || !viewData.center || !viewData.resolution || !viewData.mapSize) {\n    console.warn('View data not available for boundary coordinate conversion - boundaries will be created without coordinate mapping');\n    return {};\n  }\n\n  // Additional validation\n  if (!Array.isArray(viewData.center) || viewData.center.length !== 2 ||\n      typeof viewData.resolution !== 'number' || viewData.resolution <= 0 ||\n      !Array.isArray(viewData.mapSize) || viewData.mapSize.length !== 2 ||\n      viewData.mapSize[0] <= 0 || viewData.mapSize[1] <= 0) {\n    console.warn('Invalid view data for boundary coordinate conversion - boundaries will be created without coordinate mapping');\n    return {};\n  }\n\n  const boundaryCoordinates = {};\n\n  for (const [clusterId, boundary] of Object.entries(boundaries)) {\n    boundaryCoordinates[clusterId] = boundary.map(([pixelX, pixelY]) => {\n      const coords = getPixelCoordinate(pixelX, pixelY, width, height, viewData);\n      return {\n        pixelX,\n        pixelY,\n        coordinates: coords\n      };\n    });\n  }\n\n  return boundaryCoordinates;\n}\n\n// Function to get boundary for a specific cluster\nfunction getClusterBoundary(clusterId, boundaries, width, height, viewData) {\n  const boundaryCoordinates = getBoundaryCoordinates(boundaries, width, height, viewData);\n  return boundaryCoordinates[clusterId] || [];\n}\n\n// Function to apply moving average smoothing to polygon coordinates\nfunction smoothPolygonCoordinates(coordinates, windowSize = 3) {\n  if (coordinates.length < windowSize) {\n    return coordinates; // Too few points to smooth\n  }\n\n  const smoothed = [];\n  const halfWindow = Math.floor(windowSize / 2);\n\n  for (let i = 0; i < coordinates.length; i++) {\n    let sumX = 0;\n    let sumY = 0;\n    let count = 0;\n\n    // Calculate moving average within window\n    for (let j = Math.max(0, i - halfWindow); j <= Math.min(coordinates.length - 1, i + halfWindow); j++) {\n      sumX += coordinates[j][0];\n      sumY += coordinates[j][1];\n      count++;\n    }\n\n    smoothed.push([sumX / count, sumY / count]);\n  }\n\n  return smoothed;\n}\n\n// Function to smooth a polygon using coordinate smoothing and simplification\nfunction smoothPolygon(polygon) {\n  try {\n    const coordinates = polygon.getCoordinates()[0]; // Get exterior ring\n\n    if (coordinates.length < 4) {\n      return polygon; // Too few points to smooth\n    }\n\n    // Step 1: Apply moving average smoothing\n    let smoothedCoords = coordinates;\n    for (let i = 0; i < DEFAULT_CONFIG.smoothingIterations; i++) {\n      smoothedCoords = smoothPolygonCoordinates(smoothedCoords, DEFAULT_CONFIG.movingAverageWindow);\n    }\n\n    // Step 2: Simplify the polygon to reduce vertex count\n    const tolerance = DEFAULT_CONFIG.simplifyTolerance;\n    const simplifiedCoords = simplifyLineString(\n      smoothedCoords.flat(),\n      0,\n      smoothedCoords.flat().length,\n      2,\n      tolerance * tolerance, // squared tolerance\n      true\n    );\n\n    // Convert back to coordinate pairs\n    const finalCoords = [];\n    for (let i = 0; i < simplifiedCoords.length; i += 2) {\n      finalCoords.push([simplifiedCoords[i], simplifiedCoords[i + 1]]);\n    }\n\n    // Ensure polygon is closed\n    if (finalCoords.length > 0) {\n      const first = finalCoords[0];\n      const last = finalCoords[finalCoords.length - 1];\n      if (first[0] !== last[0] || first[1] !== last[1]) {\n        finalCoords.push(first);\n      }\n    }\n\n    // Create new polygon with smoothed coordinates\n    return new Polygon([finalCoords]);\n  } catch (error) {\n    console.warn('Error smoothing polygon:', error);\n    return polygon; // Return original if smoothing fails\n  }\n}\n\n// Function to smooth all polygons in a feature collection\nfunction smoothPolygonFeatures(features) {\n  const smoothedFeatures = [];\n\n  for (const feature of features) {\n    try {\n      const geometry = feature.getGeometry();\n      if (geometry instanceof Polygon) {\n        const smoothedGeometry = smoothPolygon(geometry);\n\n        // Create new feature with smoothed geometry\n        const smoothedFeature = new Feature({\n          geometry: smoothedGeometry,\n          clusterId: feature.get('clusterId'),\n          boundaryPixelCount: feature.get('boundaryPixelCount'),\n          smoothed: true\n        });\n\n        smoothedFeatures.push(smoothedFeature);\n      } else {\n        // Keep non-polygon features as-is\n        smoothedFeatures.push(feature);\n      }\n    } catch (error) {\n      console.warn('Error processing feature for smoothing:', error);\n      // Keep original feature if smoothing fails\n      smoothedFeatures.push(feature);\n    }\n  }\n\n  return smoothedFeatures;\n}\n\n// Global vector source for cluster boundary polygons\nconst clusterBoundarySource = new VectorSource();\n\n// Function to create polygon features from boundary coordinates\nfunction createPolygonFeatures(boundaryCoordinates) {\n  const features = [];\n\n  for (const [clusterId, boundaryPoints] of Object.entries(boundaryCoordinates)) {\n\n    if (boundaryPoints.length < 3) {\n      // console.log('Skipping cluster', clusterId, '- too few boundary points:', boundaryPoints.length);\n      continue; // Need at least 3 points for a polygon\n    }\n\n    // Extract coordinate pairs\n    const coordinates = boundaryPoints\n      .map(point => point.coordinates)\n      .filter(coord => coord !== null); // Filter out null coordinates\n\n\n    if (coordinates.length < 3) {\n      continue; // Still need at least 3 valid coordinates\n    }\n\n    // Ensure the polygon is closed\n    const firstCoord = coordinates[0];\n    const lastCoord = coordinates[coordinates.length - 1];\n    if (firstCoord[0] !== lastCoord[0] || firstCoord[1] !== lastCoord[1]) {\n      coordinates.push(firstCoord); // Close the polygon\n    }\n\n    try {\n      // Create polygon geometry - wrap in array for exterior ring\n      const polygon = new Polygon([coordinates]);\n\n      // Create feature with cluster ID as property\n      const feature = new Feature({\n        geometry: polygon,\n        clusterId: parseInt(clusterId),\n        boundaryPixelCount: boundaryPoints.length\n      });\n\n      features.push(feature);\n    } catch (error) {\n      console.warn('Error creating polygon for cluster ' + clusterId + ':', error);\n    }\n  }\n\n  return features;\n}\n\n// Function to update vector layer with new boundary polygons\nfunction updateBoundaryVectorLayer(boundaryCoordinates) {\n\n  // Clear existing features\n  clusterBoundarySource.clear();\n\n  if (!boundaryCoordinates || Object.keys(boundaryCoordinates).length === 0) {\n    console.log('No boundary coordinates to display');\n    return; // No boundaries to display\n  }\n\n  // Create new polygon features\n  const features = createPolygonFeatures(boundaryCoordinates);\n\n  if (features.length > 0) {\n    // Apply smoothing to the polygon features\n    const smoothedFeatures = smoothPolygonFeatures(features);\n\n    // Add smoothed features to vector source\n    clusterBoundarySource.addFeatures(smoothedFeatures);\n\n    console.log(`Created ${features.length} original features, ${smoothedFeatures.length} smoothed features`);\n  } else {\n    console.log('No valid polygon features created');\n  }\n}\n\nfunction rasterOperation(inputs, data) {\n  const image = inputs[0];\n  const epsilon = parseFloat(data.epsilon);\n  const minPts = parseInt(data.minClusterSize) || 5;\n  const coordWeight = parseFloat(data.coordWeight) || 1.0; // Default weight for coordinates\n  const width = image.width;\n  const height = image.height;\n  const nPixels = width * height;\n\n  // Get constraint data from serialized data if available\n  const constraintData = data.constraintData || null;\n\n  // Monitor viewData.resolution changes\n  const currentResolution = data.viewData?.resolution;\n  if (data.lastResolution === undefined) {\n    console.log(`📏 Initial viewData.resolution: ${currentResolution}`);\n  } else if (currentResolution !== data.lastResolution) {\n    console.log(`📏 viewData.resolution changed from ${data.lastResolution} to ${currentResolution}`);\n  }\n  // Store current resolution for next call\n  data.lastResolution = currentResolution;\n\n  // Debug clustering parameters and constraints\n  console.log(`🎯 Clustering with epsilon: ${epsilon}, minPts: ${minPts}, coordWeight: ${coordWeight}`);\n\n  if (constraintData && constraintData.constraints && constraintData.constraints.length > 0) {\n    console.log(`📏 Using ${constraintData.constraints.length} constraints for clustering`);\n\n    const updatedConstraintData = calculateConstraintRGBs(image, constraintData, data.viewData);\n\n    if (updatedConstraintData !== constraintData) {\n      data.updatedConstraintData = updatedConstraintData;\n      console.log('📏 Stored updated constraint data for main thread processing');\n    } else {\n      console.log('📏 No constraint data changes detected');\n    }\n  }\n\n  const labels = dbscanClusterFeatures(image, epsilon, minPts, coordWeight, constraintData);\n\n  // Always extract cluster boundaries using Moore neighborhood tracing\n  const boundaries = extractClusterBoundaries(labels, width, height);\n\n  // Always get coordinates for all clusters\n  const clusterCoordinates = getPixelCoordinates(labels, width, height, data.viewData);\n\n  // Always get boundary coordinates with map projection\n  const boundaryCoordinates = getBoundaryCoordinates(boundaries, width, height, data.viewData);\n\n  const outputData = new Uint8ClampedArray(image.data.length);\n  const clusterColors = {};\n\n  for (let idx = 0; idx < nPixels; idx++) {\n    const label = labels[idx];\n    let color;\n    if (label === -1) {\n      color = [0, 0, 0]; // noise: black\n    } else {\n      if (!clusterColors[label]) {\n        clusterColors[label] = randomColor(label);\n      }\n      color = clusterColors[label];\n    }\n    outputData[idx * 4] = color[0];\n    outputData[idx * 4 + 1] = color[1];\n    outputData[idx * 4 + 2] = color[2];\n    outputData[idx * 4 + 3] = 255;\n  }\n\n  // Log boundary information for debugging\n  if (Object.keys(boundaries).length > 0) {\n\n    // Log boundary coordinates if available\n    if (Object.keys(boundaryCoordinates).length > 0) {\n      // Store boundary coordinates in the operation data for access in afteroperations event\n      data.boundaryCoordinates = boundaryCoordinates;\n    }\n  } else {\n    console.log('No cluster boundaries detected');\n    data.boundaryCoordinates = {};\n  }\n\n  return {\n    data: outputData,\n    width,\n    height,\n    boundaries: boundaries,\n    boundaryCoordinates: boundaryCoordinates,\n    clusterCoordinates: clusterCoordinates,\n    updatedConstraintData: data.updatedConstraintData || null\n  };\n}\n\nconst key = '9eRjBwCY5UZ3jVPJXYA0';\nconst attributions =\n  '<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>';\n\nconst imagery = new TileLayer({\n  title: 'Satellite Imagery',\n  type: 'base',\n  source: new ImageTile({\n    attributions: attributions,\n    url: 'https://api.maptiler.com/maps/satellite/{z}/{x}/{y}.jpg?key=' + key,\n    tileSize: 512,\n    maxZoom: 20,\n  }),\n});\n\nconst raster = new RasterSource({\n  sources: [imagery.getSource()],\n  operationType: 'image',\n  operation: rasterOperation,\n  lib: {\n    rasterOperation: rasterOperation,\n    calculateConstraintRGBs: calculateConstraintRGBs,\n    dbscanClusterFeatures: dbscanClusterFeatures,\n    randomColor: randomColor,\n    getPixelCoordinates: getPixelCoordinates,\n    getPixelCoordinate: getPixelCoordinate,\n    getClusterCoordinates: getClusterCoordinates,\n    extractClusterBoundaries: extractClusterBoundaries,\n    traceBoundary: traceBoundary,\n    getBoundaryCoordinates: getBoundaryCoordinates,\n    getClusterBoundary: getClusterBoundary,\n    smoothPolygonCoordinates: smoothPolygonCoordinates,\n    simplifyLineString: simplifyLineString,\n  },\n});\n\nconst rasterImage = new ImageLayer({\n  title: 'Clustered Regions',\n  opacity: 0.25,\n  source: raster,\n});\n\n// Create vector layer for cluster boundary polygons\nconst boundaryVectorLayer = new VectorLayer({\n  title: 'Cluster Boundaries',\n  type: 'overlay',\n  source: clusterBoundarySource,\n  style: new Style({\n    stroke: new Stroke({\n      color: '#ff0000',\n      width: 2,\n    }),\n  }),\n});\n\nconst map = new OLMap({\n  layers: [imagery, rasterImage, boundaryVectorLayer],\n  target: 'map',\n  view: new View({\n    center: fromLonLat([13.283111, 55.576662]),\n    zoom: 15,\n  }),\n});\n\n// Initialize drawing manager after map is created\nglobalDrawingManager = new DrawingManager(map, globalConstraintManager);\n\n// Load saved constraints on initialization\n// globalDrawingManager.loadSavedConstraints(); // Moved to after DOM elements are ready\n\n// Add map load event listener to ensure clustering runs after map is fully loaded\nmap.once('loadend', function() {\n  console.log('Map loaded, setting map as ready for clustering');\n  mapReady = true;\n  // Trigger initial clustering after map is loaded\n  raster.changed();\n});\n\n// Add view change listener to ensure clustering runs when view changes\nmap.getView().on('change:resolution', function() {\n  if (mapReady) {\n    raster.changed();\n  }\n});\n\nmap.getView().on('change:center', function() {\n  if (mapReady) {\n    raster.changed();\n  }\n});\n\n// Add layer switcher control\nconst layerSwitcher = new LayerSwitcher({\n  reverse: true,\n  groupSelectStyle: 'group'\n});\nmap.addControl(layerSwitcher);\n\n// Add drawing tools to window for testing\nwindow.drawingTools = {\n  enableCircle: () => {\n    globalDrawingManager.enableCircleDrawing();\n    updateDrawingButtonStates();\n  },\n  enableLine: () => {\n    globalDrawingManager.enableLineDrawing();\n    updateDrawingButtonStates();\n  },\n  disable: () => {\n    globalDrawingManager.disableAllDrawing();\n    updateDrawingButtonStates();\n  },\n  clear: () => {\n    globalDrawingManager.clearAllAnnotations();\n    globalConstraintManager.clearAllConstraints();\n    updateDrawingButtonStates();\n  },\n  getState: () => globalDrawingManager.getDrawingState(),\n  getConstraints: () => globalConstraintManager.getStatistics(),\n  updateButtonStates: () => updateDrawingButtonStates(),\n  saveConstraints: () => globalConstraintManager.saveConstraintsToStorage(),\n  loadConstraints: () => globalDrawingManager.loadSavedConstraints(),\n  clearStorage: () => globalConstraintManager.clearConstraintsFromStorage()\n};\n\nmap.on('click', function () {\n  if (mapReady) {\n    raster.changed();\n  }\n});\n\nconst epsilonControl = document.getElementById('epsilon');\nconst minClusterSizeControl = document.getElementById('min-cluster-size');\nconst coordWeightControl = document.getElementById('coord-weight');\nconst constraintToleranceControl = document.getElementById('constraint-tolerance');\n\nraster.on('beforeoperations', function (event) {\n  // Check if map is ready before proceeding\n  if (!mapReady) {\n    console.log('Map not ready yet, skipping clustering operation');\n    return; // Skip this operation if map is not ready\n  }\n\n  const data = event.data;\n  data.epsilon = epsilonControl.value;\n  data.minClusterSize = minClusterSizeControl.value;\n  data.coordWeight = parseFloat(coordWeightControl.value);\n      data.constraintTolerance = parseFloat(constraintToleranceControl.value);\n\n  // Pass view data to the raster operation\n  const view = map.getView();\n  const center = view.getCenter();\n  const resolution = view.getResolution();\n  const mapSize = map.getSize();\n\n  // Validate view data before proceeding\n  if (!center || !resolution || !mapSize || mapSize[0] === 0 || mapSize[1] === 0) {\n    console.warn('View data not available, skipping clustering operation');\n    return; // Skip this operation if view data is not available\n  }\n\n  data.viewData = {\n    center: center,\n    resolution: resolution,\n    mapSize: mapSize\n  };\n\n  console.log('View data for clustering:', {\n    center: center,\n    resolution: resolution,\n    mapSize: mapSize\n  });\n\n  // Pass serialized constraint data to the raster operation\n  try {\n    const constraintData = globalConstraintManager ? globalConstraintManager.exportConstraints() : null;\n    data.constraintData = constraintData;\n  } catch (error) {\n    console.warn('Error serializing constraints for raster operation:', error);\n    data.constraintData = null;\n  }\n\n  // Always render pixels since we're using opacity for visibility\n  data.renderPixels = true;\n});\n\n// Store the latest boundary coordinates from the operation\nlet latestBoundaryCoordinates = {};\n\n// Listen for raster operation completion to update vector layer and handle constraint updates\nraster.on('afteroperations', function (event) {\n  // Check if we have boundary coordinates in the event data\n  if (event.data && event.data.boundaryCoordinates) {\n    latestBoundaryCoordinates = event.data.boundaryCoordinates;\n    updateBoundaryVectorLayer(latestBoundaryCoordinates);\n  } else {\n    console.log('No boundary coordinates in event data, clearing vector source');\n    latestBoundaryCoordinates = {};\n    clusterBoundarySource.clear();\n  }\n\n  // Handle updated constraint data from the raster operation\n  if (event.data && event.data.updatedConstraintData && globalConstraintManager) {\n    console.log('📏 Processing updated constraint data from raster operation');\n\n    const updatedData = event.data.updatedConstraintData;\n    let updatedCount = 0;\n\n    // Update the actual constraint manager with the calculated RGB values\n    for (const constraint of updatedData.constraints) {\n      if (constraint.averageRGB && !constraint.averageRGB.needsCalculation) {\n        const actualConstraint = globalConstraintManager.constraintMap.get(constraint.id);\n        if (actualConstraint) {\n          actualConstraint.averageRGB = constraint.averageRGB;\n          updatedCount++;\n        }\n      }\n    }\n\n    if (updatedCount > 0) {\n      console.log(`📏 Updated ${updatedCount} constraints with RGB values in main thread`);\n      globalConstraintManager.saveConstraintsToStorage();\n    } else {\n      console.log('📏 No constraints were updated in main thread');\n    }\n  } else {\n    console.log('📏 No updated constraint data found in afteroperations event');\n  }\n});\n\nfunction updateEpsilonValue() {\n  document.getElementById('epsilon-value').innerText = epsilonControl.value;\n}\n\nfunction updateMinClusterSizeValue() {\n  document.getElementById('min-cluster-size-value').innerText = minClusterSizeControl.value;\n}\n\nfunction updateCoordWeightValue() {\n  document.getElementById('coord-weight-value').innerText = coordWeightControl.value;\n}\n\nfunction updateConstraintToleranceValue() {\n  document.getElementById('constraint-tolerance-value').innerText = constraintToleranceControl.value;\n}\n\nupdateEpsilonValue();\nupdateMinClusterSizeValue();\nupdateCoordWeightValue();\nupdateConstraintToleranceValue();\n\nepsilonControl.addEventListener('input', function () {\n  updateEpsilonValue();\n  saveCurrentConfiguration();\n  if (mapReady) {\n    raster.changed();\n  }\n});\n\nminClusterSizeControl.addEventListener('input', function () {\n  updateMinClusterSizeValue();\n  saveCurrentConfiguration();\n  if (mapReady) {\n    raster.changed();\n  }\n});\n\ncoordWeightControl.addEventListener('input', function () {\n  updateCoordWeightValue();\n  saveCurrentConfiguration();\n  if (mapReady) {\n    raster.changed();\n  }\n});\n\nconstraintToleranceControl.addEventListener('input', function () {\n  updateConstraintToleranceValue();\n  saveCurrentConfiguration();\n  if (mapReady) {\n    raster.changed();\n  }\n});\n\n// Toggle raster layer opacity\nconst toggleRasterButton = document.getElementById('toggle-raster');\n\ntoggleRasterButton.addEventListener('click', function () {\n  if (rasterVisible) {\n    rasterImage.setOpacity(0);\n    toggleRasterButton.textContent = 'Show Raster';\n    rasterVisible = false;\n  } else {\n    rasterImage.setOpacity(0.25);\n    toggleRasterButton.textContent = 'Hide Raster';\n    rasterVisible = true;\n  }\n\n  saveCurrentConfiguration();\n});\n\n// Reset configuration button\nconst resetConfigButton = document.getElementById('reset-config');\nresetConfigButton.addEventListener('click', function () {\n  resetConfiguration();\n});\n\n// Drawing tool buttons\nconst circleToolButton = document.getElementById('circle-tool');\nconst lineToolButton = document.getElementById('line-tool');\nconst disableDrawingButton = document.getElementById('disable-drawing');\nconst clearConstraintsButton = document.getElementById('clear-constraints');\n\n// Update button active states\nfunction updateDrawingButtonStates() {\n  if (!globalDrawingManager || !circleToolButton || !lineToolButton || !disableDrawingButton) {\n    return; // Exit if elements or manager are not ready\n  }\n\n  const drawingState = globalDrawingManager.getDrawingState();\n\n  // Remove active class from all drawing buttons\n  circleToolButton.classList.remove('active');\n  lineToolButton.classList.remove('active');\n  disableDrawingButton.classList.remove('active');\n\n  // Add active class to current tool\n  if (drawingState.isEnabled) {\n    if (drawingState.currentTool === 'circle') {\n      circleToolButton.classList.add('active');\n    } else if (drawingState.currentTool === 'line') {\n      lineToolButton.classList.add('active');\n    }\n  } else {\n    disableDrawingButton.classList.add('active');\n  }\n}\n\n// Circle tool button\ncircleToolButton.addEventListener('click', function () {\n  globalDrawingManager.enableCircleDrawing();\n  updateDrawingButtonStates();\n  console.log('Circle drawing tool activated');\n});\n\n// Line tool button\nlineToolButton.addEventListener('click', function () {\n  globalDrawingManager.enableLineDrawing();\n  updateDrawingButtonStates();\n  console.log('Line drawing tool activated');\n});\n\n// Disable drawing button\ndisableDrawingButton.addEventListener('click', function () {\n  globalDrawingManager.disableAllDrawing();\n  updateDrawingButtonStates();\n  console.log('Drawing tools disabled');\n});\n\n// Clear constraints button\nclearConstraintsButton.addEventListener('click', function () {\n  const stats = globalConstraintManager.getStatistics();\n  const totalConstraints = stats.mustLinkConstraints + stats.cannotLinkConstraints;\n\n  if (totalConstraints === 0) {\n    console.log('No constraints to clear');\n    return;\n  }\n\n  globalDrawingManager.clearAllAnnotations();\n  globalConstraintManager.clearAllConstraints();\n  updateDrawingButtonStates();\n  updateConstraintTooltip();\n  console.log(`Cleared ${totalConstraints} constraints and annotations`);\n});\n\n// Update constraint button tooltip with current count\nfunction updateConstraintTooltip() {\n  // Safety check - only proceed if both the button and constraint manager exist\n  if (!clearConstraintsButton || !globalConstraintManager) {\n    console.log('updateConstraintTooltip: DOM elements or constraint manager not ready yet');\n    return;\n  }\n\n  const stats = globalConstraintManager.getStatistics();\n  const totalConstraints = stats.mustLinkConstraints + stats.cannotLinkConstraints;\n\n  if (totalConstraints === 0) {\n    clearConstraintsButton.title = 'Clear all constraints and annotations (none currently)';\n  } else {\n    clearConstraintsButton.title = `Clear all constraints and annotations (${totalConstraints} current: ${stats.mustLinkConstraints} must-link, ${stats.cannotLinkConstraints} cannot-link)`;\n  }\n}\n\n// Load saved configuration on page load (after all DOM elements are defined)\nconst savedConfig = loadConfiguration();\napplyConfiguration(savedConfig);\n\n// Initialize button states after everything is set up\nupdateDrawingButtonStates();\nupdateConstraintTooltip();\nupdateConstraintToleranceValue();\n\n// Load saved constraints after DOM elements are ready\nif (globalDrawingManager) {\n  globalDrawingManager.loadSavedConstraints();\n}\n\n// --- Search and Coordinate Functionality ---\n\n// Get DOM elements\nconst searchInput = document.getElementById('search-input');\n\n// Search history management\nconst SEARCH_HISTORY_KEY = 'fbd_search_history';\nconst MAX_HISTORY_ITEMS = 10;\n\n// Function to get search history from localStorage\nfunction getSearchHistory() {\n  try {\n    const history = localStorage.getItem(SEARCH_HISTORY_KEY);\n    return history ? JSON.parse(history) : [];\n  } catch (error) {\n    console.warn('Error reading search history from localStorage:', error);\n    return [];\n  }\n}\n\n// Function to save search history to localStorage\nfunction saveSearchHistory(history) {\n  try {\n    localStorage.setItem(SEARCH_HISTORY_KEY, JSON.stringify(history));\n  } catch (error) {\n    console.warn('Error saving search history to localStorage:', error);\n  }\n}\n\n// Function to add a new search to history\nfunction addToSearchHistory(lat, lon) {\n  const history = getSearchHistory();\n  const searchString = `${lat.toFixed(6)} ${lon.toFixed(6)}`;\n\n  // Remove if already exists (to move to top)\n  const filteredHistory = history.filter(item => item.coordinates !== searchString);\n\n  // Add to beginning of array\n  filteredHistory.unshift({\n    coordinates: searchString,\n    lat: lat,\n    lon: lon,\n    timestamp: Date.now()\n  });\n\n  // Keep only the most recent searches\n  const trimmedHistory = filteredHistory.slice(0, MAX_HISTORY_ITEMS);\n\n  saveSearchHistory(trimmedHistory);\n  return trimmedHistory;\n}\n\n// Function to create and show search suggestions dropdown\nfunction showSearchSuggestions() {\n  const history = getSearchHistory();\n\n  if (history.length === 0) {\n    // Show a message when no history exists\n    hideSearchSuggestions();\n\n    const dropdown = document.createElement('div');\n    dropdown.id = 'search-suggestions';\n    dropdown.className = 'search-suggestions';\n\n    const noHistoryMessage = document.createElement('div');\n    noHistoryMessage.className = 'search-suggestion-item';\n    noHistoryMessage.textContent = 'No search history yet';\n    noHistoryMessage.style.color = '#6c757d';\n    noHistoryMessage.style.fontStyle = 'italic';\n    noHistoryMessage.style.cursor = 'default';\n\n    dropdown.appendChild(noHistoryMessage);\n\n    const searchContainer = document.querySelector('.search-container');\n    searchContainer.appendChild(dropdown);\n\n    dropdown.style.position = 'absolute';\n    dropdown.style.top = '100%';\n    dropdown.style.left = '0';\n    dropdown.style.right = '0';\n    dropdown.style.zIndex = '1000';\n\n    return;\n  }\n\n  // Remove existing dropdown if present\n  hideSearchSuggestions();\n\n  // Create dropdown container\n  const dropdown = document.createElement('div');\n  dropdown.id = 'search-suggestions';\n  dropdown.className = 'search-suggestions';\n\n  // Add suggestions\n  history.forEach((item) => {\n    const suggestion = document.createElement('div');\n    suggestion.className = 'search-suggestion-item';\n    suggestion.textContent = item.coordinates;\n    suggestion.dataset.lat = item.lat;\n    suggestion.dataset.lon = item.lon;\n\n    // Add click handler\n    suggestion.addEventListener('click', function() {\n      const lat = parseFloat(this.dataset.lat);\n      const lon = parseFloat(this.dataset.lon);\n      navigateToCoordinates(lat, lon);\n      hideSearchSuggestions();\n    });\n\n    // Add hover effect\n    suggestion.addEventListener('mouseenter', function() {\n      this.style.backgroundColor = '#f0f0f0';\n    });\n\n    suggestion.addEventListener('mouseleave', function() {\n      this.style.backgroundColor = '';\n    });\n\n    dropdown.appendChild(suggestion);\n  });\n\n    // Position dropdown below search input\n  const searchContainer = document.querySelector('.search-container');\n  searchContainer.appendChild(dropdown);\n\n  // Position dropdown correctly - account for flexbox layout\n  dropdown.style.position = 'absolute';\n  dropdown.style.top = '100%';\n  dropdown.style.left = '0';\n  dropdown.style.right = '0';\n  dropdown.style.zIndex = '1000';\n}\n\n// Function to hide search suggestions dropdown\nfunction hideSearchSuggestions() {\n  const existingDropdown = document.getElementById('search-suggestions');\n  if (existingDropdown) {\n    existingDropdown.remove();\n  }\n}\n\n// Function to clear search history\nfunction clearSearchHistory() {\n  try {\n    localStorage.removeItem(SEARCH_HISTORY_KEY);\n    hideSearchSuggestions();\n    console.log('Search history cleared');\n  } catch (error) {\n    console.warn('Error clearing search history:', error);\n  }\n}\n\n// Function to validate coordinates\nfunction validateCoordinates(lat, lon) {\n  const latNum = parseFloat(lat);\n  const lonNum = parseFloat(lon);\n\n  if (isNaN(latNum) || isNaN(lonNum)) {\n    alert('Please enter valid numeric coordinates separated by space (e.g., 55.576662 13.283111)');\n    return false;\n  }\n\n  if (latNum < -90 || latNum > 90) {\n    alert('Latitude must be between -90 and 90 degrees.');\n    return false;\n  }\n\n  if (lonNum < -180 || lonNum > 180) {\n    alert('Longitude must be between -180 and 180 degrees.');\n    return false;\n  }\n\n  return { lat: latNum, lon: lonNum };\n}\n\n// Function to navigate to coordinates\nfunction navigateToCoordinates(lat, lon) {\n  const view = map.getView();\n  const coordinates = fromLonLat([lon, lat]);\n\n  // Animate to the new location\n  view.animate({\n    center: coordinates,\n    duration: 1000,\n    zoom: 15\n  });\n\n  // Update search input with formatted coordinates\n  searchInput.value = `${lat.toFixed(6)} ${lon.toFixed(6)}`;\n\n  // Add to search history\n  addToSearchHistory(lat, lon);\n}\n\n// Function to parse and handle coordinate input\nfunction handleCoordinateInput() {\n  const input = searchInput.value.trim();\n\n  if (!input) {\n    return; // Empty input, do nothing\n  }\n\n  // Split by space and filter out empty strings\n  const parts = input.split(/[\\s,]+/).filter(part => part.length > 0);\n\n  if (parts.length !== 2) {\n    alert('Please enter exactly two coordinates separated by space (latitude longitude)');\n    return;\n  }\n\n  const [latStr, lonStr] = parts;\n  const validatedCoords = validateCoordinates(latStr, lonStr);\n\n  if (validatedCoords) {\n    navigateToCoordinates(validatedCoords.lat, validatedCoords.lon);\n  }\n}\n\n// Event listeners for search functionality\nsearchInput.addEventListener('keypress', function(event) {\n  if (event.key === 'Enter') {\n    handleCoordinateInput();\n    hideSearchSuggestions();\n  }\n});\n\n// Show suggestions when input is focused\nsearchInput.addEventListener('focus', function() {\n  showSearchSuggestions();\n});\n\n// Hide suggestions when clicking outside\ndocument.addEventListener('click', function(event) {\n  const searchContainer = document.querySelector('.search-container');\n  const suggestions = document.getElementById('search-suggestions');\n\n  if (!searchContainer.contains(event.target) && suggestions) {\n    hideSearchSuggestions();\n  }\n});\n\n// Hide suggestions when pressing Escape\ndocument.addEventListener('keydown', function(event) {\n  if (event.key === 'Escape') {\n    // Only hide suggestions if drawing is not enabled\n    if (!globalDrawingManager || !globalDrawingManager.isDrawingEnabled) {\n      hideSearchSuggestions();\n    }\n  }\n});\n\n// Clear history button functionality\nconst clearHistoryButton = document.getElementById('clear-history');\nclearHistoryButton.addEventListener('click', function(event) {\n  event.stopPropagation(); // Prevent triggering the document click event\n  clearSearchHistory();\n});\n\n// Export functions for testing\nexport {\n  dbscanClusterFeatures,\n  extractClusterBoundaries,\n  traceBoundary,\n  getBoundaryCoordinates,\n  createPolygonFeatures,\n  smoothPolygon,\n  smoothPolygonFeatures,\n  ConstraintManager,\n  globalConstraintManager,\n  DrawingManager,\n  globalDrawingManager\n};\n\n// Function to manually trigger clustering\nfunction triggerClustering() {\n  if (mapReady) {\n    console.log('Manually triggering clustering');\n    raster.changed();\n  } else {\n    console.log('Map not ready yet, clustering will be triggered when map loads');\n  }\n}\n\n// Function to check map ready status\nfunction isMapReady() {\n  return mapReady;\n}\n\n// Function to force map ready status (for testing)\nfunction forceMapReady() {\n  mapReady = true;\n  console.log('Forced map ready status');\n  raster.changed();\n}\n\n// Add to window for debugging\nwindow.triggerClustering = triggerClustering;\nwindow.isMapReady = isMapReady;\nwindow.mapReady = () => mapReady; // Direct access to the variable\nwindow.forceMapReady = forceMapReady;\n\n// Add constraint debugging methods\nwindow.debugConstraints = () => {\n  console.log('=== Constraint Debug Info ===');\n  console.log('Global constraint manager:', globalConstraintManager);\n  console.log('Constraint map size:', globalConstraintManager?.constraintMap?.size);\n  console.log('Constraint map keys:', Array.from(globalConstraintManager?.constraintMap?.keys() || []));\n  console.log('All constraints:', globalConstraintManager?.getAllConstraints());\n  console.log('Constraint statistics:', globalConstraintManager?.getStatistics());\n  console.log('localStorage constraint data:', localStorage.getItem(CONSTRAINT_STORAGE_KEY));\n};\n\nwindow.testConstraintSaving = () => {\n  console.log('=== Testing Constraint Saving ===');\n  if (globalConstraintManager) {\n    // Add a test constraint\n    const testConstraint = globalConstraintManager.addConstraint('must-link', [\n      {x: 100, y: 100, mapX: 100, mapY: 100},\n      {x: 101, y: 100, mapX: 101, mapY: 100}\n    ], {test: true});\n    console.log('Added test constraint:', testConstraint);\n  }\n};\n\nwindow.clearAllConstraints = () => {\n  console.log('=== Clearing All Constraints ===');\n  if (globalConstraintManager) {\n    globalConstraintManager.clearAllConstraints();\n    console.log('All constraints cleared');\n  }\n};\n\nwindow.clearConstraintsFromLocalStorage = () => {\n  console.log('=== Clearing Constraints from localStorage only ===');\n  if (globalConstraintManager) {\n    globalConstraintManager.clearConstraintsFromLocalStorageOnly();\n    console.log('Constraints cleared from localStorage only');\n  }\n};\n\nwindow.restoreAnnotations = () => {\n  console.log('=== Manually Restoring Annotations ===');\n  if (globalDrawingManager) {\n    globalDrawingManager.restoreDrawingAnnotations();\n    console.log('Annotations restored');\n  }\n};\n\nwindow.clearAnnotationsOnly = () => {\n  console.log('=== Clearing Annotations Only ===');\n  if (globalDrawingManager) {\n    globalDrawingManager.clearAllAnnotationsOnly();\n    console.log('Annotations cleared (constraints preserved)');\n  }\n};\n\nwindow.checkAnnotationState = () => {\n  console.log('=== Annotation State Check ===');\n  if (globalDrawingManager) {\n    const annotationCount = globalDrawingManager.annotationSource.getFeatures().length;\n    const constraintCount = globalConstraintManager.getAllConstraints().length;\n    console.log(`Annotations: ${annotationCount}, Constraints: ${constraintCount}`);\n\n    // List all annotations\n    const features = globalDrawingManager.annotationSource.getFeatures();\n    features.forEach((feature, index) => {\n      const constraintId = feature.get('constraintId');\n      const constraintType = feature.get('constraintType');\n      const geometry = feature.getGeometry();\n      console.log(`Annotation ${index}: ${constraintType} constraint ${constraintId}, geometry: ${geometry.getType()}`);\n    });\n  }\n};\n\n// --- Constraint RGB calculation function ---\nfunction calculateConstraintRGBs(image, constraintData, viewData) {\n  if (!constraintData || !constraintData.constraints) {\n    return constraintData;\n  }\n\n  // Create a deep copy of the constraint data to avoid modifying the original\n  const updatedConstraintData = {\n    ...constraintData,\n    constraints: constraintData.constraints.map(constraint => ({\n      ...constraint,\n      averageRGB: constraint.averageRGB ? { ...constraint.averageRGB } : null\n    }))\n  };\n\n  // Check if any constraints need RGB calculation\n  const constraintsNeedingRGB = updatedConstraintData.constraints.filter(constraint =>\n    constraint.averageRGB && constraint.averageRGB.needsCalculation\n  );\n\n  // If no constraints need RGB calculation, return early\n  if (constraintsNeedingRGB.length === 0) {\n    console.log('📏 No constraints need RGB calculation, skipping RGB calculation');\n    return constraintData; // Return original if no changes\n  }\n\n  console.log(`📏 Calculating RGB for ${constraintsNeedingRGB.length} constraints that need it`);\n\n  const width = image.width;\n  const height = image.height;\n  const inputData = image.data;\n  const nPixels = width * height;\n  let calculatedRGB = 0;\n\n  // Convert map coordinates to pixel coordinates for current view\n  function mapCoordsToPixelCoords(mapX, mapY, width, height, viewData) {\n    if (!viewData || !viewData.center || !viewData.resolution || !viewData.mapSize) {\n      return null;\n    }\n\n    const [centerX, centerY] = viewData.center;\n    const resolution = viewData.resolution;\n    const [mapWidth, mapHeight] = viewData.mapSize;\n\n    // Calculate map extent\n    const extentWidth = mapWidth * resolution;\n    const extentHeight = mapHeight * resolution;\n    const minX = centerX - extentWidth / 2;\n    const maxY = centerY + extentHeight / 2;\n\n    // Convert map coordinates to pixel coordinates\n    const pixelX = Math.round((mapX - minX) / extentWidth * width);\n    const pixelY = Math.round((maxY - mapY) / extentHeight * height);\n\n    // Check if pixel is within image bounds\n    if (pixelX >= 0 && pixelX < width && pixelY >= 0 && pixelY < height) {\n      return [pixelX, pixelY];\n    }\n\n    return null;\n  }\n\n  // Only process constraints that need RGB calculation\n  for (const constraint of constraintsNeedingRGB) {\n    // Check if constraint has pixels in current view\n    let pixelsInView = 0;\n    let totalR = 0.0, totalG = 0.0, totalB = 0.0;\n    let validPixels = 0;\n\n    for (const pixel of constraint.pixels) {\n      const currentPixelCoords = mapCoordsToPixelCoords(pixel.mapX, pixel.mapY, width, height, viewData);\n      if (currentPixelCoords) {\n        pixelsInView++;\n        const [x, y] = currentPixelCoords;\n        const idx = y * width + x;\n        if (idx >= 0 && idx < nPixels) {\n          totalR += inputData[idx * 4];\n          totalG += inputData[idx * 4 + 1];\n          totalB += inputData[idx * 4 + 2];\n          validPixels++;\n        }\n      }\n    }\n\n    // Calculate RGB values if constraint has pixels in current view\n    if (pixelsInView > 0 && validPixels > 0) {\n      constraint.averageRGB = {\n        r: Math.round(totalR / validPixels),\n        g: Math.round(totalG / validPixels),\n        b: Math.round(totalB / validPixels),\n        pixelCount: validPixels,\n        needsCalculation: false\n      };\n      calculatedRGB++;\n      console.log(`Calculated RGB for constraint ${constraint.id}: (${constraint.averageRGB.r},${constraint.averageRGB.g},${constraint.averageRGB.b}) from ${validPixels} pixels`);\n    }\n  }\n\n  console.log(`📏 Constraint RGB calculation: ${calculatedRGB} RGB values calculated`);\n\n  // Return the updated constraint data - the actual saving will be done in the main thread\n  if (calculatedRGB > 0) {\n    console.log(`📏 Calculated RGB for ${calculatedRGB} constraints - data will be saved in main thread`);\n    return updatedConstraintData; // Return the updated copy\n  }\n\n  return constraintData; // Return original if no changes\n}\n","/**\n * @module ol/control/defaults\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * {@link module:ol/control/Zoom~Zoom}\n * {@link module:ol/control/Rotate~Rotate}\n * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport Kinetic from '../Kinetic.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * {@link module:ol/interaction/DragRotate~DragRotate}\n * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * {@link module:ol/interaction/DragPan~DragPan}\n * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n"],"names":["CollectionEventType","ObjectEventType","EventType","Disposable","constructor","this","disposed","dispose","disposeInternal","ascending","a","b","descending","linearFindNearest","arr","target","direction","n","length","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","equals","arr1","arr2","len1","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","nextArgs","prototype","slice","call","arguments","arrayEquals","apply","toPromise","getter","value","err","Promise","reject","resolve","promiseGetter","clear","object","property","isEmpty","BaseEvent","type","propagationStopped","defaultPrevented","preventDefault","stopPropagation","Target","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","hasListener","Object","keys","index","indexOf","splice","listen","thisArg","once","originalListener","bind","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","on","onInternal","onceInternal","un","unInternal","revision_","changed","getRevision","len","ol_key","unByKey","abstract","Error","uidCounter_","getUid","obj","ol_uid","String","ObjectEvent","oldValue","BaseObject","values","values_","setProperties","get","hasOwnProperty","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","Property","CollectionEvent","element","Collection","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","forEach","f","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","except","MapEvent","map","frameState","MapBrowserEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","pixel","getEventPixel","coordinate","getCoordinateFromPixel","MapBrowserEventType","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","ua","navigator","userAgent","toLowerCase","test","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","CREATE_IMAGE_BITMAP","createImageBitmap","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","PointerEventType","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","element_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","clearTimeout","setTimeout","updateActivePointers_","id","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","Math","abs","clientX","clientY","MapEventType","MapProperty","TileState","assert","assertion","errorMessage","DROP","Infinity","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","state","getState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","ViewHint","ViewProperty","CENTER","RESOLUTION","ROTATION","clamp","min","max","squaredSegmentDistance","x","y","x1","y1","x2","y2","dx","dy","t","squaredDistance","toDegrees","angleInRadians","PI","toRadians","angleInDegrees","modulo","r","lerp","toFixed","decimals","factor","pow","round","floor","ceil","wrap","range","createExtent","extent","onlyCenter","smooth","center","resolution","size","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","minX","maxX","minY","maxY","ratio","log","none","Relationship","boundingExtent","coordinates","createEmpty","extendCoordinate","buffer","dest","clone","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","rotation","x0","y0","x3","y3","getRotatedViewport","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","wrapAndSliceX","multiWorld","isFinite","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","coord1","coord2","distance","sqrt","worldsAway","sourceExtentWidth","getWorldsAway","easeIn","easeOut","inAndOut","linear","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","warn","args","console","METERS_PER_UNIT","radians","degrees","ft","m","Projection","code_","code","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","cache","transforms","add","destination","transformFn","sourceCode","destinationCode","K0","E","E2","E3","E_P2","SQRT_E","_E","_E2","_E3","_E4","_E5","M1","M3","M4","P2","P3","P4","P5","R","toLonLat","easting","northing","zone","mu","north","pRad","pSin","pSin2","pCos","pTan","pTan2","pTan4","epSin","epSinSqrt","c","d","d2","d3","d4","d5","latitude","longitude","zoneToCentralLongitude","number","fromLonLat","latRad","latSin","latCos","latTan","latTan2","latTan4","lonRad","centralLonRad","a2","a3","a4","a5","a6","epsgRegExes","zoneFromCode","epsgId","re","match","parseInt","makeTransformFunction","transformer","coord","transformFactories","forward","inverse","projectionFactories","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","addProjection","add$1","projectionLike","replace","makeProjection","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","transform","equivalent","projection1","projection2","equalUnits","transformFunc","getTransformFunc","sourceTransforms","destinationTransforms","makeTransforms","intermediateCode","composeTransformFuncs","fromSource","toDestination","t1","t2","dimensions","getTransform","toUserCoordinate","sourceProjection","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","projections2","forwardTransform","inverseTransform","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","det","mat","e","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","matrixPrecision","fromString","cssTransform","substring","split","parseFloat","transform2D","destinationStride","j","k","anchor","anchorX","anchorY","deltaX","deltaY","tmpTransform","tmpPoint","NaN","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","applyTransform","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","Number","MIN_VALUE","getClosestPoint","intersectsCoordinate","computeExtent","isNaN","returnOrUpdate","scale","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","transformed","projTransform","SimpleGeometry","layout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","setLayout","nesting","getLayoutForStride","startsWith","linearRing","twiceArea","linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","jj","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","endss","coordinatesss","simplifyLineString","highQuality","simplifiedFlatCoordinates","simplifiedOffset","radialDistance","douglasPeucker","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","quantizeArray","LinearRing","maxDelta_","maxDeltaRevision_","linearRingArea","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRing","intersectsLinearRingArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","orientLinearRings","orientLinearRingsArray","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","fromExtent","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","result","createMinMaxResolution","cappedMaxRes","DEFAULT_TILE_SIZE","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","properties","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","minZoom","maxZoom","zoomFactor","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","z","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","power","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","centerNone","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createSnapToZero","rotationNone","theta","createSnapToN","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","animateInternal","animationCount","animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","delta","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","currentResolution","w","h","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","_a","baseLevel","fit","geometryOrExtent","geometry","polygonFromExtent","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","position","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","returnValue","coordinatesEqual","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","join","fontRegExMatchIndex","getFontParameters","fontSpec","style","lineHeight","weight","variant","families","family","createCanvasContext2D","width","height","canvasPool","settings","canvas","shift","document","createElement","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","Control","pointerEvents","target_","listenerKeys","render","setTarget","getMap","setMap","getOverlayContainerStopEvent","appendChild","mapEvent","getElementById","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","attributions_","attributions","className","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","layers","getAllLayers","visibleAttributions","Set","flatMap","layer","getAttributions","some","getSource","getAttributionsCollapsible","setCollapsible","from","updateElement_","display","all","attribution","visible","node","lastChild","removeChildren","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","view","getView","contains","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","lastIndex","firstIndex","getAngle","InteractionProperty","Interaction","setActive","getActive","mapBrowserEvent","active","zoomByDelta","DoubleClickZoom","delta_","stopEvent","browserEvent","shiftKey","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","targetElement","getTargetElement","rootNode","ShadowRoot","host","hasAttribute","activeElement","focus","always","mouseActionButton","never","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","centroid","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroidFromPointers","rotate$1","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","DragRotate","lastAngle_","getSize","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","top","getOverlayContainer","removeChild","setPixels","createOrUpdateGeometry","getGeometry","DragBoxEventType","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragZoom","out_","out","Key","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","mapUnitsDelta","pan","KeyboardZoom","platformModifierKey","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","LayerProperty","BaseLayer","background_","background","opacity","zIndex","className_","state_","getBackground","getClassName","getLayerState","managed","getZIndex","getOpacity","getVisible","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","GroupEvent","LayerGroup","baseOptions","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","layerState","RenderEventType","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","clearRenderer","getFeatures","getData","isVisible","getMapInternal","layerStatesArray","getLayerGroup","find","layerExtent","inView","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","getDeclutter","renderDeclutter","renderDeferred","setMapInternal","handlePrecompose_","renderEvent","arrayLayerState","createRenderer","hasRenderer","quickselect","compare","quickselectStep","defaultCompare","s","sd","swap","RBush$1","maxEntries","_maxEntries","_minEntries","_all","search","bbox","toBBox","nodesToSearch","children","child","childBBox","leaf","collides","insert","_build","_splitRoot","tmpNode","_insert","createNode","equalsFn","path","indexes","goingUp","findItem","_condense","compareMinX","compareMinY","toJSON","fromJSON","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","level","targetNode","minEnlargement","bboxArea","enlargement","enlargedArea","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","p","destNode","mid","NO_COLOR","colorParseContext","rgbModernRegEx","rgbLegacyAbsoluteRegEx","rgbLegacyPercentageRegEx","hexRegEx","toColorComponent","divider","endsWith","throwInvalidColor","color","parseRgba","rgb","alpha","rgbDivider","hex","step","colorFromHex","colorComponent","willReadFrequently","desynchronized","fillStyle","invalidCheckFillStyle","colorString","fillRect","colorFromImage","getImageData","cacheSize","withAlpha","b1","v","b2","a1","rgbaToLcha","g","l","q","asArray","toString","hasArea","toSize","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","typeName","names","namedType","includesType","broad","specific","isType","expected","LiteralExpression","isSpecific","CallExpression","operator","newParsingContext","variables","featureId","geometryType","mapState","parse","encoded","expectedType","colorFromString","returnType","parser","parsers","parseCallExpression","Ops","Ops_Get","createCallExpressionParser","hasArgsCount","withGetArgs","Ops_Var","name","Ops_Has","Ops_Id","withNoArgs","Ops_Concat","withArgsOfType","Ops_GeometryType","Ops_LineMetric","Ops_Resolution","usesMapState","Ops_Zoom","Ops_Time","Ops_Any","Ops_All","Ops_Not","Ops_Equal","Ops_NotEqual","Ops_GreaterThan","Ops_GreaterThanOrEqualTo","Ops_LessThan","Ops_LessThanOrEqualTo","Ops_Multiply","withArgsOfReturnType","Ops_Coalesce","Ops_Divide","Ops_Add","Ops_Subtract","Ops_Clamp","Ops_Mod","Ops_Pow","Ops_Abs","Ops_Floor","Ops_Ceil","Ops_Round","Ops_Sin","Ops_Cos","Ops_Atan","Ops_Sqrt","Ops_Match","hasEvenArgs","argsCount","inputType","fallback","message","Ops_Between","Ops_Interpolate","interpolationType","base","JSON","stringify","interpolation","stop","Ops_Case","operation","argCount","Ops_In","needleType","haystack","arg","Ops_Number","Ops_String","Ops_Array","Ops_Color","Ops_Band","Ops_Palette","colors","parsedColors","Ops_ToString","minArgs","maxArgs","expression","argType","validators","parsed","computeGeometryType","getGeometries","buildExpression","compileExpression","colorValue","compileAssertionExpression","nameExpression","hasOwn","compileAccessorExpression","concat","op","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","compileConvertExpression","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lchaToRgba","ImageState","ImageWrapper","pixelRatio","stateOrLoader","pixelRatio_","image_","loader","getImage","getPixelRatio","requestResolution","then","image","HTMLImageElement","ImageBitmap","HTMLCanvasElement","HTMLVideoElement","catch","error","finally","setImage","decodeFallback","src","handleLoad","unlisten","handleError","getCacheKey","crossOrigin","shared","cache_","patternCache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","getPattern","pattern","getImageState","ready","createPattern","setSize","maxCacheSize","taintedTestContext","IconImage","imageState","hitDetectionImage_","crossOrigin_","canvas_","color_","imageState_","size_","src_","tainted_","ready_","initializeImage_","isTainted_","drawImage","dispatchChangeEvent_","handleImageError_","handleImageLoad_","replaceColor_","getHitDetectionImage","getSrc","ctx","globalCompositeOperation","onChange","cacheKey","iconImageCache","asColorLike","iconCache","canvasPattern","patternCanvasContext","getIconImage","asCanvasPattern","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","body","offsetHeight","measureAndCacheTextWidth","reduce","curr","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","contextInstructions","executeLabelInstructions","restore","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImageSize","getOrigin","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","RegularShape","hitDetectionCanvas_","fill_","fill","origin_","points","radius2_","radius2","stroke_","stroke","renderOptions_","loading","getFill","getPoints","getRadius","getRadius2","getStroke","setFill","createHitDetectionCanvas_","fillKey","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineCap","lineDash","lineDashOffset","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","maxRadius","createPath_","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","startAngle","angle0","radiusC","lineTo","closePath","CircleStyle","setRadius","Fill","patternImage_","setColor","patternImage","CanvasPattern","CanvasGradient","calculateScale","wantedWidth","wantedHeight","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","iconImage_","offset_","offsetOrigin_","offsetOrigin","initialOptions_","onload","imageSize","setAnchor","iconImageSize","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometryFunction_","defaultGeometryFunction","setGeometry","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setText","feature","defaultStyles","createDefaultStyle","Text","font_","keepUpright_","keepUpright","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getKeepUpright","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setKeepUpright","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","rulesToStyleFunction","rules","parsingContext","evaluator","compiledRules","rule","styles","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","evaluationContext","getId","flatStylesToStyleFunction","flatStyles","evaluators","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluateKeepUpright","evaluatePadding","numberArrayEvaluator","optionalDeclutterMode","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","icon","buildIcon","pointsName","radiusName","requireNumber","shape","buildShape","evaluateRadius","circle","Circle","buildCircle","buildImage","evaluateZIndex","empty","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","patternEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSize","requireSizeLike","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","RBush","setRenderOrder","renderOrder","styleLike","toStyleLike","styleFunction","toStyleFunction","setDeclutter","RenderEvent","inversePixelTransform","MapRenderer","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","scheduleExpireIconCache","postRenderFunctions","expireIconCache","CompositeMapRenderer","fontChangeListenerKey_","redrawText","container","insertBefore","firstChild","children_","renderedLayerStates","previousElement","layerIndex","sourceState","oldChildren","childNodes","oldChild","newChild","replaceChildren","removeLayerMapProperty","setLayerMapProperty","ZIndexContext","__publicField","push_","instructions_","context_","Proxy","pushMethodArgs_","instructions","pushFunction","draw","instructionsAtIndex","instructionAtIndex","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","staleKeys_","maxStaleKeys","getStaleKeys","prependStaleKey","unshift","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","pixelContext","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","deferredContext_","containerReused","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","cssTransform1","cssTransform2","mat1","mat2","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","beginPath","moveTo","clip","prepareContainer","canvasTransform","dispatchRenderEvent_","preRender","postRender","renderDeferredInternal","getRenderContext","getRenderTransform","CanvasImageLayerRenderer","imageLayer","viewResolution","imageSource","viewHints","renderedExtent","imageExtent","imageMapWidth","imageMapHeight","imageResolution","imageResolutionX","imageResolutionY","imagePixelRatio","viewCenter","scaleX","scaleY","clipped","dw","dh","getInterpolate","imageSmoothingEnabled","BaseImageLayer","ImageLayer","Tile","tileCoord","transition_","transition","transitionStarts_","interpolate","release","setState","getTileCoord","getAlpha","time","inTransition","endTransition","asImageLike","disposedError","sharedContext","defaultSize","DataTile","loader_","data_","error_","controller_","controller","imageData","getError","abort","ImageTile","tileLoadFunction","unlisten_","tileLoadFunction_","unlistenImage_","getBlankImage","naturalWidth","naturalHeight","loadHandler","errorHandler","listening","decoding","loaded","listenImage","TileRange","containsTileRange","tileRange","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","gutter","renderEdges","drawSingle","clipExtent","pixelRound","sourceDataExtent","stitchContext","extend$1","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","steps","ud","vd","Triangulation","maxSourceExtent","errorThreshold","destinationResolution","sourceMatrix","sourceProj_","targetProj_","transformInvCache","transformInv","coordTransform","applyMatrix","pointLength","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","clipExtent_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","deleteOldest","entry","expireCache","keep","containsKey","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","sourceKey","getKeyZXY","addTileToLookup","tilesByZ","existing","has","removeTileFromLookup","delete","getRenderExtent","gridExtent","getTileGridForProjection","CanvasTileLayerRenderer","tileLayer","extentChanged","renderComplete","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision_","renderedTiles","renderedSourceKey_","renderedSourceRevision_","tempExtent","tempTileRange_","tempTileCoord_","createTileCoord","tileCache_","getTileCache","getOrCreateTile","tileCache","tileSource","getTile","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","tileSize","tileResolution","getGutterForProjection","sourceRevision","enqueueTiles","initialZ","preload","tileSourceKey","wantedTiles","minZ","zDirection","viewport","tileCoordIntersectsViewport","tileQueueKey","tileQueue","getTileCoordCenter","findStaleTile_","staleKeys","findAltTiles_","altZ","getTileRangeForTileCoordAndZ","covered","frameExtent","canvasExtent","getPreload","nextExtent","targetZ","renderExtent","uid","tileState","parentZ","canvasScale","zs","currentClip","clips","clipZs","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","origin","tileGutter","xIndex","nextX","yIndex","nextY","contextSaved","drawTile","updateUsedTiles","usedTiles","postRenderFunction","tilesCount","updateCacheSize","tileCount","getTileImage","alphaChanged","TileProperty","BaseTileLayer","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getCacheSize","getUseInterimTilesOnError","TileLayer","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","getEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleToState","fillStyleColor","fillPatternScale","strokeStyleToState","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","myBegin","moveToLineToInstruction","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","BATCH_CONSTRUCTORS","PolygonBuilder","Default","Builder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","filteredFlatCoordinates","sharedData","LineString","drawFlatCoordinates_","lastStroke","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textKeepUpright_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryWidths","getFlatMidpoint","getFlatMidpoints","getFlatInteriorPoints","beg","saveTextStates_","p0","p1","p2","p3","hitDetectionBackgroundFill","flatOffset","o","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textKeepUpright","textRotation","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","lineStringLength","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","fromCharCode","horizontalTextAlign","align","createTextChunks","acc","line","richTextToPlainText","part","Executor","overlaps","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","zIndexContext_","getZIndexContext","createLabel","widths","heights","lineWidths","baseStyle","currentWidth","currentHeight","getTextDimensions","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","box","strokePadding","alignAndScale","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","transform1","transform2","setFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","backgroundFillInstruction","backgroundStrokeInstruction","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","execute","executeHitDetection","ALL","DECLUTTER","NON_DECLUTTER","ExecutorGroup","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","idx","executor","targetContext","builderTypes","maxBuilderTypes","requireClip","getDeferredZIndexContexts","getRenderedContext","deferredZIndexContexts","CanvasImmediateRenderer","userTransform","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simpleGeometry","transformGeom2D","setTransform","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","GEOMETRY_RENDERERS","builderGroup","hasText","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","hasImage","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","declutterBuilderGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","loadingPromises","renderGeometry","renderFeatureInternal","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","clipped_","renderedFeatures_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedPixelRatio_","renderedRenderOrder_","renderedFrameDeclutter_","replayGroup_","replayGroupChanged","clipping","targetContext_","renderWorlds","executorGroup","declutterable","vectorSource","endWorld","world","setDrawContext_","resetDrawContext_","canvasPool$1","features","userExtent","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","getSquaredRenderTolerance","resultFeatures","hitDetect","lastIndexOf","_b","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","loadFeatures","dirty","getFeaturesInExtent","replayGroupInstructions","getOverlaps","VectorLayer","xhr","url","format","success","failure","XMLHttpRequest","open","responseType","withCredentials","status","responseText","responseXML","response","readFeatures","featureProjection","readProjection","onerror","send","loadFeaturesXhr","dataProjection","addFeatures","Feature","geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","setGeometryName","getGeometryName","handleGeometryChange_","createStyleFunction","setId","linearRingss","interpolatePoint","cumulativeLengths","needle","comparator","cmp","low","high","found","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","setCenterAndRadius","getRadiusSquared_","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","cloneGeometries","geometriesArray","simplifiedGeometries","simplified","setGeometries","setGeometriesArray","flatMidpoint_","flatMidpointRevision_","appendCoordinate","extend$2","lineString","getCoordinateAtM","getCoordinateAt","lineStrings","appendLineString","multiLineString","lineStringsCoordinateAtM","getLineString","getLineStrings","midpoints","intersectsLineStringArray","appendPoint","multiPoint","getPoint","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingssArea","linearRingssCenter","getInteriorPoints","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","stride_","simplifiedGeometry_","startOrientation","prevEndIndex","orientation","inflateEnds","midpoint","enableSimplifyTransformed","rbush_","RBush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","rbush","Source","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","attributionLike","VectorEventType","VectorSourceEvent","VectorSource","format_","url_","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removeFeatures","removed","featureChangeKeys","idString","setLoader","setUrl","setOverlaps","zRegEx","xRegEx","yRegEx","dashYRegEx","orthographic","near","far","lr","bt","nf","Canvas","gl","gl_","program_","createProgram","positionLocation","getAttribLocation","texcoordLocation","matrixLocation","getUniformLocation","textureMatrixLocation","textureLocation","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","positions","bufferData","Float32Array","STATIC_DRAW","texcoordBuffer","texcoords","tex","texWidth","texHeight","dstX","dstY","dstWidth","dstHeight","bindTexture","TEXTURE_2D","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","matrix","mat4.orthographic","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","mat4.translate","mat4.scale","uniformMatrix4fv","texMatrix","uniform1i","drawArrays","TRIANGLES","createShader","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fragmentSource","vertexSource","program","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","canvasGLPool","dataType","resultFrameBuffer","resultTexture","createTexture","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","NEAREST","texImage2D","RGBA","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","framebuffer","texture","stitchTexture","stitchWidth","stitchHeight","maxTexSize","getParameter","MAX_TEXTURE_SIZE","largeSide","scaleFactor","stitchWidthFixed","stitchHeightFixed","fb","webGLCanvas","WebGLCanvas","enable","SCISSOR_TEST","scissor","deleteFramebuffer","getUVs","triProgram","su0","sv0","su1","sv1","su2","sv2","edgeProgram","burnval","burnvalLocation","uniform4fv","lines","LINES","ReprojDataTile","Uint8ClampedArray","reprojData_","reprojError_","reprojSize_","sourceTileGridExtent","transformMatrix","dataSources","imageLike","tileData","arrayData","Uint8Array","DataView","sharedContext$1","toArray","pixelSize","isFloat","pixelCount","DataType","tileDataR","bytesPerElement","BYTES_PER_ELEMENT","bytesPerPixel","bytesPerRow","byteLength","bandCount","targetWidth","targetHeight","outWidth","outHeight","dataR","createCanvasContextWebGL","premultipliedAlpha","antialias","willInterpolate","textureType","getExtension","UNSIGNED_BYTE","reproj","dataSource","dataS","rows","cols","readPixels","flipY","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","releaseGLCanvas","ImageData","putImageData","tmpTileCoord","TileGrid","every","currentVal","res","isSorted","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tileCoordExtent","createOrUpdateTileRange","getTileCoordChildTileRange","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordResolution","getFullTileRange","opt_direction","fullTileRanges","getForProjection","extentFromProjection","resolutionsFromExtent","createForExtent","createForProjection","half","TileSource","tilePixelRatio_","tmpSize","tileOptions","setKey","getTileGrid","getTileCoordForTileUrlFunction","gridProjection","withinExtentAndZ","TileSourceEvent","TileEventType","DataTileSource","xyzOptions","gridOptions","createXYZ","tileLoadingKeys_","handleTileChange_","tileGridForProjection_","setTileSizes","thisProj","getReprojTile_","reprojTilePixelRatio","textureSize","sourceLoader","AbortController","loaderOptions","signal","requestZ","requestX","requestY","projKey","setTileGridForProjection","tilegrid","proj","loadError","template","renderXYZTemplate","makeLoaderFromTemplates","templates","urls","hash","hashZXY","pickUrl","makeLoaderFromUrlLike","exec","startCharCode","charCodeAt","stopCharCode","charCode","expandUrl","keyCount","keyFromUrlLike","ImageCanvas","handleLoad_","fromResolutionLike","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEventType","ImageSourceEvent","ImageSource","reprojectedImage_","reprojectedRevision_","wantedExtent_","wantedResolution_","static_","wantedProjection_","setResolutions","findNearestResolution","getImageInternal","requestExtent","marginWidth","requestWidth","marginHeight","getRequestExtent","handleImageChange","createMinion","buffers","meta","imageOps","numBuffers","numBytes","images","arrays","pixels","createWorker","config","onMessage","lib","worker","Worker","Blob","Buffer","URL","createObjectURL","Processor","threads","imageOps_","workers","onWorkerMessage_","minion","terminated","postMessage","terminate","createFauxWorker","workers_","queue_","maxQueueLength_","queue","running_","dataLookup_","job_","process","inputs","enqueue_","dispatch_","job","slices","resolveJob_","RasterEventType","RasterSourceEvent","RasterSource","processor_","operationType_","operationType","threads_","layers_","createLayer","createLayers","useResolutions_","tileQueue_","processSources_","requestedFrameState_","renderedImageCanvas_","frameState_","mapId","renderTargets","iMax","sourceOrLayer","sourceAttributions","setOperation","updateFrameState_","allSourcesReady_","imageDatas","onWorkerComplete_","layerOrSource","exports","ol_Observable","CSS_PREFIX","LayerSwitcher","opt_options","activationMode","startActive","collapseTipLabel","groupSelectStyle","getGroupSelectStyle","mapListeners","hiddenClassName","isTouchDevice_","shownClassName","panel","enableTouchScroll_","onclick","hidePanel","showPanel","onmouseover","onmouseout","relatedTarget","updateButton","renderPanel","render_event","ensureTopVisibleBaseLayerShown","forEachRecursive","_idx","setGroupVisibility","setChildVisibility","ul","renderLayers_","_changedLyr","rendercomplete_event","isBaseGroup","grp","lyrs","getGroupsAndLayers","descendantVisibility","group","groupVisible","groupIndeterminate","lastVisibleBaseLyr","lyr","_arr","setVisible_","filterFn","_lyr","renderLayer_","li","lyrTitle","checkboxId","uuid","btn","toggleFold_","checked","indeterminate","onchange","htmlFor","rsl","elm","random","scrollStartPos","scrollTop","touches","pageY","createEvent","factory","DrawEventType","DrawEvent","getSquaredDistance","getCoordinate","getCumulativeSquaredDistance","endIndex","lowIndex","highIndex","lowWholeIndex","highWholeIndex","interpolateCoordinate","appendGeometryTraceTargets","targets","appendTraceTarget","polys","sharedUpdateInfo","ring","rel","getPointSegmentRelationship","sharedRel","py","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","source_","features_","snapTolerance_","snapTolerance","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryLayout_","geometryLayout","geometryFunction","mode","squaredLength","squaredCoordinateDistance","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","getDefaultStyleFunction","geometryName","freehandCondition_","freehand","freehandCondition","traceCondition_","setTrace","trace","traceState_","traceSource_","traceSource","updateState_","getOverlay","move","addToDrawing_","startDrawing_","deactivateTrace_","toggleTraceState_","getTraceTargets","startPx","targetIndex","addOrRemoveTracedCoordinates_","previouslyForward","addTracedCoordinates_","removeTracedCoordinates_","fromIndex","toIndex","removeLastPoints_","appendCoordinates","updateTrace_","traceState","updatedTraceTarget","closestTargetDistance","newTargetIndex","newEndIndex","minSegmentDistance","coordinateIndex","newTarget","considerBothDirections","newCoordinate","getPixelFromCoordinate","forwardDistance","reverseDistance","getTraceTargetUpdate","oldTarget","tracing","startingToDraw","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","createOrUpdateCustomSketchLine_","sketchLineGeom","removeLastPoint","sketchFeature","abortDrawing_","newDrawing","ending","sketchFeatures","overlaySource","white","blue","createEditingStyle","CONFIG_STORAGE_KEY","CONSTRAINT_STORAGE_KEY","DEFAULT_CONFIG","epsilon","minClusterSize","coordWeight","constraintTolerance","rasterVisible","simplifyTolerance","smoothingIterations","movingAverageWindow","mapReady","globalConstraintManager","constraintMap","Map","spatialIndex","nextId","pixelConstraintCache","isDirty","addConstraint","metadata","averageRGB","needsCalculation","created","updateSpatialIndex","clearCache","constraintMapSize","constraintMapKeys","saveConstraintsToStorage","getStatistics","removeConstraint","constraintId","removeSpatialIndex","getPixelConstraints","constraints","hasMustLink","constraints1","constraints2","hasCannotLink","getAllConstraints","getConstraintsByType","clearAllConstraints","clearConstraintsFromMemory","clearConstraintsFromLocalStorageOnly","localStorage","removeItem","constraintIds","updateConstraintRGBs","updatedCount","newAvgRGB","calculateAverageRGB","reactivateConstraints","reactivatedCount","mustLinkCount","cannotLinkCount","totalPixels","totalConstraints","mustLinkConstraints","cannotLinkConstraints","totalPixelsConstrained","spatialIndexSize","exportConstraints","version","exported","exportConstraintsAsJSON","importConstraints","jsonData","idNum","constraintData","setItem","loadConstraintsFromStorage","saved","getItem","clearConstraintsFromStorage","globalDrawingManager","saveConfiguration","saveCurrentConfiguration","epsilonControl","minClusterSizeControl","coordWeightControl","constraintToleranceControl","dbscanClusterFeatures","minPts","inputData","nPixels","visited","labels","Int32Array","clusterId","pixelIdx","distFeatures","idx1","idx2","g1","g2","constraintType","avgRGB","rgbDist1","rgbDist2","checkConstraints","rgbDist","coordDist","regionQuery","neighbors","nIdx","current","nbs","randomColor","seed","traceBoundary","boundary","MOORE_DIRECTIONS","isClusterPixel","neighborCount","currentX","currentY","dir","prevDirection","iterationCount","maxIterations","searchDir","extractClusterBoundaries","boundaries","processed","clusterSizes","validClusters","entries","isBoundary","nx","ny","bx","by","getPixelCoordinates","viewData","mapSize","halfWidth","halfHeight","viewExtent","pixelToCoord","pixelX","pixelY","clusterCoordinates","getPixelCoordinate","getBoundaryCoordinates","boundaryCoordinates","smoothPolygonCoordinates","windowSize","smoothed","halfWindow","sumX","sumY","smoothPolygon","smoothedCoords","simplifiedCoords","finalCoords","clusterBoundarySource","updateBoundaryVectorLayer","boundaryPoints","firstCoord","lastCoord","boundaryPixelCount","createPolygonFeatures","smoothedFeatures","smoothedGeometry","smoothedFeature","smoothPolygonFeatures","rasterOperation","lastResolution","updatedConstraintData","calculateConstraintRGBs","outputData","clusterColors","imagery","raster","getClusterCoordinates","getClusterBoundary","rasterImage","boundaryVectorLayer","optionsInternal","keyboardEventTarget","layerGroup","controls","interactions","overlays","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","zoomOptions","rotateOptions","attributionOptions","defaultControls","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","defaultInteractions","overlays_","overlayIdIndex_","postRenderFunctions_","getTilePriority","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","getTarget","getOverlayById","getLoadingOrNotReady","viewCoordinate","ownerDocument","tileCenter","handleMapBrowserEvent","currentDoc","documentElement","interactionsArray","handlePostRender","lowOnFrameBudget","unobserve","targetRoot","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","equalsExtent","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","getClientRects","oldSize","constraintManager","circleDrawInteraction","lineDrawInteraction","isDrawingEnabled","currentTool","statusMessage","keyboardHandler","annotationSource","annotationLayer","getAnnotationStyle","initializeDrawingInteractions","handleCircleDrawEnd","handleLineDrawEnd","initializeKeyboardHandling","handleKeyboardEvent","disableAllDrawing","updateDrawingButtonStates","showStatusMessage","cleanupKeyboardHandling","cleanup","hideStatusMessage","extractPixelsFromCircle","updateConstraintTooltip","updateClustering","extractPixelsFromLine","pixelBounds","getPixelBoundsFromExtent","pixelCoord","pixelToMapCoordinate","mapX","mapY","distancePointToLineString","lineCoordinates","segmentStart","segmentEnd","distancePointToLineSegment","A","B","C","D","dot","lenSq","xx","yy","param","enableCircleDrawing","showDrawingFeedback","enableLineDrawing","hideDrawingFeedback","mapElement","cssText","clearAllAnnotations","clearAllAnnotationsOnly","removeAnnotation","getDrawingState","isEnabled","annotationCount","constraintCount","getCurrentImageData","rasterSource","getBaseImageData","imageryLayer","loadSavedConstraints","restoreDrawingAnnotations","restoreAnnotationFromConstraint","layerSwitcher","drawingTools","enableCircle","enableLine","updateButtonStates","saveConstraints","loadConstraints","clearStorage","renderPixels","latestBoundaryCoordinates","updateEpsilonValue","innerText","updateMinClusterSizeValue","updateCoordWeightValue","updateConstraintToleranceValue","updatedData","actualConstraint","toggleRasterButton","circleToolButton","lineToolButton","disableDrawingButton","clearConstraintsButton","drawingState","stats","savedConfig","loadConfiguration","searchInput","SEARCH_HISTORY_KEY","getSearchHistory","history","addToSearchHistory","lat","lon","searchString","filteredHistory","timestamp","trimmedHistory","saveSearchHistory","hideSearchSuggestions","existingDropdown","navigateToCoordinates","handleCoordinateInput","trim","alert","latStr","lonStr","validatedCoords","latNum","lonNum","validateCoordinates","dropdown","noHistoryMessage","querySelector","suggestion","dataset","showSearchSuggestions","searchContainer","suggestions","constraintsNeedingRGB","calculatedRGB","mapCoordsToPixelCoords","mapWidth","mapHeight","extentWidth","extentHeight","pixelsInView","totalR","totalG","totalB","validPixels","currentPixelCoords","clearSearchHistory","triggerClustering","isMapReady","forceMapReady","debugConstraints","testConstraintSaving","testConstraint","clearConstraintsFromLocalStorage","restoreAnnotations","clearAnnotationsOnly","checkAnnotationState"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196]}