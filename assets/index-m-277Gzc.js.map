{"version":3,"file":"index-m-277Gzc.js","sources":["../../node_modules/ol/CollectionEventType.js","../../node_modules/ol/ObjectEventType.js","../../node_modules/ol/events/EventType.js","../../node_modules/ol/Disposable.js","../../node_modules/ol/array.js","../../node_modules/ol/functions.js","../../node_modules/ol/obj.js","../../node_modules/ol/events/Event.js","../../node_modules/ol/events/Target.js","../../node_modules/ol/events.js","../../node_modules/ol/Observable.js","../../node_modules/ol/util.js","../../node_modules/ol/Object.js","../../node_modules/ol/Collection.js","../../node_modules/ol/MapEvent.js","../../node_modules/ol/MapBrowserEvent.js","../../node_modules/ol/MapBrowserEventType.js","../../node_modules/ol/has.js","../../node_modules/ol/pointer/EventType.js","../../node_modules/ol/MapBrowserEventHandler.js","../../node_modules/ol/MapEventType.js","../../node_modules/ol/MapProperty.js","../../node_modules/ol/TileState.js","../../node_modules/ol/asserts.js","../../node_modules/ol/structs/PriorityQueue.js","../../node_modules/ol/TileQueue.js","../../node_modules/ol/ViewHint.js","../../node_modules/ol/ViewProperty.js","../../node_modules/ol/math.js","../../node_modules/ol/centerconstraint.js","../../node_modules/ol/extent/Relationship.js","../../node_modules/ol/extent.js","../../node_modules/ol/coordinate.js","../../node_modules/ol/easing.js","../../node_modules/ol/sphere.js","../../node_modules/ol/console.js","../../node_modules/ol/proj/Units.js","../../node_modules/ol/proj/Projection.js","../../node_modules/ol/proj/epsg3857.js","../../node_modules/ol/proj/epsg4326.js","../../node_modules/ol/proj/projections.js","../../node_modules/ol/proj/transforms.js","../../node_modules/ol/proj/utm.js","../../node_modules/ol/proj.js","../../node_modules/ol/transform.js","../../node_modules/ol/geom/flat/transform.js","../../node_modules/ol/geom/Geometry.js","../../node_modules/ol/geom/SimpleGeometry.js","../../node_modules/ol/geom/flat/area.js","../../node_modules/ol/geom/flat/closest.js","../../node_modules/ol/geom/flat/deflate.js","../../node_modules/ol/geom/flat/inflate.js","../../node_modules/ol/geom/flat/simplify.js","../../node_modules/ol/geom/LinearRing.js","../../node_modules/ol/geom/Point.js","../../node_modules/ol/geom/flat/contains.js","../../node_modules/ol/geom/flat/interiorpoint.js","../../node_modules/ol/geom/flat/segments.js","../../node_modules/ol/geom/flat/intersectsextent.js","../../node_modules/ol/geom/flat/reverse.js","../../node_modules/ol/geom/flat/orient.js","../../node_modules/ol/geom/Polygon.js","../../node_modules/ol/resolutionconstraint.js","../../node_modules/ol/rotationconstraint.js","../../node_modules/ol/tilegrid/common.js","../../node_modules/ol/View.js","../../node_modules/ol/css.js","../../node_modules/ol/dom.js","../../node_modules/ol/control/Control.js","../../node_modules/ol/control/Attribution.js","../../node_modules/ol/control/Rotate.js","../../node_modules/ol/control/Zoom.js","../../node_modules/ol/control/defaults.js","../../node_modules/ol/Kinetic.js","../../node_modules/ol/interaction/Property.js","../../node_modules/ol/interaction/Interaction.js","../../node_modules/ol/interaction/DoubleClickZoom.js","../../node_modules/ol/events/condition.js","../../node_modules/ol/interaction/Pointer.js","../../node_modules/ol/interaction/DragPan.js","../../node_modules/ol/interaction/DragRotate.js","../../node_modules/ol/render/Box.js","../../node_modules/ol/interaction/DragBox.js","../../node_modules/ol/interaction/DragZoom.js","../../node_modules/ol/events/Key.js","../../node_modules/ol/interaction/KeyboardPan.js","../../node_modules/ol/interaction/KeyboardZoom.js","../../node_modules/ol/interaction/MouseWheelZoom.js","../../node_modules/ol/interaction/PinchRotate.js","../../node_modules/ol/interaction/PinchZoom.js","../../node_modules/ol/interaction/defaults.js","../../node_modules/ol/layer/Property.js","../../node_modules/ol/layer/Base.js","../../node_modules/ol/layer/Group.js","../../node_modules/ol/render/EventType.js","../../node_modules/ol/layer/Layer.js","../../node_modules/quickselect/index.js","../../node_modules/rbush/index.js","../../node_modules/ol/color.js","../../node_modules/ol/size.js","../../node_modules/ol/expr/expression.js","../../node_modules/ol/expr/cpu.js","../../node_modules/ol/ImageState.js","../../node_modules/ol/Image.js","../../node_modules/ol/style/IconImageCache.js","../../node_modules/ol/style/IconImage.js","../../node_modules/ol/colorlike.js","../../node_modules/ol/render/canvas.js","../../node_modules/ol/style/Image.js","../../node_modules/ol/style/RegularShape.js","../../node_modules/ol/style/Circle.js","../../node_modules/ol/style/Fill.js","../../node_modules/ol/style/Icon.js","../../node_modules/ol/style/Stroke.js","../../node_modules/ol/style/Style.js","../../node_modules/ol/style/Text.js","../../node_modules/ol/render/canvas/style.js","../../node_modules/ol/layer/BaseVector.js","../../node_modules/ol/render/Event.js","../../node_modules/ol/renderer/Map.js","../../node_modules/ol/renderer/Composite.js","../../node_modules/ol/Map.js","../../node_modules/ol/render/canvas/ZIndexContext.js","../../node_modules/ol/renderer/Layer.js","../../node_modules/ol/renderer/canvas/Layer.js","../../node_modules/ol/renderer/canvas/ImageLayer.js","../../node_modules/ol/layer/BaseImage.js","../../node_modules/ol/layer/Image.js","../../node_modules/ol/Tile.js","../../node_modules/ol/DataTile.js","../../node_modules/ol/ImageTile.js","../../node_modules/ol/TileRange.js","../../node_modules/ol/reproj.js","../../node_modules/ol/reproj/Triangulation.js","../../node_modules/ol/reproj/common.js","../../node_modules/ol/reproj/Tile.js","../../node_modules/ol/structs/LRUCache.js","../../node_modules/ol/tilecoord.js","../../node_modules/ol/renderer/canvas/TileLayer.js","../../node_modules/ol/layer/TileProperty.js","../../node_modules/ol/layer/BaseTile.js","../../node_modules/ol/layer/Tile.js","../../node_modules/ol/render/VectorContext.js","../../node_modules/ol/render/canvas/Instruction.js","../../node_modules/ol/render/canvas/Builder.js","../../node_modules/ol/render/canvas/ImageBuilder.js","../../node_modules/ol/render/canvas/LineStringBuilder.js","../../node_modules/ol/render/canvas/PolygonBuilder.js","../../node_modules/ol/geom/flat/linechunk.js","../../node_modules/ol/geom/flat/straightchunk.js","../../node_modules/ol/render/canvas/TextBuilder.js","../../node_modules/ol/render/canvas/BuilderGroup.js","../../node_modules/ol/geom/flat/length.js","../../node_modules/ol/geom/flat/textpath.js","../../node_modules/ol/render/canvas/Executor.js","../../node_modules/ol/render/canvas/ExecutorGroup.js","../../node_modules/ol/render/canvas/Immediate.js","../../node_modules/ol/render/canvas/hitdetect.js","../../node_modules/ol/renderer/vector.js","../../node_modules/ol/renderer/canvas/VectorLayer.js","../../node_modules/ol/layer/Vector.js","../../node_modules/ol/featureloader.js","../../node_modules/ol/loadingstrategy.js","../../node_modules/ol/Feature.js","../../node_modules/ol/geom/flat/center.js","../../node_modules/ol/geom/flat/interpolate.js","../../node_modules/ol/geom/Circle.js","../../node_modules/ol/geom/GeometryCollection.js","../../node_modules/ol/geom/LineString.js","../../node_modules/ol/geom/MultiLineString.js","../../node_modules/ol/geom/MultiPoint.js","../../node_modules/ol/geom/MultiPolygon.js","../../node_modules/ol/render/Feature.js","../../node_modules/ol/structs/RBush.js","../../node_modules/ol/source/Source.js","../../node_modules/ol/source/VectorEventType.js","../../node_modules/ol/source/Vector.js","../../node_modules/ol/uri.js","../../node_modules/ol/vec/mat4.js","../../node_modules/ol/webgl/Canvas.js","../../node_modules/ol/reproj/glreproj.js","../../node_modules/ol/reproj/DataTile.js","../../node_modules/ol/tilegrid/TileGrid.js","../../node_modules/ol/tilegrid.js","../../node_modules/ol/source/Tile.js","../../node_modules/ol/source/TileEventType.js","../../node_modules/ol/source/DataTile.js","../../node_modules/ol/source/ImageTile.js","../../node_modules/ol/ImageCanvas.js","../../node_modules/ol/resolution.js","../../node_modules/ol/reproj/Image.js","../../node_modules/ol/source/common.js","../../node_modules/ol/source/Image.js","../../node_modules/ol/source/Raster.js","../../node_modules/ol-layerswitcher/dist/ol-layerswitcher.js","../../node_modules/ol/interaction/Draw.js","../../main.js"],"sourcesContent":["/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\nimport Event from './Event.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @param {Event|import('./events/Event.js').default} event The event\n     * @return {void|boolean} When the function returns `false`, event propagation will stop.\n     * @this {typeof target}\n     */\n    listener = function (event) {\n      target.removeEventListener(type, listener);\n      return originalListener.call(thisArg ?? this, event);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '10.6.1';\n","/**\n * @module ol/Object\n */\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/Collection\n */\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {PointerEvent|KeyboardEvent|WheelEvent} [EVENT=PointerEvent|KeyboardEvent|WheelEvent]\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     * @private\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   * @override\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   * @override\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport EventType from './events/EventType.js';\nimport Target from './events/Target.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport PointerEventType from './pointer/EventType.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * @private\n     */\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import('./tilecoord.js').TileCoord, number): number} PriorityFunction\n */\n\n/**\n * @typedef {[import('./Tile.js').default, string, import('./tilecoord.js').TileCoord, number]} TileQueueElement\n */\n\n/**\n * @extends PriorityQueue<TileQueueElement>}\n */\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      (element) => tilePriorityFunction.apply(null, element),\n      (element) => element[0].getKey(),\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {TileQueueElement} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n\n/**\n * Wraps a number between some minimum and maximum values.\n * @param {number} n The number to wrap.\n * @param {number} min The minimum of the range (inclusive).\n * @param {number} max The maximum of the range (exclusive).\n * @return {number} The wrapped number.\n */\nexport function wrap(n, min, max) {\n  if (n >= min && n < max) {\n    return n;\n  }\n  const range = max - min;\n  return ((((n - min) % range) + range) % range) + min;\n}\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * The function is called with a `number` view resolution and a\n * {@link module:ol/coordinate~Coordinate} as arguments, and returns the `number` resolution\n * in projection units at the passed coordinate.\n * @typedef {function(number, import(\"../coordinate.js\").Coordinate):number} GetPointResolution\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {GetPointResolution} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * In most cases, you should not need to create instances of this class.\n * Instead, where projection information is required, you can use a string\n * projection code or identifier (e.g. `EPSG:4326`) instead of a projection\n * instance.\n *\n * The library includes support for transforming coordinates between the following\n * projections:\n *\n *  WGS 84 / Geographic - Using codes `EPSG:4326`, `CRS:84`, `urn:ogc:def:crs:EPSG:6.6:4326`,\n *    `urn:ogc:def:crs:OGC:1.3:CRS84`, `urn:ogc:def:crs:OGC:2:84`, `http://www.opengis.net/gml/srs/epsg.xml#4326`,\n *    or `urn:x-ogc:def:crs:EPSG:4326`\n *  WGS 84 / Spherical Mercator - Using codes `EPSG:3857`, `EPSG:102100`, `EPSG:102113`, `EPSG:900913`,\n *    `urn:ogc:def:crs:EPSG:6.18:3:3857`, or `http://www.opengis.net/gml/srs/epsg.xml#3857`\n *  WGS 84 / UTM zones - Using codes `EPSG:32601` through `EPSG:32660` for northern zones\n *    and `EPSG:32701` through `EPSG:32760` for southern zones. Note that the built-in UTM transforms\n *    are lower accuracy (with errors on the order of 0.1 m) than those that you might get in a\n *    library like [proj4js](https://github.com/proj4js/proj4js).\n *\n * For additional projection support, or to use higher accuracy transforms than the built-in ones, you can use\n * the [proj4js](https://github.com/proj4js/proj4js) library. With `proj4js`, after adding any new projection\n * definitions, call the {@link module:ol/proj/proj4.register} function.\n *\n * You can use the {@link module:ol/proj.get} function to retrieve a projection instance\n * for one of the registered projections.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {GetPointResolution|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {GetPointResolution|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default|null} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|null} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    return transforms[sourceCode][destinationCode];\n  }\n  return null;\n}\n","/**\n * @module ol/proj/utm\n */\n\n/**\n * Adapted from https://github.com/Turbo87/utm\n * Copyright (c) 2012-2017 Tobias Bieniek\n *\n * The functions here provide approximate transforms to and from UTM.\n * They are not appropriate for use beyond the validity extend of a UTM\n * zone, and the accuracy of the transform decreases toward the zone\n * edges.\n */\n\nimport {toDegrees, toRadians, wrap} from '../math.js';\nimport Projection from './Projection.js';\n\n/**\n * @typedef {Object} UTMZone\n * @property {number} number The zone number (1 - 60).\n * @property {boolean} north The northern hemisphere.\n */\n\nconst K0 = 0.9996;\n\nconst E = 0.00669438;\nconst E2 = E * E;\nconst E3 = E2 * E;\nconst E_P2 = E / (1 - E);\n\nconst SQRT_E = Math.sqrt(1 - E);\nconst _E = (1 - SQRT_E) / (1 + SQRT_E);\nconst _E2 = _E * _E;\nconst _E3 = _E2 * _E;\nconst _E4 = _E3 * _E;\nconst _E5 = _E4 * _E;\n\nconst M1 = 1 - E / 4 - (3 * E2) / 64 - (5 * E3) / 256;\nconst M2 = (3 * E) / 8 + (3 * E2) / 32 + (45 * E3) / 1024;\nconst M3 = (15 * E2) / 256 + (45 * E3) / 1024;\nconst M4 = (35 * E3) / 3072;\n\nconst P2 = (3 / 2) * _E - (27 / 32) * _E3 + (269 / 512) * _E5;\nconst P3 = (21 / 16) * _E2 - (55 / 32) * _E4;\nconst P4 = (151 / 96) * _E3 - (417 / 128) * _E5;\nconst P5 = (1097 / 512) * _E4;\n\nconst R = 6378137;\n\n/**\n * @param {number} easting Easting value of coordinate.\n * @param {number} northing Northing value of coordinate.\n * @param {UTMZone} zone The UTM zone.\n * @return {import(\"../coordinate.js\").Coordinate} The transformed coordinate.\n */\nfunction toLonLat(easting, northing, zone) {\n  const x = easting - 500000;\n  const y = zone.north ? northing : northing - 10000000;\n\n  const m = y / K0;\n  const mu = m / (R * M1);\n\n  const pRad =\n    mu +\n    P2 * Math.sin(2 * mu) +\n    P3 * Math.sin(4 * mu) +\n    P4 * Math.sin(6 * mu) +\n    P5 * Math.sin(8 * mu);\n\n  const pSin = Math.sin(pRad);\n  const pSin2 = pSin * pSin;\n\n  const pCos = Math.cos(pRad);\n\n  const pTan = pSin / pCos;\n  const pTan2 = pTan * pTan;\n  const pTan4 = pTan2 * pTan2;\n\n  const epSin = 1 - E * pSin2;\n  const epSinSqrt = Math.sqrt(1 - E * pSin2);\n\n  const n = R / epSinSqrt;\n  const r = (1 - E) / epSin;\n\n  const c = E_P2 * pCos ** 2;\n  const c2 = c * c;\n\n  const d = x / (n * K0);\n  const d2 = d * d;\n  const d3 = d2 * d;\n  const d4 = d3 * d;\n  const d5 = d4 * d;\n  const d6 = d5 * d;\n\n  const latitude =\n    pRad -\n    (pTan / r) *\n      (d2 / 2 - (d4 / 24) * (5 + 3 * pTan2 + 10 * c - 4 * c2 - 9 * E_P2)) +\n    (d6 / 720) * (61 + 90 * pTan2 + 298 * c + 45 * pTan4 - 252 * E_P2 - 3 * c2);\n\n  let longitude =\n    (d -\n      (d3 / 6) * (1 + 2 * pTan2 + c) +\n      (d5 / 120) * (5 - 2 * c + 28 * pTan2 - 3 * c2 + 8 * E_P2 + 24 * pTan4)) /\n    pCos;\n\n  longitude = wrap(\n    longitude + toRadians(zoneToCentralLongitude(zone.number)),\n    -Math.PI,\n    Math.PI,\n  );\n\n  return [toDegrees(longitude), toDegrees(latitude)];\n}\n\nconst MIN_LATITUDE = -80;\nconst MAX_LATITUDE = 84;\nconst MIN_LONGITUDE = -180;\nconst MAX_LONGITUDE = 180;\n\n/**\n * @param {number} longitude The longitude.\n * @param {number} latitude The latitude.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../coordinate.js').Coordinate} The UTM coordinate.\n */\nfunction fromLonLat(longitude, latitude, zone) {\n  longitude = wrap(longitude, MIN_LONGITUDE, MAX_LONGITUDE);\n\n  if (latitude < MIN_LATITUDE) {\n    latitude = MIN_LATITUDE;\n  } else if (latitude > MAX_LATITUDE) {\n    latitude = MAX_LATITUDE;\n  }\n\n  const latRad = toRadians(latitude);\n  const latSin = Math.sin(latRad);\n  const latCos = Math.cos(latRad);\n\n  const latTan = latSin / latCos;\n  const latTan2 = latTan * latTan;\n  const latTan4 = latTan2 * latTan2;\n\n  const lonRad = toRadians(longitude);\n  const centralLon = zoneToCentralLongitude(zone.number);\n  const centralLonRad = toRadians(centralLon);\n\n  const n = R / Math.sqrt(1 - E * latSin ** 2);\n  const c = E_P2 * latCos ** 2;\n\n  const a = latCos * wrap(lonRad - centralLonRad, -Math.PI, Math.PI);\n  const a2 = a * a;\n  const a3 = a2 * a;\n  const a4 = a3 * a;\n  const a5 = a4 * a;\n  const a6 = a5 * a;\n\n  const m =\n    R *\n    (M1 * latRad -\n      M2 * Math.sin(2 * latRad) +\n      M3 * Math.sin(4 * latRad) -\n      M4 * Math.sin(6 * latRad));\n\n  const easting =\n    K0 *\n      n *\n      (a +\n        (a3 / 6) * (1 - latTan2 + c) +\n        (a5 / 120) * (5 - 18 * latTan2 + latTan4 + 72 * c - 58 * E_P2)) +\n    500000;\n\n  let northing =\n    K0 *\n    (m +\n      n *\n        latTan *\n        (a2 / 2 +\n          (a4 / 24) * (5 - latTan2 + 9 * c + 4 * c ** 2) +\n          (a6 / 720) * (61 - 58 * latTan2 + latTan4 + 600 * c - 330 * E_P2)));\n\n  if (!zone.north) {\n    northing += 10000000;\n  }\n\n  return [easting, northing];\n}\n\n/**\n * @param {number} zone The zone number.\n * @return {number} The central longitude in degrees.\n */\nfunction zoneToCentralLongitude(zone) {\n  return (zone - 1) * 6 - 180 + 3;\n}\n\n/**\n * @type {Array<RegExp>}\n */\nconst epsgRegExes = [\n  /^EPSG:(\\d+)$/,\n  /^urn:ogc:def:crs:EPSG::(\\d+)$/,\n  /^http:\\/\\/www\\.opengis\\.net\\/def\\/crs\\/EPSG\\/0\\/(\\d+)$/,\n];\n\n/**\n * @param {string} code The projection code.\n * @return {UTMZone|null} The UTM zone info (or null if not UTM).\n */\nexport function zoneFromCode(code) {\n  let epsgId = 0;\n  for (const re of epsgRegExes) {\n    const match = code.match(re);\n    if (match) {\n      epsgId = parseInt(match[1]);\n      break;\n    }\n  }\n  if (!epsgId) {\n    return null;\n  }\n\n  let number = 0;\n  let north = false;\n  if (epsgId > 32700 && epsgId < 32761) {\n    number = epsgId - 32700;\n  } else if (epsgId > 32600 && epsgId < 32661) {\n    north = true;\n    number = epsgId - 32600;\n  }\n  if (!number) {\n    return null;\n  }\n\n  return {number, north};\n}\n\n/**\n * @param {function(number, number, UTMZone): import('../coordinate.js').Coordinate} transformer The transformer.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../proj.js').TransformFunction} The transform function.\n */\nfunction makeTransformFunction(transformer, zone) {\n  return function (input, output, dimension, stride) {\n    const length = input.length;\n    dimension = dimension > 1 ? dimension : 2;\n    stride = stride ?? dimension;\n    if (!output) {\n      if (dimension > 2) {\n        output = input.slice();\n      } else {\n        output = new Array(length);\n      }\n    }\n    for (let i = 0; i < length; i += stride) {\n      const x = input[i];\n      const y = input[i + 1];\n      const coord = transformer(x, y, zone);\n      output[i] = coord[0];\n      output[i + 1] = coord[1];\n    }\n    return output;\n  };\n}\n\n/**\n * @param {string} code The projection code.\n * @return {import('./Projection.js').default|null} A projection or null if unable to create one.\n */\nexport function makeProjection(code) {\n  const zone = zoneFromCode(code);\n  if (!zone) {\n    return null;\n  }\n  return new Projection({code, units: 'm'});\n}\n\n/**\n * @param {import('./Projection.js').default} projection The projection.\n * @return {import('../proj.js').Transforms|null} The transforms lookup or null if unable to handle projection.\n */\nexport function makeTransforms(projection) {\n  const zone = zoneFromCode(projection.getCode());\n  if (!zone) {\n    return null;\n  }\n\n  return {\n    forward: makeTransformFunction(fromLonLat, zone),\n    inverse: makeTransformFunction(toLonLat, zone),\n  };\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {warn} from './console.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport Projection from './proj/Projection.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {\n  makeProjection as makeUTMProjection,\n  makeTransforms as makeUTMTransforms,\n} from './proj/utm.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * @typedef {Object} Transforms\n * @property {TransformFunction} forward The forward transform (from geographic).\n * @property {TransformFunction} inverse The inverse transform (to geographic).\n */\n\n/**\n * @type {Array<function(Projection): Transforms|null>}\n */\nconst transformFactories = [makeUTMTransforms];\n\n/**\n * @type {Array<function(string): Projection|null>}\n */\nconst projectionFactories = [makeUTMProjection];\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @callback TransformFunction\n * @param {Array<number>} input\n * @param {Array<number>} [output]\n * @param {number} [dimension]\n * @param {number} [stride]\n * @return {Array<number>}\n *\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  if (!(typeof projectionLike === 'string')) {\n    return projectionLike;\n  }\n  const projection = getProj(projectionLike);\n  if (projection) {\n    return projection;\n  }\n  for (const makeProjection of projectionFactories) {\n    const projection = makeProjection(projectionLike);\n    if (projection) {\n      return projection;\n    }\n  }\n  return null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (!toEPSG4326 && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimensions that should be transformed.\n     * @param {number} [stride] Stride.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension, stride) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      stride = stride ?? dimension;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += stride) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = stride; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} source Source Projection object.\n * @param {Projection} destination Destination Projection\n *     object.\n * @return {TransformFunction|null} Transform function.\n */\nexport function getTransformFromProjections(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (transformFunc) {\n    return transformFunc;\n  }\n\n  /**\n   * @type {Transforms|null}\n   */\n  let sourceTransforms = null;\n\n  /**\n   * @type {Transforms|null}\n   */\n  let destinationTransforms = null;\n\n  // lazily add projections if we have supported transforms\n  for (const makeTransforms of transformFactories) {\n    if (!sourceTransforms) {\n      sourceTransforms = makeTransforms(source);\n    }\n    if (!destinationTransforms) {\n      destinationTransforms = makeTransforms(destination);\n    }\n  }\n\n  if (!sourceTransforms && !destinationTransforms) {\n    return null;\n  }\n\n  const intermediateCode = 'EPSG:4326';\n  if (!destinationTransforms) {\n    const toDestination = getTransformFunc(intermediateCode, destinationCode);\n    if (toDestination) {\n      transformFunc = composeTransformFuncs(\n        sourceTransforms.inverse,\n        toDestination,\n      );\n    }\n  } else if (!sourceTransforms) {\n    const fromSource = getTransformFunc(sourceCode, intermediateCode);\n    if (fromSource) {\n      transformFunc = composeTransformFuncs(\n        fromSource,\n        destinationTransforms.forward,\n      );\n    }\n  } else {\n    transformFunc = composeTransformFuncs(\n      sourceTransforms.inverse,\n      destinationTransforms.forward,\n    );\n  }\n\n  if (transformFunc) {\n    addProjection(source);\n    addProjection(destination);\n    addTransformFunc(source, destination, transformFunc);\n  }\n\n  return transformFunc;\n}\n\n/**\n * @param {TransformFunction} t1 The first transform function.\n * @param {TransformFunction} t2 The second transform function.\n * @return {TransformFunction} The composed transform function.\n */\nfunction composeTransformFuncs(t1, t2) {\n  return function (input, output, dimensions, stride) {\n    output = t1(input, output, dimensions, stride);\n    return t2(output, output, dimensions, stride);\n  };\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original). If there\n * is no available transform between the two projection, the function will throw\n * an error.\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  if (!transformFunc) {\n    const sourceCode = get(source).getCode();\n    const destinationCode = get(destination).getCode();\n    throw new Error(\n      `No transform available between ${sourceCode} and ${destinationCode}`,\n    );\n  }\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e5, 1e5, 1e5, 1e5, 2, 2];\n\n/**\n * A matrix string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  return transformString;\n}\n\n/**\n * Create a transform from a CSS transform matrix string.\n * @param {string} cssTransform The CSS string to parse.\n * @return {!Transform} The transform.\n */\nfunction fromString(cssTransform) {\n  const values = cssTransform.substring(7, cssTransform.length - 1).split(',');\n  return values.map(parseFloat);\n}\n\n/**\n * Compare two matrices for equality.\n * @param {!string} cssTransform1 A CSS transform matrix string.\n * @param {!string} cssTransform2 A CSS transform matrix string.\n * @return {boolean} The two matrices are equal.\n */\nexport function equivalent(cssTransform1, cssTransform2) {\n  const mat1 = fromString(cssTransform1);\n  const mat2 = fromString(cssTransform2);\n  for (let i = 0; i < 6; ++i) {\n    if (Math.round((mat1[i] - mat2[i]) * matrixPrecision[i]) !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destinationStride] Stride of destination coordinates; if unspecified, assumed to be 2.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n  destinationStride,\n) {\n  dest = dest ? dest : [];\n  destinationStride = destinationStride ? destinationStride : 2;\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n\n    for (let k = 2; k < destinationStride; k++) {\n      dest[i++] = flatCoordinates[j + k];\n    }\n  }\n\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {abstract} from '../util.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/** @type {import('../coordinate.js').Coordinate} */\nconst tmpPoint = [NaN, NaN];\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return this.closestPointXY(x, y, tmpPoint, Number.MIN_VALUE) === 0;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            const transformed = transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            const projTransform = getTransform(sourceProj, destination);\n            if (projTransform) {\n              return projTransform(transformed, transformed, stride);\n            }\n            return transformed;\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {abstract} from '../util.js';\nimport Geometry from './Geometry.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(\n        this.flatCoordinates,\n        this.flatCoordinates,\n        this.layout.startsWith('XYZ') ? 3 : 2,\n        this.stride,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://web.archive.org/web/20210504233957/http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n\n/**\n * Calculate the intersection point of two line segments.\n * Reference: https://stackoverflow.com/a/72474223/2389327\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment1 The first line segment as an array of two points.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment2 The second line segment as an array of two points.\n * @return {import(\"../../coordinate.js\").Coordinate|undefined} The intersection point or `undefined` if no intersection.\n */\nexport function getIntersectionPoint(segment1, segment2) {\n  const [a, b] = segment1;\n  const [c, d] = segment2;\n  const t =\n    ((a[0] - c[0]) * (c[1] - d[1]) - (a[1] - c[1]) * (c[0] - d[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n  const u =\n    ((a[0] - c[0]) * (a[1] - b[1]) - (a[1] - c[1]) * (a[0] - b[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n\n  // Check if lines actually intersect\n  if (0 <= t && t <= 1 && 0 <= u && u <= 1) {\n    return [a[0] + t * (b[0] - a[0]), a[1] + t * (b[1] - a[1])];\n  }\n  return undefined;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {import('../../extent.js').Extent} [coordinatesExtent] Coordinates extent\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n  coordinatesExtent,\n) {\n  coordinatesExtent =\n    coordinatesExtent ??\n    extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (\n    (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) ||\n    (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3])\n  ) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport {\n  add as addCoordinate,\n  equals,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {VOID} from './functions.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_?.length) {\n      if (this.resolutions_.length === 1) {\n        return this.resolutions_[0];\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z0-9]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/** @type {Object<string|number, number>} */\nexport const fontWeights = {\n  normal: 400,\n  bold: 700,\n};\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: '400',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] =\n        typeof value === 'string' ? value.trim() : value;\n    }\n  }\n  if (isNaN(Number(style.weight)) && style.weight in fontWeights) {\n    style.weight = fontWeights[style.weight];\n  }\n  style.families = style.family\n    .split(/,\\s?/)\n    .map((f) => f.trim().replace(/^['\"]|['\"]$/g, ''));\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/control/Control\n */\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {VOID} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.element?.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.element?.remove();\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_ ?? map.getOverlayContainerStopEvent();\n      if (this.element) {\n        target.appendChild(this.element);\n      }\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {toPromise} from '../functions.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {string|Array<string>|undefined} [attributions] Optional attribution(s) that will always be\n * displayed regardless of the layers rendered.\n * **Caution:** Attributions are rendered dynamically using `innerHTML`, which can lead to potential\n * [**XSS (Cross-Site Scripting)**](https://en.wikipedia.org/wiki/Cross-site_scripting) vulnerabilities.\n * Use this feature only for trusted content\n * or ensure that the content is properly sanitized before inserting it.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {string | Array<string> | undefined}\n     */\n    this.attributions_ = options.attributions;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const layers = this.getMap().getAllLayers();\n    const visibleAttributions = new Set(\n      layers.flatMap((layer) => layer.getAttributions(frameState)),\n    );\n    if (this.attributions_ !== undefined) {\n      Array.isArray(this.attributions_)\n        ? this.attributions_.forEach((item) => visibleAttributions.add(item))\n        : visibleAttributions.add(this.attributions_);\n    }\n\n    if (!this.overrideCollapsible_) {\n      const collapsible = !layers.some(\n        (layer) => layer.getSource()?.getAttributionsCollapsible() === false,\n      );\n      this.setCollapsible(collapsible);\n    }\n    return Array.from(visibleAttributions);\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     */\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * {@link module:ol/control/Zoom~Zoom}\n * {@link module:ol/control/Rotate~Rotate}\n * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n\n  return rootNode instanceof ShadowRoot\n    ? rootNode.host.contains(activeElement)\n    : targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const tabIndexCandidate =\n    rootNode instanceof ShadowRoot ? rootNode.host : targetElement;\n\n  return tabIndexCandidate.hasAttribute('tabindex') ? focus(event) : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    'pointerId' in originalEvent &&\n    originalEvent.button == 0 &&\n    !(WEBKIT && MAC && originalEvent.ctrlKey)\n  );\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvent && pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvt && pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvt && pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  return (\n    'pointerId' in pointerEvent &&\n    pointerEvent.isPrimary &&\n    pointerEvent.button === 0\n  );\n};\n","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/DragPan\n */\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {mouseActionButton} from '../events/condition.js';\nimport RenderBox from '../render/Box.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ?? {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea ?? 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ?? mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ =\n      options.boxEndCondition ?? this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n\n    this.box_.setMap(null);\n    this.startPixel_ = null;\n\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n\n    if (oldMap) {\n      this.box_.setMap(null);\n\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setMap(map);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport DragBox from './DragBox.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * Mutliplier for the DOM_DELTA_LINE delta value.\n * @type {number}\n */\nconst DELTA_LINE_MULTIPLIER = 40;\n\n/**\n * Mutliplier for the DOM_DELTA_PAGE delta value.\n * @type {number}\n */\nconst DELTA_PAGE_MULTIPLIER = 300;\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../pixel.js\").Pixel}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.pixel;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta = wheelEvent.deltaY;\n\n    switch (wheelEvent.deltaMode) {\n      case WheelEvent.DOM_DELTA_LINE:\n        delta *= DELTA_LINE_MULTIPLIER;\n        break;\n      case WheelEvent.DOM_DELTA_PAGE:\n        delta *= DELTA_PAGE_MULTIPLIER;\n        break;\n      default:\n      // pass\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(\n        -delta / this.deltaPerZoom_,\n        this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      );\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(\n      view,\n      delta,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      this.duration_,\n    );\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport Kinetic from '../Kinetic.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * {@link module:ol/interaction/DragRotate~DragRotate}\n * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * {@link module:ol/interaction/DragPan~DragPan}\n * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {abstract} from '../util.js';\nimport LayerProperty from './Property.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Group\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getIntersection} from '../extent.js';\nimport {clear} from '../obj.js';\nimport {getUid} from '../util.js';\nimport BaseLayer from './Base.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {intersects} from '../extent.js';\nimport RenderEventType from '../render/EventType.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n      if (!layerState) {\n        return false;\n      }\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        this.handlePrecompose_,\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} renderEvent Render event\n   * @private\n   */\n  handlePrecompose_(renderEvent) {\n    const layerStatesArray =\n      /** @type {import(\"../render/Event.js\").default} */ (renderEvent)\n        .frameState.layerStatesArray;\n    const layerState = this.getLayerState(false);\n    assert(\n      !layerStatesArray.some(\n        (arrayLayerState) => arrayLayerState.layer === layerState.layer,\n      ),\n      'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n    );\n    layerStatesArray.push(layerState);\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * This will clear the renderer so that a new one can be created next time it is needed\n   */\n  clearRenderer() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.clearRenderer();\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nexport default function quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/color\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {clamp, toFixed} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\nlet colorParseContext;\n/**\n * @return {CanvasRenderingContext2D} The color parse context\n */\nfunction getColorParseContext() {\n  if (!colorParseContext) {\n    colorParseContext = createCanvasContext2D(1, 1, undefined, {\n      willReadFrequently: true,\n      desynchronized: true,\n    });\n  }\n  return colorParseContext;\n}\n\nconst rgbModernRegEx =\n  /^rgba?\\(\\s*(\\d+%?)\\s+(\\d+%?)\\s+(\\d+%?)(?:\\s*\\/\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyAbsoluteRegEx =\n  /^rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyPercentageRegEx =\n  /^rgba?\\(\\s*(\\d+%)\\s*,\\s*(\\d+%)\\s*,\\s*(\\d+%)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst hexRegEx = /^#([\\da-f]{3,4}|[\\da-f]{6}|[\\da-f]{8})$/i;\n\n/**\n * @param {string} s Color component as number or percentage.\n * @param {number} divider Divider for percentage.\n * @return {number} Color component.\n */\nfunction toColorComponent(s, divider) {\n  return s.endsWith('%')\n    ? Number(s.substring(0, s.length - 1)) / divider\n    : Number(s);\n}\n\n/**\n * @param {string} color Color string.\n */\nfunction throwInvalidColor(color) {\n  throw new Error('failed to parse \"' + color + '\" as color');\n}\n\n/**\n * @param {string} color Color string.\n * @return {Color} RGBa color array.\n */\nfunction parseRgba(color) {\n  // Fast lane for rgb(a) colors\n  if (color.toLowerCase().startsWith('rgb')) {\n    const rgb =\n      color.match(rgbLegacyAbsoluteRegEx) ||\n      color.match(rgbModernRegEx) ||\n      color.match(rgbLegacyPercentageRegEx);\n    if (rgb) {\n      const alpha = rgb[4];\n      const rgbDivider = 100 / 255;\n      return [\n        clamp((toColorComponent(rgb[1], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[2], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[3], rgbDivider) + 0.5) | 0, 0, 255),\n        alpha !== undefined ? clamp(toColorComponent(alpha, 100), 0, 1) : 1,\n      ];\n    }\n    throwInvalidColor(color);\n  }\n  // Fast lane for hex colors (also with alpha)\n  if (color.startsWith('#')) {\n    if (hexRegEx.test(color)) {\n      const hex = color.substring(1);\n      const step = hex.length <= 4 ? 1 : 2;\n      const colorFromHex = [0, 0, 0, 255];\n      for (let i = 0, ii = hex.length; i < ii; i += step) {\n        let colorComponent = parseInt(hex.substring(i, i + step), 16);\n        if (step === 1) {\n          colorComponent += colorComponent << 4;\n        }\n        colorFromHex[i / step] = colorComponent;\n      }\n      colorFromHex[3] = colorFromHex[3] / 255;\n      return colorFromHex;\n    }\n    throwInvalidColor(color);\n  }\n  // Use canvas color serialization to parse the color into hex or rgba\n  // See https://www.w3.org/TR/2021/SPSD-2dcontext-20210128/#serialization-of-a-color\n  const context = getColorParseContext();\n  context.fillStyle = '#abcdef';\n  let invalidCheckFillStyle = context.fillStyle;\n  context.fillStyle = color;\n  if (context.fillStyle === invalidCheckFillStyle) {\n    context.fillStyle = '#fedcba';\n    invalidCheckFillStyle = context.fillStyle;\n    context.fillStyle = color;\n    if (context.fillStyle === invalidCheckFillStyle) {\n      throwInvalidColor(color);\n    }\n  }\n  const colorString = context.fillStyle;\n  if (colorString.startsWith('#') || colorString.startsWith('rgba')) {\n    return parseRgba(colorString);\n  }\n  context.clearRect(0, 0, 1, 1);\n  context.fillRect(0, 0, 1, 1);\n  const colorFromImage = Array.from(context.getImageData(0, 0, 1, 1).data);\n  colorFromImage[3] = toFixed(colorFromImage[3] / 255, 3);\n  return colorFromImage;\n}\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n// The functions b1, b2, a1, a2, rgbaToLcha and lchaToRgba below are adapted from\n// https://stackoverflow.com/a/67219995/2389327\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b1(v) {\n  return v > 0.0031308 ? Math.pow(v, 1 / 2.4) * 269.025 - 14.025 : v * 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b2(v) {\n  return v > 0.2068965 ? Math.pow(v, 3) : (v - 4 / 29) * (108 / 841);\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a1(v) {\n  return v > 10.314724 ? Math.pow((v + 14.025) / 269.025, 2.4) : v / 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a2(v) {\n  return v > 0.0088564 ? Math.pow(v, 1 / 3) : v / (108 / 841) + 4 / 29;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const r = a1(color[0]);\n  const g = a1(color[1]);\n  const b = a1(color[2]);\n  const y = a2(r * 0.222488403 + g * 0.716873169 + b * 0.06060791);\n  const l = 500 * (a2(r * 0.452247074 + g * 0.399439023 + b * 0.148375274) - y);\n  const q = 200 * (y - a2(r * 0.016863605 + g * 0.117638439 + b * 0.865350722));\n  const h = Math.atan2(q, l) * (180 / Math.PI);\n  return [\n    116 * y - 16,\n    Math.sqrt(l * l + q * q),\n    h < 0 ? h + 360 : h,\n    color[3],\n  ];\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const l = (color[0] + 16) / 116;\n  const c = color[1];\n  const h = (color[2] * Math.PI) / 180;\n  const y = b2(l);\n  const x = b2(l + (c / 500) * Math.cos(h));\n  const z = b2(l - (c / 200) * Math.sin(h));\n  const r = b1(x * 3.021973625 - y * 1.617392459 - z * 0.404875592);\n  const g = b1(x * -0.943766287 + y * 1.916279586 + z * 0.027607165);\n  const b = b1(x * 0.069407491 - y * 0.22898585 + z * 1.159737864);\n  return [\n    clamp((r + 0.5) | 0, 0, 255),\n    clamp((g + 0.5) | 0, 0, 255),\n    clamp((b + 0.5) | 0, 0, 255),\n    color[3],\n  ];\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throwInvalidColor(s);\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throwInvalidColor(s);\n    }\n  }\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch {\n    return false;\n  }\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   * `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *   * `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *     Note that for WebGL layers, the hardcoded value `-9999999` is used to distinguish when a property is not defined.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {boolean} mapState The style uses the map state (view state or time elapsed).\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    mapState: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Time]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type {ArgValidator}\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesMapState(encoded, returnType, context) {\n  context.mapState = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  fromString,\n  lchaToRgba,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length - 1; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return lchaToRgba(lcha);\n}\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport ImageState from './ImageState.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {Loader|null}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              (CREATE_IMAGE_BITMAP && image instanceof ImageBitmap) ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 1024;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `1024`. Change this value when\n   * your map uses more than 1024 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport {decodeFallback} from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport EventTarget from '../events/Target.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const ctx = createCanvasContext2D(\n      Math.ceil(image.width * pixelRatio),\n      Math.ceil(image.height * pixelRatio),\n    );\n    const canvas = ctx.canvas;\n\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {toString} from './color.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {fontWeights, getFontParameters} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\nconst genericFontFamilies = new Set([\n  'serif',\n  'sans-serif',\n  'monospace',\n  'cursive',\n  'fantasy',\n  'system-ui',\n  'ui-serif',\n  'ui-sans-serif',\n  'ui-monospace',\n  'ui-rounded',\n  'emoji',\n  'math',\n  'fangsong',\n]);\n\n/**\n * @param {string} style Css font-style\n * @param {string} weight Css font-weight\n * @param {string} family Css font-family\n * @return {string} Font key.\n */\nfunction getFontKey(style, weight, family) {\n  return `${style} ${weight} 16px \"${family}\"`;\n}\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  let timeout, fontFaceSet;\n\n  /**\n   * @param {string} fontSpec Css font spec\n   * @return {Promise<boolean>} Font with style and weight is available\n   */\n  async function isAvailable(fontSpec) {\n    await fontFaceSet.ready;\n    const fontFaces = await fontFaceSet.load(fontSpec);\n    if (fontFaces.length === 0) {\n      return false;\n    }\n    const font = getFontParameters(fontSpec);\n    const checkFamily = font.families[0].toLowerCase();\n    const checkWeight = font.weight;\n    return fontFaces.some(\n      /**\n       * @param {import('../css.js').FontParameters} f Font.\n       * @return {boolean} Font matches.\n       */\n      (f) => {\n        const family = f.family.replace(/^['\"]|['\"]$/g, '').toLowerCase();\n        const weight = fontWeights[f.weight] || f.weight;\n        return (\n          family === checkFamily &&\n          f.style === font.style &&\n          weight == checkWeight\n        );\n      },\n    );\n  }\n\n  async function check() {\n    await fontFaceSet.ready;\n    let done = true;\n    const checkedFontsProperties = checkedFonts.getProperties();\n    const fonts = Object.keys(checkedFontsProperties).filter(\n      (key) => checkedFontsProperties[key] < retries,\n    );\n    for (let i = fonts.length - 1; i >= 0; --i) {\n      const font = fonts[i];\n      let currentRetries = checkedFontsProperties[font];\n      if (currentRetries < retries) {\n        if (await isAvailable(font)) {\n          clear(textHeights);\n          checkedFonts.set(font, retries);\n        } else {\n          currentRetries += 10;\n          checkedFonts.set(font, currentRetries, true);\n          if (currentRetries < retries) {\n            done = false;\n          }\n        }\n      }\n    }\n    timeout = undefined;\n    if (!done) {\n      timeout = setTimeout(check, 100);\n    }\n  }\n\n  return async function (fontSpec) {\n    if (!fontFaceSet) {\n      fontFaceSet = WORKER_OFFSCREEN_CANVAS ? self.fonts : document.fonts;\n    }\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    let needCheck = false;\n    for (const family of families) {\n      if (genericFontFamilies.has(family)) {\n        continue;\n      }\n      const key = getFontKey(font.style, font.weight, family);\n      if (checkedFonts.get(key) !== undefined) {\n        continue;\n      }\n      checkedFonts.set(key, 0, true);\n      needCheck = true;\n    }\n    if (needCheck) {\n      clearTimeout(timeout);\n      timeout = setTimeout(check, 100);\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/Image\n */\nimport {toSize} from '../size.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\nimport IconImage from './IconImage.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport ImageStyle from './Image.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    const fillKey = this.fill_?.getKey();\n    const cacheKey =\n      `${pixelRatio},${this.angle_},${this.radius},${this.radius2_},${this.points_},${fillKey}` +\n      Object.values(this.renderOptions_).join(',');\n    let image = /** @type {HTMLCanvasElement} */ (\n      iconImageCache.get(cacheKey, null, null)?.getImage(1)\n    );\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const size = Math.ceil(renderOptions.size * pixelRatio);\n      const context = createCanvasContext2D(size, size);\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      iconImageCache.set(\n        cacheKey,\n        null,\n        null,\n        new IconImage(image, undefined, null, ImageState.LOADED, null),\n      );\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {string} Key of the fill for cache lookup.\n   */\n  getKey() {\n    const fill = this.getColor();\n    if (!fill) {\n      return '';\n    }\n    return fill instanceof CanvasPattern || fill instanceof CanvasGradient\n      ? getUid(fill)\n      : typeof fill === 'object' && 'src' in fill\n        ? fill.src + ':' + fill.offset\n        : asArray(fill).toString();\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Icon\n */\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\nimport ImageStyle from './Image.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport {assert} from '../asserts.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * **declutter**: Overlapping symbols and text are decluttered.\n * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport {toSize} from '../size.js';\nimport Fill from './Fill.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {boolean} [keepUpright=true] Whether the text can be rotated 180° to prevent being rendered upside down.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.keepUpright_ = options.keepUpright;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      keepUpright: this.getKeepUpright(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Determine whether the text can be rendered upside down.\n   * @return {boolean|undefined} Keep text upright.\n   * @api\n   */\n  getKeepUpright() {\n    return this.keepUpright_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set whether the text can be rendered upside down.\n   *\n   * @param {boolean} keepUpright Keep text upright.\n   * @api\n   */\n  setKeepUpright(keepUpright) {\n    this.keepUpright_ = keepUpright;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/render/canvas/style\n */\n\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluateKeepUpright = booleanEvaluator(\n    flatStyle,\n    prefix + 'keep-upright',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    if (evaluateKeepUpright) {\n      text.setKeepUpright(evaluateKeepUpright(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport RBush from 'rbush';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport Layer from './Layer.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/VectorLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {import(\"../render.js\").OrderFunction|null|undefined} Render order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n\n  /**\n   * @param {boolean|string|number} declutter Declutter images and text.\n   * @api\n   */\n  setDeclutter(declutter) {\n    this.declutter_ = declutter ? String(declutter) : undefined;\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type {Array<import(\"../style/flat.js\").Rule>}\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {wrapX} from '../coordinate.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {inView} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport ObjectEventType from '../ObjectEventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {replaceChildren} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport {inView} from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport MapRenderer from './Map.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @private\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText,\n      map,\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(\n      (a, b) => a.zIndex - b.zIndex,\n    );\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/Map\n */\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {equals} from './array.js';\nimport {assert} from './asserts.js';\nimport {warn} from './console.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport Layer from './layer/Layer.js';\nimport PointerEventType from './pointer/EventType.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport {hasArea} from './size.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {getUid} from './util.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default<import('./render/canvas/Executor.js').DeclutterEntry>>|null} declutter\n * Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n *  `tabindex` atribute must be set on the custom element's host element.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @private\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {PointerEvent|KeyboardEvent|WheelEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = mapBrowserEvent.originalEvent;\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n\n      const currentDoc =\n        rootNode instanceof ShadowRoot\n          ? rootNode.host === target\n            ? rootNode.host.ownerDocument\n            : rootNode\n          : rootNode === doc\n            ? doc.documentElement\n            : rootNode;\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !currentDoc.contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    if (frameState) {\n      for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n        postRenderFunctions[i](this, frameState);\n      }\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      this.viewport_.remove();\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      let keyboardEventTarget;\n      if (!this.keyboardEventTarget_) {\n        // check if map target is in shadowDOM, if yes use host element as target\n        const targetRoot = targetElement.getRootNode();\n        const targetCandidate =\n          targetRoot instanceof ShadowRoot ? targetRoot.host : targetElement;\n        keyboardEventTarget = targetCandidate;\n      } else {\n        keyboardEventTarget = this.keyboardEventTarget_;\n      }\n\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    if (!this.frameState_) {\n      return;\n    }\n    const layerStates = this.frameState_.layerStatesArray;\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      (this.hasListener(MapEventType.LOADSTART) ||\n        this.hasListener(MapEventType.LOADEND) ||\n        this.hasListener(RenderEventType.RENDERCOMPLETE)) &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n   *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n   *  `tabindex` atribute must be set on the custom element's host element.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>|null} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [Math.max(0, width), Math.max(0, height)];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          this.push_(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          this.push_(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @param {...*} args Arguments to push to the instructions array.\n   * @private\n   */\n  push_(...args) {\n    const instructions = this.instructions_;\n    const index = this.zIndex + this.offset_;\n    if (!instructions[index]) {\n      instructions[index] = [];\n    }\n    instructions[index].push(...args);\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.push_(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.push_(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/renderer/Layer\n */\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  equivalent,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport LayerRenderer from '../Layer.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS transform matrix.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && equivalent(context.canvas.style.transform, transform)) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport CanvasLayerRenderer from './Layer.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../Image.js\").default}\n     */\n    this.image = null;\n  }\n\n  /**\n   * @return {import('../../DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return !this.image ? null : this.image.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection),\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection,\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image = null;\n          }\n        }\n      } else {\n        this.image = null;\n      }\n    }\n\n    return !!this.image;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image.getExtent();\n    const img = this.image.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth),\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight),\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const image = this.image;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const [imageResolutionX, imageResolutionY] = Array.isArray(imageResolution)\n      ? imageResolution\n      : [imageResolution, imageResolution];\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scaleX =\n      (pixelRatio * imageResolutionX) / (viewResolution * imagePixelRatio);\n    const scaleY =\n      (pixelRatio * imageResolutionY) / (viewResolution * imagePixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const context = this.getRenderContext(frameState);\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection,\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scaleX,\n      scaleY,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolutionX,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolutionY,\n    );\n\n    this.renderedResolution = (imageResolutionY * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      if (opacity !== 1) {\n        context.save();\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.restore();\n      }\n    }\n    this.postRender(this.context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/layer/Image\n */\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\nimport BaseImageLayer from './BaseImage.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {abstract} from './util.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n    this.setState(TileState.EMPTY);\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state === TileState.EMPTY) {\n      // no more state changes\n      return;\n    }\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.release();\n    super.disposeInternal();\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/ImageTile\n */\nimport {listenImage} from './Image.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenImage_();\n    this.image_ = null;\n    super.disposeInternal();\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {\n  createTransformFromCoordinateTransform,\n  getTransform,\n  transform,\n} from '../proj.js';\nimport {apply as applyMatrix} from '../transform.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   * @param {import(\"../transform.js\").Transform} [sourceMatrix] Source transform matrix.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n    sourceMatrix,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = sourceMatrix\n      ? createTransformFromCoordinateTransform((input) =>\n          applyMatrix(\n            sourceMatrix,\n            transform(input, this.targetProj_, this.sourceProj_),\n          ),\n        )\n      : getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Tile\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {releaseCanvas} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport Disposable from '../Disposable.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  deleteOldest() {\n    const entry = this.pop();\n    if (entry instanceof Disposable) {\n      entry.dispose();\n    }\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache. When the cache entry is a {@link module:ol/Disposable~Disposable},\n   * the entry will be disposed.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    while (this.oldest_) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport DataTile, {asImageLike} from '../../DataTile.js';\nimport ImageTile from '../../ImageTile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport {toSize} from '../../size.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport {createOrUpdate as createTileCoord, getKeyZXY} from '../../tilecoord.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {getUid} from '../../util.js';\nimport CanvasLayerRenderer from './Layer.js';\n\n/**\n * @param {import(\"../../source/Tile.js\").default} source The tile source.\n * @param {string} sourceKey The source key.\n * @param {number} z The tile z level.\n * @param {number} x The tile x level.\n * @param {number} y The tile y level.\n * @return {string} The cache key.\n */\nfunction getCacheKey(source, sourceKey, z, x, y) {\n  return `${getUid(source)},${sourceKey},${getKeyZXY(z, x, y)}`;\n}\n\n/**\n * @typedef {Object<number, Set<import(\"../../Tile.js\").default>>} TileLookup\n */\n\n/**\n * Add a tile to the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was added to the lookup.\n */\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\n\n/**\n * Remove a tile from the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was removed from the lookup.\n */\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=512] The cache size.\n */\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer);\n\n    options = options || {};\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default|null}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedSourceKey_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedSourceRevision_;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tempExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../Tile.js\").default>}\n     * @private\n     */\n    this.tileCache_ = new LRUCache(cacheSize);\n\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n\n  /**\n   * @return {LRUCache} Tile cache.\n   */\n  getTileCache() {\n    return this.tileCache_;\n  }\n\n  /**\n   * Get a tile from the cache or create one if needed.\n   *\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource, tileSource.getKey(), z, x, y);\n\n    /** @type {import(\"../../Tile.js\").default} */\n    let tile;\n\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(\n        z,\n        x,\n        y,\n        frameState.pixelRatio,\n        frameState.viewState.projection,\n      );\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      /**\n       * @type {import('../../DataTile.js').ImageLike}\n       */\n      let image;\n      if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n        image = tile.getImage();\n      } else if (tile instanceof DataTile) {\n        image = asImageLike(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    if (!this.renderedProjection) {\n      this.renderedProjection = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.renderedProjection) {\n      this.tileCache_.clear();\n      this.renderedProjection = frameState.viewState.projection;\n    }\n\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = source.getRevision();\n    if (!this.renderedSourceRevision_) {\n      this.renderedSourceRevision_ = sourceRevision;\n    } else if (this.renderedSourceRevision_ !== sourceRevision) {\n      this.renderedSourceRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    const rotation = viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(\n        this.getLayer().getSource(),\n        staleKeys[i],\n        z,\n        x,\n        y,\n      );\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.peek(cacheKey);\n        if (tile.getState() === TileState.LOADED) {\n          tile.endTransition(getUid(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(source, sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.peek(cacheKey);\n          if (tile.getState() === TileState.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * Render the layer.\n   *\n   * The frame rendering logic has three parts:\n   *\n   *  1. Enqueue tiles\n   *  2. Find alt tiles for those that are not yet loaded\n   *  3. Render loaded tiles\n   *\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    this.renderComplete = true;\n\n    /**\n     * TODO:\n     *  maybe skip transition when not fully opaque\n     *  decide if this.renderComplete is useful\n     */\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = getIntersection(\n        frameExtent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    /**\n     * @type {TileLookup}\n     */\n    const tilesByZ = {};\n\n    this.renderedTiles.length = 0;\n\n    /**\n     * Part 1: Enqueue tiles\n     */\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          renderExtent,\n          z - 1,\n          tilesByZ,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    if (!(z in tilesByZ)) {\n      return this.container;\n    }\n\n    /**\n     * Part 2: Find alt tiles for those that are not yet loaded\n     */\n\n    const uid = getUid(this);\n    const time = frameState.time;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (tileState === TileState.EMPTY) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileState === TileState.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      if (tileState !== TileState.ERROR) {\n        this.renderComplete = false;\n      }\n\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        // use the stale tile before the new tile's transition has completed\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tilesByZ,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tilesByZ,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Part 3: Render loaded tiles\n     */\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(ascending);\n\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== TileState.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n\n        let contextSaved = false;\n\n        // Clip mask for regions in this tile that already filled by a higher z tile\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if (\n              intersects(\n                [x, y, x + w, y + h],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n\n        // TODO: decide if this is necessary\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (this.renderComplete) {\n      /**\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = (map, frameState) => {\n        const tileSourceKey = getUid(tileSource);\n        const wantedTiles = frameState.wantedTiles[tileSourceKey];\n        const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n        this.updateCacheSize(tilesCount);\n        this.tileCache_.expireCache();\n      };\n\n      frameState.postRenderFunctions.push(postRenderFunction);\n    }\n\n    return this.container;\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   */\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(\n      this.tileCache_.highWaterMark,\n      tileCount * 2,\n    );\n  }\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @protected\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof DataTile) {\n      image = asImageLike(tile.getData());\n      if (!image) {\n        throw new Error('Rendering array data is not yet supported');\n      }\n    } else {\n      image = this.getTileImage(\n        /** @type {import(\"../../ImageTile.js\").default} */ (tile),\n      );\n    }\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=512] The internal tile cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * @return {number|undefined} The suggested cache size\n   * @protected\n   */\n  getCacheSize() {\n    return this.cacheSize_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport BaseTileLayer from './BaseTile.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} [TileSourceType=import(\"../source/Tile.js\").default]\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this, {\n      cacheSize: this.getCacheSize(),\n    });\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport Relationship from '../../extent/Relationship.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import('../canvas.js').FillStrokeState} [state] State.\n   * @return {import('../canvas.js').FillStrokeState} State.\n   */\n  fillStyleToState(\n    fillStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {import(\"../canvas.js\").FillStrokeState} State.\n   */\n  strokeStyleToState(\n    strokeStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    this.fillStyleToState(fillStyle, state);\n    this.strokeStyleToState(strokeStyle, state);\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      state.lineDash ? this.applyPixelRatio(state.lineDash) : null,\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      this.instructions.push(createFill.call(this, state));\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      applyStroke.call(this, state);\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport {containsCoordinate} from '../../extent.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @override\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport {snap} from '../../geom/flat/simplify.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    this.updateFillStyle(state, this.createFill);\n    this.updateStrokeStyle(state, this.applyStroke);\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textKeepUpright_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      const backgroundFill = textState.backgroundFill\n        ? this.createFill(this.fillStyleToState(textState.backgroundFill))\n        : null;\n      const backgroundStroke = textState.backgroundStroke\n        ? this.createStroke(this.strokeStyleToState(textState.backgroundStroke))\n        : null;\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        backgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const hitDetectionBackgroundFill = backgroundFill\n        ? backgroundFill.slice(0)\n        : null;\n      if (hitDetectionBackgroundFill) {\n        hitDetectionBackgroundFill[1] = defaultFillStyle;\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        hitDetectionBackgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textKeepUpright = textStyle.getKeepUpright();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textKeepUpright_ =\n        textKeepUpright === undefined ? true : textKeepUpright;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @param {boolean} keepUpright Whether the text needs to be kept upright\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n  keepUpright = true,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright if the option is selected\n  let reverse = false;\n  if (keepUpright) {\n    if (rotation) {\n      const flat = [beginX, beginY, endX, endY];\n      rotate(flat, 0, 4, 2, rotation, flat, flat);\n      reverse = flat[0] > flat[2];\n    } else {\n      reverse = beginX > endX;\n    }\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport {equals} from '../../array.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\n\n/**\n * @typedef {import('../../structs/RBush.js').Entry<import('../../Feature.js').FeatureLike>} DeclutterEntry\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {DeclutterEntry} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {DeclutterEntry} Declutter rbush entry.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\n/**\n * Converts rich text to plain text for text along lines.\n * @param {string} result The resulting plain text.\n * @param {string} part Item of the rich text array.\n * @param {number} index Index of the item in the rich text array.\n * @return {string} The resulting plain text.\n */\nfunction richTextToPlainText(result, part, index) {\n  if (index % 2 === 0) {\n    result += part;\n  }\n  return result;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = Array.isArray(text)\n      ? text\n      : String(text).split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      context.fillStyle = /** @type {string} */ (fillInstruction[1]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    if (!instruction[1]) {\n      return;\n    }\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFillInstruction, backgroundStrokeInstruction;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFillInstruction = /** @type {Array<*>} */ (\n              instruction[17]\n            );\n            backgroundStrokeInstruction = /** @type {Array<*>} */ (\n              instruction[18]\n            );\n          } else {\n            padding = defaultPadding;\n            backgroundFillInstruction = null;\n            backgroundStrokeInstruction = null;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              !!backgroundFillInstruction || !!backgroundStrokeInstruction,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFillInstruction,\n              backgroundStrokeInstruction,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string|Array<string>} */ (instruction[11]);\n          if (Array.isArray(text)) {\n            //FIXME Add support for rich text along lines\n            text = text.reduce(richTextToPlainText, '');\n          }\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textKeepUpright = /** @type {boolean} */ (instruction[15]);\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n              textKeepUpright,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport {ascending, descending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport Executor from './Executor.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @private\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      // Refrain from adding a 'willReadFrequently' hint in the options here.\n      // While it will remove the \"Canvas2D: Multiple readback operations using\n      // getImageData are faster with the willReadFrequently attribute set\n      // to true\" warnings in the console, it makes hitDetection extremely\n      // slow in Chrome when there are many features on the map\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /** @type {import(\"../../extent.js\").Extent|undefined} */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    /** @type {import(\"../canvas.js\").BuilderType} */\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default<import('./Executor.js').DeclutterEntry>|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(declutterTree ? descending : ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      const replays = this.executorsByZIndex_[zIndexKey];\n      for (let j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + ALL.indexOf(builderType);\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {toFixed} from '../../math.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   * @override\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   * @override\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   * @override\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   * @override\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport {ascending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {clamp} from '../../math.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {Icon} from '../../style.js';\nimport CanvasImmediateRenderer from './Immediate.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport RenderEventType from '../../render/EventType.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  getTolerance as getRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.clipped_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {import(\"../../render.js\").OrderFunction|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedFrameDeclutter_;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      let transform = this.getRenderTransform(\n        center,\n        resolution,\n        0,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      if (frameState.declutter) {\n        transform = transform.slice(0);\n      }\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1 && this.targetContext_) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    if (this.clipped_) {\n      this.context.restore();\n    }\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const viewState = frameState.viewState;\n\n    this.prepareContainer(frameState, target);\n    const context = this.context;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return this.container;\n      }\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    this.clipped_ = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      this.clipped_ = render && !containsExtent(layerExtent, frameState.extent);\n      if (this.clipped_) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (!frameState.declutter && this.clipped_) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (\n        this.frameState &&\n        !this.hitDetectionImageData_ &&\n        !this.animatingOrInteracting_\n      ) {\n        const size = this.frameState.size.slice();\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const declutter = this.getLayer().getDeclutter();\n    return this.replayGroup_.forEachFeatureAtCoordinate(\n      coordinate,\n      resolution,\n      rotation,\n      hitTolerance,\n      featureCallback,\n      declutter\n        ? frameState.declutter?.[declutter]?.all().map((item) => item.value)\n        : null,\n    );\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      this.renderedFrameDeclutter_ === !!frameState.declutter &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedFrameDeclutter_ = !!frameState.declutter;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\nimport BaseVectorLayer from './BaseVector.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/featureloader\n */\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), a\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").FeatureLike]\n * @typedef {(\n *           extent: import(\"./extent.js\").Extent,\n *           resolution: number,\n *           projection: import(\"./proj/Projection.js\").default,\n *           success?: (features: Array<FeatureType>) => void,\n *           failure?: () => void) => void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector.js\").default<FeatureType>}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      (features, dataProjection) => {\n        this.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      () => {\n        this.changed();\n        if (failure !== undefined) {\n          failure();\n        }\n      },\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport {assert} from './asserts.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius in units of the projection.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout,\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent,\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  /**\n   * @override\n   */\n  getCoordinates() {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center),\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport Geometry from './Geometry.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(geometries[i], EventType.CHANGE, this.changed, this),\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(\n      cloneGeometries(this.geometries_),\n    );\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance,\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive(),\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(\n        simplifiedGeometries,\n      );\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  return geometries.map((geometry) => geometry.clone());\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n      this.getExtent(),\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * Return the sum of all line string lengths\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    const ends = this.ends_;\n    let start = 0;\n    let length = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      length += lineStringLength(\n        this.flatCoordinates,\n        start,\n        ends[i],\n        this.stride,\n      );\n      start = ends[i];\n    }\n    return length;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {extend} from '../array.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {import(\"rbush\").BBox & {value: T}} Entry\n * @template T\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template {Object} T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     * @type {RBush_<Entry<T>>}\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry<T>>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry<T>} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry<T>} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {import(\"rbush\").BBox} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   * @private\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush<T>} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * a simple string (e.g. `'© Acme Inc.'`)\n * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty} from '../obj.js';\nimport RenderFeature from '../render/Feature.js';\nimport RBush from '../structs/RBush.js';\nimport {getUid} from '../util.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureType} [feature] Feature.\n   * @param {Array<FeatureType>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureType|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureType>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent<FeatureType>, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader<FeatureType>} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader<import(\"../Feature.js\").FeatureLike>}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format || null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, this.format_);\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if a {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else if (!Array.isArray(indexedFeature)) {\n          this.idIndex_[id] = [indexedFeature, feature];\n        } else {\n          indexedFeature.push(feature);\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type {Array<FeatureType>} */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach((feature) => {\n          this.removeFeatureInternal(feature);\n        });\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with a {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    /** @type {Array<FeatureType>} */\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType|null} Closest feature (or `null` if none found).\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<FeatureType>|null}} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          /**\n           * @param {Array<FeatureType>} features Loaded features\n           */\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const obj = loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        return object;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   * @api\n   */\n  removeFeatures(features) {\n    let removed = false;\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      removed = this.removeFeatureInternal(features[i]) || removed;\n    }\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const removed = this.removeFeatureInternal(feature);\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} True if the feature was removed, false if it was not found.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (!(featureKey in this.uidIndex_)) {\n      return false;\n    }\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    featureChangeKeys?.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      const idString = id.toString();\n      const indexedFeature = this.idIndex_[idString];\n      if (indexedFeature === feature) {\n        delete this.idIndex_[idString];\n      } else if (Array.isArray(indexedFeature)) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n        if (indexedFeature.length === 1) {\n          this.idIndex_[idString] = indexedFeature[0];\n        }\n      }\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return true;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        break;\n      }\n    }\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n\n  /**\n   * @param {boolean} overlaps The source can have overlapping geometries.\n   */\n  setOverlaps(overlaps) {\n    this.overlaps_ = overlaps;\n    this.changed();\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/uri\n */\n\nimport {modulo} from './math.js';\nimport {hashZXY} from './tilecoord.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/vec/mat4\n */\n\n/** @typedef {Array<number>} Mat4 */\n\n/**\n * @return {Mat4} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Mat4} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Mat4} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @param {Mat4} [out] mat4 frustum matrix will be written into\n * @return {Mat4} out\n */\nexport function orthographic(left, right, bottom, top, near, far, out) {\n  out = out ?? create();\n  const lr = 1 / (left - right),\n    bt = 1 / (bottom - top),\n    nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3\n *\n * @param {Mat4} m The matrix to scale.\n * @param {number} x How much to scale in the x direction.\n * @param {number} y How much to scale in the y direction.\n * @param {number} z How much to scale in the z direction.\n * @param {Mat4} [out] The matrix to write to.\n * @return {Mat4} out\n */\nexport function scale(m, x, y, z, out) {\n  out = out ?? create();\n  out[0] = m[0] * x;\n  out[1] = m[1] * x;\n  out[2] = m[2] * x;\n  out[3] = m[3] * x;\n  out[4] = m[4] * y;\n  out[5] = m[5] * y;\n  out[6] = m[6] * y;\n  out[7] = m[7] * y;\n  out[8] = m[8] * z;\n  out[9] = m[9] * z;\n  out[10] = m[10] * z;\n  out[11] = m[11] * z;\n  out[12] = m[12];\n  out[13] = m[13];\n  out[14] = m[14];\n  out[15] = m[15];\n  return out;\n}\n\n/**\n * Translate a matrix.\n *\n * @param {Mat4} m the matrix to translate\n * @param {number} x How much to translate in the x direction.\n * @param {number} y How much to translate in the y direction.\n * @param {number} z How much to translate in the z direction.\n * @param {Mat4} [out] the receiving matrix\n * @return {Mat4} out\n */\nexport function translate(m, x, y, z, out) {\n  out = out ?? create();\n  let a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23;\n\n  if (m === out) {\n    out[12] = m[0] * x + m[4] * y + m[8] * z + m[12];\n    out[13] = m[1] * x + m[5] * y + m[9] * z + m[13];\n    out[14] = m[2] * x + m[6] * y + m[10] * z + m[14];\n    out[15] = m[3] * x + m[7] * y + m[11] * z + m[15];\n  } else {\n    a00 = m[0];\n    a01 = m[1];\n    a02 = m[2];\n    a03 = m[3];\n    a10 = m[4];\n    a11 = m[5];\n    a12 = m[6];\n    a13 = m[7];\n    a20 = m[8];\n    a21 = m[9];\n    a22 = m[10];\n    a23 = m[11];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n\n    out[12] = a00 * x + a10 * y + a20 * z + m[12];\n    out[13] = a01 * x + a11 * y + a21 * z + m[13];\n    out[14] = a02 * x + a12 * y + a22 * z + m[14];\n    out[15] = a03 * x + a13 * y + a23 * z + m[15];\n  }\n\n  return out;\n}\n\n/**\n * @param {number} x x translation.\n * @param {number} y y translation.\n * @param {number} z z translation.\n * @param {Mat4} [out] optional matrix to store result\n * @return {Mat4} out\n */\nexport function translation(x, y, z, out) {\n  out = out ?? create();\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = x;\n  out[13] = y;\n  out[14] = z;\n  out[15] = 1;\n\n  return out;\n}\n","import * as mat4 from '../vec/mat4.js';\n\n/**\n * @module ol/webgl/Canvas\n */\n\nconst VERTEX_SHADER = `\n  attribute vec4 a_position;\n  attribute vec4 a_texcoord;\n\n  uniform mat4 u_matrix;\n  uniform mat4 u_textureMatrix;\n\n  varying vec2 v_texcoord;\n\n  void main() {\n    gl_Position = u_matrix * a_position;\n    vec2 texcoord = (u_textureMatrix * a_texcoord).xy;\n    v_texcoord = texcoord;\n  }\n`;\n\nconst FRAGMENT_SHADER = `\n  precision mediump float;\n\n  varying vec2 v_texcoord;\n\n  uniform sampler2D u_texture;\n\n  void main() {\n    if (\n      v_texcoord.x < 0.0 ||\n      v_texcoord.y < 0.0 ||\n      v_texcoord.x > 1.0 ||\n      v_texcoord.y > 1.0\n    ) {\n      discard;\n    }\n    gl_FragColor = texture2D(u_texture, v_texcoord);\n  }\n`;\n\n/** @typedef {import(\"../transform.js\").Transform} Matrix */\n\n/**\n * Canvas-like operations implemented in webgl.\n */\nexport class Canvas {\n  /**\n   * @param {WebGLRenderingContext} gl Context to render in.\n   */\n  constructor(gl) {\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = gl;\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.program_ = createProgram(gl, FRAGMENT_SHADER, VERTEX_SHADER);\n\n    this.positionLocation = gl.getAttribLocation(this.program_, 'a_position');\n    this.texcoordLocation = gl.getAttribLocation(this.program_, 'a_texcoord');\n\n    this.matrixLocation = gl.getUniformLocation(this.program_, 'u_matrix');\n    this.textureMatrixLocation = gl.getUniformLocation(\n      this.program_,\n      'u_textureMatrix',\n    );\n    this.textureLocation = gl.getUniformLocation(this.program_, 'u_texture');\n\n    this.positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n\n    this.positions = [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1];\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(this.positions),\n      gl.STATIC_DRAW,\n    );\n\n    this.texcoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n\n    this.texcoords = [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1];\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(this.texcoords),\n      gl.STATIC_DRAW,\n    );\n  }\n\n  /**\n   * 2dContext drawImage call implemented in webgl.\n   * Unlike images, textures do not have a width and height associated\n   * with them so we'll pass in the width and height of the texture.\n   *\n   * @param {WebGLTexture} tex Image to draw.\n   * @param {number} texWidth Image width.\n   * @param {number} texHeight Image height.\n   * @param {number} srcX Top-left x-point to read src image.\n   * @param {number} srcY Top-left y-point to read src image.\n   * @param {number} [srcWidth] Width of source to read.\n   * @param {number} [srcHeight] Height of source to read.\n   * @param {number} [dstX] Top-left x-point of destination.\n   * @param {number} [dstY] Top-left y-point of destination.\n   * @param {number} [dstWidth] Width of written image in destination.\n   * @param {number} [dstHeight] Height of written image in destination.\n   * @param {number} [width] Width of canvas.\n   * @param {number} [height] Height of canvas.\n   */\n  drawImage(\n    tex,\n    texWidth,\n    texHeight,\n    srcX,\n    srcY,\n    srcWidth,\n    srcHeight,\n    dstX,\n    dstY,\n    dstWidth,\n    dstHeight,\n    width,\n    height,\n  ) {\n    const gl = this.gl_;\n\n    if (dstX === undefined) {\n      dstX = srcX;\n    }\n    if (dstY === undefined) {\n      dstY = srcY;\n    }\n    if (srcWidth === undefined) {\n      srcWidth = texWidth;\n    }\n    if (srcHeight === undefined) {\n      srcHeight = texHeight;\n    }\n    if (dstWidth === undefined) {\n      dstWidth = srcWidth;\n    }\n    if (dstHeight === undefined) {\n      dstHeight = srcHeight;\n    }\n    if (width === undefined) {\n      width = gl.canvas.width;\n    }\n    if (height === undefined) {\n      height = gl.canvas.height;\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, tex);\n\n    gl.useProgram(this.program_);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n    gl.enableVertexAttribArray(this.positionLocation);\n    gl.vertexAttribPointer(this.positionLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n    gl.enableVertexAttribArray(this.texcoordLocation);\n    gl.vertexAttribPointer(this.texcoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n    // matrix for converting pixels to clip space\n    let matrix = mat4.orthographic(0, width, 0, height, -1, 1);\n    matrix = mat4.translate(matrix, dstX, dstY, 0);\n    matrix = mat4.scale(matrix, dstWidth, dstHeight, 1);\n    gl.uniformMatrix4fv(this.matrixLocation, false, matrix);\n\n    let texMatrix = mat4.translation(srcX / texWidth, srcY / texHeight, 0);\n    texMatrix = mat4.scale(\n      texMatrix,\n      srcWidth / texWidth,\n      srcHeight / texHeight,\n      1,\n    );\n\n    gl.uniformMatrix4fv(this.textureMatrixLocation, false, texMatrix);\n    gl.uniform1i(this.textureLocation, 0);\n    gl.drawArrays(gl.TRIANGLES, 0, this.positions.length / 2);\n  }\n}\n\n/**\n * @param {WebGLRenderingContext} gl Rendering Context.\n * @param {GLenum} type Type of shader.\n * @param {string} source source of shader.\n * @return {WebGLShader} [progam] The program.\n */\nfunction createShader(gl, type, source) {\n  const shader = gl.createShader(type);\n\n  if (shader === null) {\n    throw new Error('Shader compilation failed');\n  }\n\n  gl.shaderSource(shader, source);\n\n  gl.compileShader(shader);\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    const log = gl.getShaderInfoLog(shader);\n    if (log === null) {\n      throw new Error('Shader info log creation failed');\n    }\n    throw new Error(log);\n  }\n\n  return shader;\n}\n\n/**\n * @param {WebGLRenderingContext} gl Rendering Context.\n * @param {string} fragmentSource Fragment shader source.\n * @param {string} vertexSource Vertex shader source.\n * @return {WebGLProgram} [progam] The program.\n */\nexport function createProgram(gl, fragmentSource, vertexSource) {\n  const program = gl.createProgram();\n\n  const vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexSource);\n  const fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentSource);\n  if (program === null) {\n    throw new Error('Program creation failed');\n  }\n\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n\n  gl.linkProgram(program);\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    const log = gl.getProgramInfoLog(program);\n    if (log === null) {\n      throw new Error('Program info log creation failed');\n    }\n    throw new Error();\n  }\n  return program;\n}\n","/**\n * @module ol/reproj/glreproj\n */\nimport {\n  createEmpty,\n  extend,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from '../extent.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport * as mat4 from '../vec/mat4.js';\nimport {Canvas as WebGLCanvas, createProgram} from '../webgl/Canvas.js';\n\nconst EDGE_VERTEX_SHADER = `\n  attribute vec4 a_position;\n\n  uniform mat4 u_matrix;\n\n  void main() {\n     gl_Position = u_matrix * a_position;\n  }\n`;\nconst EDGE_FRAGMENT_SHADER = `\n  precision mediump float;\n\n  uniform vec4 u_val;\n  void main() {\n     gl_FragColor = u_val;\n  }\n`;\n\nconst TRIANGLE_VERTEX_SHADER = `\n  attribute vec4 a_position;\n  attribute vec2 a_texcoord;\n\n  varying vec2 v_texcoord;\n\n  uniform mat4 u_matrix;\n\n  void main() {\n     gl_Position = u_matrix * a_position;\n     v_texcoord = a_texcoord;\n  }\n`;\nconst TRIANGLE_FRAGMENT_SHADER = `\n  precision mediump float;\n\n  varying vec2 v_texcoord;\n\n  uniform sampler2D u_texture;\n\n  void main() {\n    if (v_texcoord.x < 0.0 || v_texcoord.x > 1.0 || v_texcoord.y < 0.0 || v_texcoord.y > 1.0) {\n      discard;\n    }\n    gl_FragColor = texture2D(u_texture, v_texcoord);\n  }\n`;\n\n/**\n * Create an html canvas element and returns its webgl context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement | OffscreenCanvas>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {WebGLContextAttributes} [settings] CanvasRenderingContext2DSettings\n * @return {WebGLRenderingContext} The context.\n */\nexport function createCanvasContextWebGL(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {WebGLRenderingContext} */ (\n    canvas.getContext('webgl', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {WebGLRenderingContext} gl Context.\n */\nexport function releaseGLCanvas(gl) {\n  const canvas = gl.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n}\n\n/**\n * @type {Array<HTMLCanvasElement | OffscreenCanvas>}\n */\nexport const canvasGLPool = [];\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"../extent.js\").Extent} extent Extent.\n * @property {import(\"../extent.js\").Extent} [clipExtent] Clip extent.\n * @property {WebGLTexture} texture Texture.\n * @property {number} width Width of texture.\n * @property {number} height Height of texture.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {WebGLRenderingContext} gl the context to render in.\n * @param {number} width_ Width of the canvas.\n * @param {number} height_ Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"../extent.js\").Extent} targetExtent Target extent (tile).\n * @param {import(\"../reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {number} dataType What kind of data is the textures, must be gl.FLOAT or gl.UNSIGNED_BYTE\n * TODO: Allow setting renderEdges value in the data as this is done in \"data-space\".\n * @param {boolean | Array<number>} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchTexture.\n * @return {{framebuffer: WebGLFramebuffer, width: number, height: number, texture: WebGLTexture}} Canvas with reprojected data.\n */\nexport function render(\n  gl,\n  width_,\n  height_,\n  pixelRatio,\n  sourceResolution,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  dataType,\n  renderEdges,\n  interpolate,\n  drawSingle,\n) {\n  const width = Math.round(pixelRatio * width_);\n  const height = Math.round(pixelRatio * height_);\n  gl.canvas.width = width;\n  gl.canvas.height = height;\n\n  /** @type {WebGLFramebuffer | null} */\n  let resultFrameBuffer;\n  /** @type {WebGLTexture | null} */\n  let resultTexture;\n  {\n    resultTexture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, resultTexture);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    if (interpolate) {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    } else {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    }\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA,\n      width,\n      height,\n      0,\n      gl.RGBA,\n      dataType,\n      null,\n    );\n\n    resultFrameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, resultFrameBuffer);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      resultTexture,\n      0,\n    );\n  }\n\n  if (resultFrameBuffer === null) {\n    throw new Error('Could not create framebuffer');\n  }\n  if (resultTexture === null) {\n    throw new Error('Could not create texture');\n  }\n\n  if (sources.length === 0) {\n    return {\n      width,\n      height,\n      framebuffer: resultFrameBuffer,\n      texture: resultTexture,\n    };\n  }\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  /** @type {WebGLTexture | null} */\n  let stitchTexture;\n  /** @type {number} */\n  let stitchWidth;\n  /** @type {number} */\n  let stitchHeight;\n  const stitchScale = 1 / sourceResolution;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchTexture = gl.createTexture();\n    if (resultTexture === null) {\n      throw new Error('Could not create texture');\n    }\n    stitchWidth = Math.round(getWidth(sourceDataExtent) * stitchScale);\n    stitchHeight = Math.round(getHeight(sourceDataExtent) * stitchScale);\n\n    // Make sure we do not exceed the max texture size by lowering the resolution for this image.\n    // https://github.com/openlayers/openlayers/pull/15860#issuecomment-2254123580\n    const maxTexSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    const largeSide = Math.max(stitchWidth, stitchHeight);\n    const scaleFactor = largeSide > maxTexSize ? maxTexSize / largeSide : 1;\n    const stitchWidthFixed = Math.round(stitchWidth * scaleFactor);\n    const stitchHeightFixed = Math.round(stitchHeight * scaleFactor);\n\n    gl.bindTexture(gl.TEXTURE_2D, stitchTexture);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    if (interpolate) {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    } else {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    }\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA,\n      stitchWidthFixed,\n      stitchHeightFixed,\n      0,\n      gl.RGBA,\n      dataType,\n      null,\n    );\n\n    const fb = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      stitchTexture,\n      0,\n    );\n    const webGLCanvas = new WebGLCanvas(gl);\n\n    sources.forEach(function (src, i, arr) {\n      const xPos =\n        (src.extent[0] - sourceDataExtent[0]) * stitchScale * scaleFactor;\n      const yPos =\n        -(src.extent[3] - sourceDataExtent[3]) * stitchScale * scaleFactor;\n      const srcWidth = getWidth(src.extent) * stitchScale * scaleFactor;\n      const srcHeight = getHeight(src.extent) * stitchScale * scaleFactor;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\n      gl.viewport(0, 0, stitchWidthFixed, stitchHeightFixed);\n\n      if (src.clipExtent) {\n        const xPos =\n          (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale * scaleFactor;\n        const yPos =\n          -(src.clipExtent[3] - sourceDataExtent[3]) *\n          stitchScale *\n          scaleFactor;\n        const width = getWidth(src.clipExtent) * stitchScale * scaleFactor;\n        const height = getHeight(src.clipExtent) * stitchScale * scaleFactor;\n        gl.enable(gl.SCISSOR_TEST);\n        gl.scissor(\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n          interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n        );\n      }\n\n      webGLCanvas.drawImage(\n        src.texture,\n        src.width,\n        src.height,\n        gutter,\n        gutter,\n        src.width - 2 * gutter,\n        src.height - 2 * gutter,\n        interpolate ? xPos : Math.round(xPos),\n        interpolate ? yPos : Math.round(yPos),\n        interpolate ? srcWidth : Math.round(xPos + srcWidth) - Math.round(xPos),\n        interpolate\n          ? srcHeight\n          : Math.round(yPos + srcHeight) - Math.round(yPos),\n        stitchWidthFixed,\n        stitchHeightFixed,\n      );\n\n      gl.disable(gl.SCISSOR_TEST);\n    });\n    gl.deleteFramebuffer(fb);\n  } else {\n    stitchTexture = sources[0].texture;\n    stitchWidth = sources[0].width;\n    stitchHeight = sources[0].width;\n  }\n\n  const targetTopLeft = getTopLeft(targetExtent);\n  const sourceTopLeft = getTopLeft(sourceDataExtent);\n\n  const getUVs = (\n    /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ target,\n  ) => {\n    const u0 =\n      ((target[0][0] - targetTopLeft[0]) / targetResolution) * pixelRatio;\n    const v0 =\n      (-(target[0][1] - targetTopLeft[1]) / targetResolution) * pixelRatio;\n    const u1 =\n      ((target[1][0] - targetTopLeft[0]) / targetResolution) * pixelRatio;\n    const v1 =\n      (-(target[1][1] - targetTopLeft[1]) / targetResolution) * pixelRatio;\n    const u2 =\n      ((target[2][0] - targetTopLeft[0]) / targetResolution) * pixelRatio;\n    const v2 =\n      (-(target[2][1] - targetTopLeft[1]) / targetResolution) * pixelRatio;\n    return {u1, v1, u0, v0, u2, v2};\n  };\n\n  gl.bindFramebuffer(gl.FRAMEBUFFER, resultFrameBuffer);\n  gl.viewport(0, 0, width, height);\n\n  // Draw source to reprojtile\n  {\n    /** @type {Array<number>} */\n    const vertices = [];\n    /** @type {Array<number>} */\n    const texcoords = [];\n\n    const triProgram = createProgram(\n      gl,\n      TRIANGLE_FRAGMENT_SHADER,\n      TRIANGLE_VERTEX_SHADER,\n    );\n    gl.useProgram(triProgram);\n\n    // Bind image\n    const textureLocation = gl.getUniformLocation(triProgram, 'u_texture');\n    gl.bindTexture(gl.TEXTURE_2D, stitchTexture);\n\n    // Tell the shader to get the texture from texture unit 0\n    gl.uniform1i(textureLocation, 0);\n\n    // Calculate vert and tex coordinates.\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const source = triangle.source;\n      const target = triangle.target;\n      // Make sure that everything is on pixel boundaries\n      const {u1, v1, u0, v0, u2, v2} = getUVs(target);\n\n      const su0 =\n        (source[0][0] - sourceTopLeft[0]) / sourceResolution / stitchWidth;\n      const sv0 =\n        -(source[0][1] - sourceTopLeft[1]) / sourceResolution / stitchHeight;\n      const su1 =\n        (source[1][0] - sourceTopLeft[0]) / sourceResolution / stitchWidth;\n      const sv1 =\n        -(source[1][1] - sourceTopLeft[1]) / sourceResolution / stitchHeight;\n      const su2 =\n        (source[2][0] - sourceTopLeft[0]) / sourceResolution / stitchWidth;\n      const sv2 =\n        -(source[2][1] - sourceTopLeft[1]) / sourceResolution / stitchHeight;\n\n      vertices.push(u1, v1, u0, v0, u2, v2);\n      texcoords.push(su1, sv1, su0, sv0, su2, sv2);\n    });\n\n    // Convert pixel space to clip space.\n    const matrix = mat4.orthographic(0, width, height, 0, -1, 1);\n    const matrixLocation = gl.getUniformLocation(triProgram, 'u_matrix');\n    gl.uniformMatrix4fv(matrixLocation, false, matrix);\n\n    const positionLocation = gl.getAttribLocation(triProgram, 'a_position');\n    const positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\n    gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(positionLocation);\n\n    const texcoordLocation = gl.getAttribLocation(triProgram, 'a_texcoord');\n    const texcoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(texcoords), gl.STATIC_DRAW);\n    gl.vertexAttribPointer(texcoordLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(texcoordLocation);\n\n    gl.drawArrays(gl.TRIANGLES, 0, vertices.length / 2);\n  }\n\n  if (renderEdges) {\n    const edgeProgram = createProgram(\n      gl,\n      EDGE_FRAGMENT_SHADER,\n      EDGE_VERTEX_SHADER,\n    );\n    gl.useProgram(edgeProgram);\n    const matrix = mat4.orthographic(0, width, height, 0, -1, 1);\n    const matrixLocation = gl.getUniformLocation(edgeProgram, 'u_matrix');\n    gl.uniformMatrix4fv(matrixLocation, false, matrix);\n\n    const burnval = Array.isArray(renderEdges) ? renderEdges : [0, 0, 0, 255];\n    const burnvalLocation = gl.getUniformLocation(edgeProgram, 'u_val');\n    const isFloat = true;\n    if (isFloat) {\n      gl.uniform4fv(burnvalLocation, burnval);\n    } else {\n      gl.uniform4iv(burnvalLocation, burnval);\n    }\n\n    const positionLocation = gl.getAttribLocation(edgeProgram, 'a_position');\n    const positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n    gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(positionLocation);\n\n    /** @type {Array<number>} */\n    const lines = triangulation.getTriangles().reduce(function (\n      /** @type {Array<number>} */ lines,\n      triangle,\n    ) {\n      const target = triangle.target;\n      const {u1, v1, u0, v0, u2, v2} = getUVs(target);\n\n      return lines.concat([u1, v1, u0, v0, u0, v0, u2, v2, u2, v2, u1, v1]);\n    }, []);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(lines), gl.STATIC_DRAW);\n    gl.drawArrays(gl.LINES, 0, lines.length / 2);\n  }\n\n  return {\n    width,\n    height,\n    framebuffer: resultFrameBuffer,\n    texture: resultTexture,\n  };\n}\n","/**\n * @module ol/reproj/DataTile\n */\n\nimport DataTile, {asArrayLike, asImageLike, toArray} from '../DataTile.js';\nimport TileState from '../TileState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceExtentResolution} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\nimport {\n  canvasGLPool,\n  createCanvasContextWebGL,\n  releaseGLCanvas,\n  render as renderReprojected,\n} from './glreproj.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../DataTile.js\").default} TileGetter\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {DataTile} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n * @property {import(\"../proj/Projection.js\").default} targetProj Target projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n * @property {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n * @property {import(\"../tilecoord.js\").TileCoord} [wrappedTileCoord] Coordinate of the tile wrapped in X.\n * @property {number} pixelRatio Pixel ratio.\n * @property {number} gutter Gutter of the source tiles.\n * @property {TileGetter} getTileFunction Function returning source tiles (z, x, y, pixelRatio).\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {number} [errorThreshold] Acceptable reprojection error (in px).\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {import(\"../transform.js\").Transform} [transformMatrix] Source transform matrix.\n * @property {boolean} [renderEdges] Render reprojection edges.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected data tile.\n * See {@link module:ol/source/DataTile~DataTileSource}.\n *\n */\nclass ReprojDataTile extends DataTile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    super({\n      tileCoord: options.tileCoord,\n      loader: () => Promise.resolve(new Uint8ClampedArray(4)),\n      interpolate: options.interpolate,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {boolean | Array<number>}\n     */\n    this.renderEdges_ =\n      options.renderEdges !== undefined ? options.renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     * @private\n     */\n    this.reprojData_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.reprojError_ = null;\n\n    /**\n     * @type {import('../size.js').Size}\n     * @private\n     */\n    this.reprojSize_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = options.sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = options.targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = options.wrappedTileCoord || options.tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const sourceProj = options.sourceProj;\n    const sourceProjExtent = sourceProj.getExtent();\n    const sourceTileGridExtent = options.sourceTileGrid.getExtent();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceTileGridExtent\n        ? getIntersection(sourceProjExtent, sourceTileGridExtent)\n        : sourceProjExtent\n      : sourceTileGridExtent;\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = this.targetTileGrid_.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const targetProj = options.targetProj;\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      options.errorThreshold !== undefined\n        ? options.errorThreshold\n        : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n      options.transformMatrix,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = this.sourceTileGrid_.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = this.sourceTileGrid_.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n        const getTile = options.getTileFunction;\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTile(this.sourceZ_, srcX, srcY, this.pixelRatio_);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('../size.js').Size} Tile size.\n   * @override\n   */\n  getSize() {\n    return this.reprojSize_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {import(\"../DataTile.js\").Data} Tile data.\n   * @override\n   */\n  getData() {\n    return this.reprojData_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @override\n   */\n  getError() {\n    return this.reprojError_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const dataSources = [];\n    let imageLike = false;\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const size = tile.getSize();\n      const gutter = this.gutter_;\n      /**\n       * @type {import(\"../DataTile.js\").ArrayLike}\n       */\n      let tileData;\n      const arrayData = asArrayLike(tile.getData());\n      if (arrayData) {\n        tileData = arrayData;\n      } else {\n        imageLike = true;\n        tileData = toArray(asImageLike(tile.getData()));\n      }\n      const pixelSize = [size[0] + 2 * gutter, size[1] + 2 * gutter];\n      const isFloat = tileData instanceof Float32Array;\n      const pixelCount = pixelSize[0] * pixelSize[1];\n      const DataType = isFloat ? Float32Array : Uint8ClampedArray;\n      const tileDataR = new DataType(tileData.buffer);\n      const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n      const bytesPerPixel = (bytesPerElement * tileDataR.length) / pixelCount;\n      const bytesPerRow = tileDataR.byteLength / pixelSize[1];\n      const bandCount = Math.floor(\n        bytesPerRow / bytesPerElement / pixelSize[0],\n      );\n      const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n      extent[0] += source.offset;\n      extent[2] += source.offset;\n      const clipExtent = this.clipExtent_?.slice();\n      if (clipExtent) {\n        clipExtent[0] += source.offset;\n        clipExtent[2] += source.offset;\n      }\n      dataSources.push({\n        extent: extent,\n        clipExtent: clipExtent,\n        data: tileDataR,\n        dataType: DataType,\n        bytesPerPixel: bytesPerPixel,\n        pixelSize: pixelSize,\n        bandCount: bandCount,\n      });\n    });\n    this.sourceTiles_.length = 0;\n\n    if (dataSources.length === 0) {\n      this.state = TileState.ERROR;\n      this.changed();\n      return;\n    }\n\n    const z = this.wrappedTileCoord_[0];\n    const size = this.targetTileGrid_.getTileSize(z);\n    const targetWidth = typeof size === 'number' ? size : size[0];\n    const targetHeight = typeof size === 'number' ? size : size[1];\n    const outWidth = targetWidth * this.pixelRatio_;\n    const outHeight = targetHeight * this.pixelRatio_;\n    const targetResolution = this.targetTileGrid_.getResolution(z);\n    const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n\n    const bandCount = dataSources[0].bandCount;\n    const dataR = new dataSources[0].dataType(bandCount * outWidth * outHeight);\n\n    const gl = createCanvasContextWebGL(outWidth, outHeight, canvasGLPool, {\n      premultipliedAlpha: false,\n      antialias: false,\n    });\n\n    let willInterpolate;\n    const format = gl.RGBA;\n    let textureType;\n    if (dataSources[0].dataType == Float32Array) {\n      textureType = gl.FLOAT;\n      gl.getExtension('WEBGL_color_buffer_float');\n      gl.getExtension('OES_texture_float');\n      gl.getExtension('EXT_float_blend');\n      const extension = gl.getExtension('OES_texture_float_linear');\n      const canInterpolate = extension !== null;\n      willInterpolate = canInterpolate && this.interpolate;\n    } else {\n      textureType = gl.UNSIGNED_BYTE;\n      willInterpolate = this.interpolate;\n    }\n\n    const BANDS_PR_REPROJ = 4;\n    const reprojs = Math.ceil(bandCount / BANDS_PR_REPROJ);\n    for (let reproj = reprojs - 1; reproj >= 0; --reproj) {\n      const sources = [];\n      for (let i = 0, len = dataSources.length; i < len; ++i) {\n        const dataSource = dataSources[i];\n\n        const pixelSize = dataSource.pixelSize;\n        const width = pixelSize[0];\n        const height = pixelSize[1];\n\n        const data = new dataSource.dataType(BANDS_PR_REPROJ * width * height);\n        const dataS = dataSource.data;\n        let offset = reproj * BANDS_PR_REPROJ;\n        for (let j = 0, len = data.length; j < len; j += BANDS_PR_REPROJ) {\n          data[j] = dataS[offset];\n          data[j + 1] = dataS[offset + 1];\n          data[j + 2] = dataS[offset + 2];\n          data[j + 3] = dataS[offset + 3];\n          offset += bandCount;\n        }\n\n        const texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n\n        if (willInterpolate) {\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        } else {\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        }\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texImage2D(\n          gl.TEXTURE_2D,\n          0,\n          format,\n          width,\n          height,\n          0,\n          format,\n          textureType,\n          data,\n        );\n\n        sources.push({\n          extent: dataSource.extent,\n          clipExtent: dataSource.clipExtent,\n          texture: texture,\n          width: width,\n          height: height,\n        });\n      }\n\n      const {framebuffer, width, height} = renderReprojected(\n        gl,\n        targetWidth,\n        targetHeight,\n        this.pixelRatio_,\n        sourceResolution,\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        textureType,\n        this.renderEdges_,\n        willInterpolate,\n      );\n\n      // The texture is always RGBA.\n      const rows = width;\n      const cols = height * BANDS_PR_REPROJ;\n      const data = new dataSources[0].dataType(rows * cols);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n      gl.readPixels(0, 0, width, height, gl.RGBA, textureType, data);\n\n      let offset = reproj * BANDS_PR_REPROJ;\n      for (let i = 0, len = data.length; i < len; i += BANDS_PR_REPROJ) {\n        // The data read by `readPixels` is flipped in the y-axis so flip it again.\n        const flipY = (rows - 1 - ((i / cols) | 0)) * cols + (i % cols);\n        dataR[offset] = data[flipY];\n        dataR[offset + 1] = data[flipY + 1];\n        dataR[offset + 2] = data[flipY + 2];\n        dataR[offset + 3] = data[flipY + 3];\n        offset += bandCount;\n      }\n    }\n\n    releaseGLCanvas(gl);\n    canvasGLPool.push(gl.canvas);\n\n    if (imageLike) {\n      const context = createCanvasContext2D(targetWidth, targetHeight);\n      const imageData = new ImageData(dataR, targetWidth);\n      context.putImageData(imageData, 0, 0);\n      this.reprojData_ = context.canvas;\n    } else {\n      this.reprojData_ = dataR;\n    }\n    this.reprojSize_ = [Math.round(outWidth), Math.round(outHeight)];\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach(({tile}) => {\n      const state = tile.getState();\n      if (state !== TileState.IDLE && state !== TileState.LOADING) {\n        return;\n      }\n      leftToLoad++;\n\n      const sourceListenKey = listen(tile, EventType.CHANGE, () => {\n        const state = tile.getState();\n        if (\n          state == TileState.LOADED ||\n          state == TileState.ERROR ||\n          state == TileState.EMPTY\n        ) {\n          unlistenByKey(sourceListenKey);\n          leftToLoad--;\n          if (leftToLoad === 0) {\n            this.unlistenSources_();\n            this.reproject_();\n          }\n        }\n      });\n      this.sourcesListenerKeys_.push(sourceListenKey);\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    } else {\n      this.sourceTiles_.forEach(function ({tile}) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojDataTile;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {toSize} from './size.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {abstract, getUid} from '../util.js';\nimport Source from './Source.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     * @protected\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || getUid(this);\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    const gridProjection =\n      projection !== undefined ? projection : this.getProjection();\n    const tileGrid =\n      projection !== undefined\n        ? this.getTileGridForProjection(gridProjection)\n        : this.tileGrid || this.getTileGridForProjection(gridProjection);\n    if (this.getWrapX() && gridProjection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, gridProjection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached reprojected tiles from the source. The next render cycle will create new tiles.\n   * @api\n   */\n  clear() {}\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/DataTile\n */\nimport DataTile from '../DataTile.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport {toPromise} from '../functions.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojDataTile from '../reproj/DataTile.js';\nimport {toSize} from '../size.js';\nimport {\n  createXYZ,\n  extentFromProjection,\n  getForProjection as getTileGridForProjection,\n} from '../tilegrid.js';\nimport {getUid} from '../util.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\n\n/**\n * @typedef {'anonymous'|'use-credentials'} CrossOriginAttribute\n */\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {AbortSignal} signal An abort controller signal.\n * @property {CrossOriginAttribute} [crossOrigin] The cross-origin attribute for images.\n * @property {number} [maxY] The maximum y coordinate at the given z level.  Will be undefined if the\n * underlying tile grid does not have a known extent.\n */\n\n/**\n * Data tile loading function.  The function is called with z, x, and y tile coordinates and\n * returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * @typedef {function(number, number, number, LoaderOptions) : (import(\"../DataTile.js\").Data|Promise<import(\"../DataTile.js\").Data>)} Loader\n */\n\n/**\n * @typedef {Object} Options\n * @property {Loader} [loader] Data loader.  Called with z, x, and y tile coordinates.\n * Returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The pixel width and height of the source tiles.\n * This may be different than the rendered pixel size if a `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around data tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported data should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Tile projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"./Source.js\").State} [state] The source state.\n * @property {boolean} [wrapX=false] Render tiles beyond the antimeridian.\n * @property {number} [transition] Transition time when fading in new tiles (in milliseconds).\n * @property {number} [bandCount=4] Number of bands represented in the data.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {CrossOriginAttribute} [crossOrigin='anonymous'] The crossOrigin property to pass to loaders for image data.\n * @property {string} [key] Key for use in caching tiles.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * A source for typed array data tiles.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @template {import(\"../Tile.js\").default} [TileType=DataTile]\n * @extends TileSource<TileType>\n * @api\n */\nclass DataTileSource extends TileSource {\n  /**\n   * @param {Options} options DataTile source options.\n   */\n  constructor(options) {\n    const projection =\n      options.projection === undefined ? 'EPSG:3857' : options.projection;\n\n    let tileGrid = options.tileGrid;\n    if (tileGrid === undefined && projection) {\n      tileGrid = createXYZ({\n        extent: extentFromProjection(projection),\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize,\n      });\n    }\n\n    super({\n      cacheSize: 0.1, // don't cache on the source\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: projection,\n      tileGrid: tileGrid,\n      state: options.state,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {import('../size.js').Size|null}\n     */\n    this.tileSize_ = options.tileSize ? toSize(options.tileSize) : null;\n\n    /**\n     * @private\n     * @type {Array<import('../size.js').Size>|null}\n     */\n    this.tileSizes_ = null;\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n    /**\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @private\n     */\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = options.bandCount === undefined ? 4 : options.bandCount; // assume RGBA if undefined\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection_ = {};\n\n    /**\n     * @private\n     * @type {CrossOriginAttribute}\n     */\n    this.crossOrigin_ = options.crossOrigin || 'anonymous';\n\n    /**\n     * @type {import(\"../transform.js\").Transform|null}\n     */\n    this.transformMatrix = null;\n  }\n\n  /**\n   * Set the source tile sizes.  The length of the array is expected to match the number of\n   * levels in the tile grid.\n   * @protected\n   * @param {Array<import('../size.js').Size>} tileSizes An array of tile sizes.\n   */\n  setTileSizes(tileSizes) {\n    this.tileSizes_ = tileSizes;\n  }\n\n  /**\n   * Get the source tile size at the given zoom level.  This may be different than the rendered tile\n   * size.\n   * @protected\n   * @param {number} z Tile zoom level.\n   * @return {import('../size.js').Size} The source tile size.\n   */\n  getTileSize(z) {\n    if (this.tileSizes_) {\n      return this.tileSizes_[z];\n    }\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    const tileGrid = this.getTileGrid();\n    return tileGrid ? toSize(tileGrid.getTileSize(z)) : [256, 256];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutterForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (\n      (!thisProj || equivalent(thisProj, projection)) &&\n      !this.transformMatrix\n    ) {\n      return this.gutter_;\n    }\n\n    return 0;\n  }\n\n  /**\n   * @param {Loader} loader The data loader.\n   * @protected\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} targetProj The output projection.\n   * @param {import(\"../proj/Projection.js\").default} sourceProj The input projection.\n   * @return {!TileType} Tile.\n   */\n  getReprojTile_(z, x, y, targetProj, sourceProj) {\n    const sourceTileGrid =\n      this.tileGrid || this.getTileGridForProjection(sourceProj || targetProj);\n    const reprojTilePixelRatio = Math.max.apply(\n      null,\n      sourceTileGrid.getResolutions().map((r, z) => {\n        const tileSize = toSize(sourceTileGrid.getTileSize(z));\n        const textureSize = this.getTileSize(z);\n        return Math.max(\n          textureSize[0] / tileSize[0],\n          textureSize[1] / tileSize[1],\n        );\n      }),\n    );\n\n    const targetTileGrid = this.getTileGridForProjection(targetProj);\n    const tileCoord = [z, x, y];\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      targetProj,\n    );\n\n    const options = Object.assign(\n      {\n        sourceProj: sourceProj || targetProj,\n        sourceTileGrid,\n        targetProj,\n        targetTileGrid,\n        tileCoord,\n        wrappedTileCoord,\n        pixelRatio: reprojTilePixelRatio,\n        gutter: this.gutter_,\n        getTileFunction: (z, x, y, pixelRatio) =>\n          this.getTile(z, x, y, pixelRatio),\n        transformMatrix: this.transformMatrix,\n      },\n      /** @type {import(\"../reproj/DataTile.js\").Options} */ (this.tileOptions),\n    );\n    const tile = /** @type {TileType} */ (\n      /** @type {*} */ (new ReprojDataTile(options))\n    );\n    tile.key = this.getKey();\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {TileType|null} Tile (or null if outside source extent).\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      projection &&\n      ((sourceProjection && !equivalent(sourceProjection, projection)) ||\n        this.transformMatrix)\n    ) {\n      return this.getReprojTile_(z, x, y, projection, sourceProjection);\n    }\n\n    const size = this.getTileSize(z);\n\n    const sourceLoader = this.loader_;\n\n    const controller = new AbortController();\n\n    /**\n     * @type {LoaderOptions}\n     */\n    const loaderOptions = {\n      signal: controller.signal,\n      crossOrigin: this.crossOrigin_,\n    };\n\n    const tileCoord = this.getTileCoordForTileUrlFunction([z, x, y]);\n    if (!tileCoord) {\n      return null;\n    }\n\n    const requestZ = tileCoord[0];\n    const requestX = tileCoord[1];\n    const requestY = tileCoord[2];\n    const range = this.getTileGrid()?.getFullTileRange(requestZ);\n    if (range) {\n      loaderOptions.maxY = range.getHeight() - 1;\n    }\n    function loader() {\n      return toPromise(function () {\n        return sourceLoader(requestZ, requestX, requestY, loaderOptions);\n      });\n    }\n\n    /**\n     * @type {import(\"../DataTile.js\").Options}\n     */\n    const options = Object.assign(\n      {\n        tileCoord: [z, x, y],\n        loader: loader,\n        size: size,\n        controller: controller,\n      },\n      this.tileOptions,\n    );\n\n    const tile = /** @type {TileType} */ (\n      /** @type {*} */ (new DataTile(options))\n    );\n    tile.key = this.getKey();\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n\n    return tile;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   */\n  handleTileChange_(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (\n      this.tileGrid &&\n      (!thisProj || equivalent(thisProj, projection)) &&\n      !this.transformMatrix\n    ) {\n      return this.tileGrid;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection_)) {\n      this.tileGridForProjection_[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection_[projKey];\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection_)) {\n        this.tileGridForProjection_[projKey] = tilegrid;\n      }\n    }\n  }\n}\n\nexport default DataTileSource;\n","/**\n * @module ol/source/ImageTile\n */\nimport {expandUrl, pickUrl, renderXYZTemplate} from '../uri.js';\nimport DataTileSource from './DataTile.js';\n\n/**\n * Image tile loading function.  The function is called with z, x, and y tile coordinates and\n * returns an {@link import(\"../DataTile.js\").ImageLike image} or a promise for the same.\n *\n * @typedef {function(number, number, number, import(\"./DataTile.js\").LoaderOptions):(import(\"../DataTile.js\").ImageLike|Promise<import(\"../DataTile.js\").ImageLike>)} Loader\n */\n\n/**\n * @typedef {function(number, number, number, import(\"./DataTile.js\").LoaderOptions):string} UrlGetter\n */\n\n/**\n * @typedef {string | Array<string> | UrlGetter} UrlLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {UrlLike} [url] The image URL template.  In addition to a single URL template, an array of URL templates or a function\n * can be provided.  If a function is provided, it will be called with z, x, y tile coordinates and loader options and should\n * return a URL.\n * @property {Loader} [loader] Data loader.  Called with z, x, and y tile coordinates.\n * Returns an {@link import(\"../DataTile.js\").ImageLike image} for a tile or a promise for the same.\n * The promise should not resolve until the image is loaded.  If the `url` option is provided, a loader will be created.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The pixel width and height of the source tiles.\n * This may be different than the rendered pixel size if a `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around data tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported data should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Tile projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"./Source.js\").State} [state] The source state.\n * @property {boolean} [wrapX=true] Render tiles beyond the antimeridian.\n * @property {number} [transition] Transition time when fading in new tiles (in miliseconds).\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.\n * @property {import('./DataTile.js').CrossOriginAttribute} [crossOrigin='anonymous'] The crossOrigin property to pass to loaders for image data.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\nconst loadError = new Error('Image failed to load');\n\n/**\n * @param {string} template The image url template.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {import('./DataTile.js').LoaderOptions} options The loader options.\n * @return {Promise<HTMLImageElement>} Resolves with a loaded image.\n */\nfunction loadImage(template, z, x, y, options) {\n  return new Promise((resolve, reject) => {\n    const image = new Image();\n    image.crossOrigin = options.crossOrigin ?? null;\n    image.addEventListener('load', () => resolve(image));\n    image.addEventListener('error', () => reject(loadError));\n    image.src = renderXYZTemplate(template, z, x, y, options.maxY);\n  });\n}\n\n/**\n * @param {Array<string>} templates The url templates.\n * @return {Loader} The image loader.\n */\nfunction makeLoaderFromTemplates(templates) {\n  return function (z, x, y, options) {\n    const template = pickUrl(templates, z, x, y);\n    return loadImage(template, z, x, y, options);\n  };\n}\n\n/**\n * @param {UrlGetter} getter The url getter.\n * @return {Loader} The image loader.\n */\nfunction makeLoaderFromGetter(getter) {\n  return function (z, x, y, options) {\n    const url = getter(z, x, y, options);\n    return loadImage(url, z, x, y, options);\n  };\n}\n\n/**\n * @param {UrlLike} url The URL-like option.\n * @return {Loader} The tile loader.\n */\nfunction makeLoaderFromUrlLike(url) {\n  /**\n   * @type {Loader}\n   */\n  let loader;\n\n  if (Array.isArray(url)) {\n    loader = makeLoaderFromTemplates(url);\n  } else if (typeof url === 'string') {\n    const urls = expandUrl(url);\n    loader = makeLoaderFromTemplates(urls);\n  } else if (typeof url === 'function') {\n    loader = makeLoaderFromGetter(url);\n  } else {\n    throw new Error(\n      'The url option must be a single template, an array of templates, or a function for getting a URL',\n    );\n  }\n  return loader;\n}\n\nlet keyCount = 0;\n\n/**\n * @param {UrlLike} url The URL-like option.\n * @return {string} A key for the URL.\n */\nfunction keyFromUrlLike(url) {\n  if (Array.isArray(url)) {\n    return url.join('\\n');\n  }\n\n  if (typeof url === 'string') {\n    return url;\n  }\n\n  ++keyCount;\n  return 'url-function-key-' + keyCount;\n}\n\n/**\n * @classdesc\n * A source for typed array data tiles.\n *\n * @extends DataTileSource<import(\"../ImageTile.js\").default>\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass ImageTileSource extends DataTileSource {\n  /**\n   * @param {Options} [options] DataTile source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {Loader}\n     */\n    let loader = options.loader;\n\n    /**\n     * @type {string}\n     */\n    let key;\n\n    if (options.url) {\n      loader = makeLoaderFromUrlLike(options.url);\n      key = keyFromUrlLike(options.url);\n    }\n\n    /**\n     * @type {import('./Source.js').State}\n     */\n    const state = !loader ? 'loading' : options.state;\n\n    const wrapX = options.wrapX === undefined ? true : options.wrapX;\n\n    super({\n      loader: loader,\n      key: key,\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize,\n      gutter: options.gutter,\n      maxResolution: options.maxResolution,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      state: state,\n      wrapX: wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate !== false,\n      crossOrigin: options.crossOrigin,\n      zDirection: options.zDirection,\n    });\n  }\n\n  /**\n   * @param {UrlLike} url The new URL.\n   * @api\n   */\n  setUrl(url) {\n    const loader = makeLoaderFromUrlLike(url);\n    this.setLoader(loader);\n    this.setKey(keyFromUrlLike(url));\n    if (this.getState() !== 'ready') {\n      this.setState('ready');\n    }\n  }\n}\n\nexport default ImageTileSource;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageWrapper from './Image.js';\nimport ImageState from './ImageState.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageWrapper {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   * @override\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/resolution\n */\n\n/**\n * @typedef {number|Array<number>} ResolutionLike\n */\n\n/**\n * @param {ResolutionLike} resolution Resolution.\n * @return {number} Resolution.\n */\nexport function fromResolutionLike(resolution) {\n  if (Array.isArray(resolution)) {\n    return Math.min(...resolution);\n  }\n  return resolution;\n}\n","/**\n * @module ol/reproj/Image\n */\n\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {\n  getCenter,\n  getHeight,\n  getIntersection,\n  getWidth,\n  isEmpty,\n} from '../extent.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../Image.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageWrapper {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate,\n  ) {\n    let maxSourceExtent = sourceProj.getExtent();\n    if (maxSourceExtent && sourceProj.canWrapX()) {\n      maxSourceExtent = maxSourceExtent.slice();\n      maxSourceExtent[0] = -Infinity;\n      maxSourceExtent[2] = Infinity;\n    }\n    let maxTargetExtent = targetProj.getExtent();\n    if (maxTargetExtent && targetProj.canWrapX()) {\n      maxTargetExtent = maxTargetExtent.slice();\n      maxTargetExtent[0] = -Infinity;\n      maxTargetExtent[2] = Infinity;\n    }\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution,\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = isEmpty(sourceExtent)\n      ? null\n      : getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   * @override\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        fromResolutionLike(this.sourceImage_.getResolution()),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_,\n        true,\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          (e) => {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (\n        this.sourceListenerKey_\n      ),\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nexport const DECIMALS = 4;\n","/**\n * @module ol/source/Image\n */\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {linearFindNearest} from '../array.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {\n  containsExtent,\n  equals,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {ceil} from '../math.js';\nimport {equivalent} from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport Source from './Source.js';\nimport {DECIMALS} from './common.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../Image.js\").Loader} [loader] Loader. Can either be a custom loader, or one of the\n * loaders created with a `createLoader()` function ({@link module:ol/source/wms.createLoader wms},\n * {@link module:ol/source/arcgisRest.createLoader arcgisRest}, {@link module:ol/source/mapguide.createLoader mapguide},\n * {@link module:ol/source/static.createLoader static}).\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Base class for sources providing a single image.\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").Loader}\n     */\n    this.loader = options.loader || null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.wantedExtent_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.wantedResolution_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.static_ = options.loader ? options.loader.length === 0 : false;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.wantedProjection_ = null;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate(),\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.loader) {\n      const requestExtent = getRequestExtent(extent, resolution, pixelRatio, 1);\n      const requestResolution = this.findNearestResolution(resolution);\n      if (\n        this.image &&\n        (this.static_ ||\n          (this.wantedProjection_ === projection &&\n            ((this.wantedExtent_ &&\n              containsExtent(this.wantedExtent_, requestExtent)) ||\n              containsExtent(this.image.getExtent(), requestExtent)) &&\n            ((this.wantedResolution_ &&\n              fromResolutionLike(this.wantedResolution_) ===\n                requestResolution) ||\n              fromResolutionLike(this.image.getResolution()) ===\n                requestResolution)))\n      ) {\n        return this.image;\n      }\n      this.wantedProjection_ = projection;\n      this.wantedExtent_ = requestExtent;\n      this.wantedResolution_ = requestResolution;\n      this.image = new ImageWrapper(\n        requestExtent,\n        requestResolution,\n        pixelRatio,\n        this.loader,\n      );\n      this.image.addEventListener(\n        EventType.CHANGE,\n        this.handleImageChange.bind(this),\n      );\n    }\n    return this.image;\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\n/**\n * Adjusts the extent so it aligns with pixel boundaries.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Reolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} ratio Ratio between request size and view size.\n * @return {import(\"../extent.js\").Extent} Request extent.\n */\nexport function getRequestExtent(extent, resolution, pixelRatio, ratio) {\n  const imageResolution = resolution / pixelRatio;\n  const center = getCenter(extent);\n  const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n  const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n  const marginWidth = ceil(((ratio - 1) * viewWidth) / 2, DECIMALS);\n  const requestWidth = viewWidth + 2 * marginWidth;\n  const marginHeight = ceil(((ratio - 1) * viewHeight) / 2, DECIMALS);\n  const requestHeight = viewHeight + 2 * marginHeight;\n  return getForViewAndSize(center, imageResolution, 0, [\n    requestWidth,\n    requestHeight,\n  ]);\n}\n\nexport default ImageSource;\n","/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport TileQueue from '../TileQueue.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport ImageLayer from '../layer/Image.js';\nimport TileLayer from '../layer/Tile.js';\nimport {create as createTransform} from '../transform.js';\nimport {getUid} from '../util.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport TileSource from './Tile.js';\n\n/**\n * @typedef {Object} MinionData\n * @property {Array<ArrayBuffer>} buffers Array of buffers.\n * @property {Object} meta Operation metadata.\n * @property {boolean} imageOps The operation is an image operation.\n * @property {number} width The width of the image.\n * @property {number} height The height of the image.\n */\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(MinionData):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (let b = 0; b < numBuffers; ++b) {\n        images[b] = new ImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height,\n        );\n      }\n      const output = operation(images, meta).data;\n      return output.buffer;\n    }\n\n    const output = new Uint8ClampedArray(numBytes);\n    const arrays = new Array(numBuffers);\n    const pixels = new Array(numBuffers);\n    for (let b = 0; b < numBuffers; ++b) {\n      arrays[b] = new Uint8ClampedArray(buffers[b]);\n      pixels[b] = [0, 0, 0, 0];\n    }\n    for (let i = 0; i < numBytes; i += 4) {\n      for (let j = 0; j < numBuffers; ++j) {\n        const array = arrays[j];\n        pixels[j][0] = array[i];\n        pixels[j][1] = array[i + 1];\n        pixels[j][2] = array[i + 2];\n        pixels[j][3] = array[i + 3];\n      }\n      const pixel = operation(pixels, meta);\n      output[i] = pixel[0];\n      output[i + 1] = pixel[1];\n      output[i + 2] = pixel[2];\n      output[i + 3] = pixel[3];\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {ProcessorOptions} config Processor options.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'const ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'const __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  const buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const worker = new Worker(\n    typeof Blob === 'undefined'\n      ? 'data:text/javascript;base64,' +\n        Buffer.from(lines.join('\\n'), 'binary').toString('base64')\n      : URL.createObjectURL(new Blob(lines, {type: 'text/javascript'})),\n  );\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {function(Error, ImageData, (Object|Array<Object>)): void} JobCallback\n */\n\n/**\n * @typedef {Object} Job\n * @property {Object} meta Job metadata.\n * @property {Array<ImageData>} inputs Array of input data.\n * @property {JobCallback} callback Called when the job is complete.\n */\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {Operation} operation The operation.\n * @property {Object<string, Function>} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.imageOps_ = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this.imageOps_) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n\n    /**\n     * @type {Array<Worker>}\n     */\n    const workers = new Array(threads);\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this.onWorkerMessage_.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this.onWorkerMessage_.bind(this, 0),\n      );\n    }\n    /**\n     * @type {Array<Worker>}\n     * @private\n     */\n    this.workers_ = workers;\n\n    /**\n     * @type {Array<Job>}\n     * @private\n     */\n    this.queue_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxQueueLength_ = config.queue || Infinity;\n    /**\n     * @type {number}\n     * @private\n     */\n    this.running_ = 0;\n\n    /**\n     * @type {Object<number, any>}\n     * @private\n     */\n    this.dataLookup_ = {};\n\n    /**\n     * @type {Job|null}\n     * @private\n     */\n    this.job_ = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<ImageData>} inputs Array of image data.\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this.enqueue_({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this.dispatch_();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Job} job The job.\n   */\n  enqueue_(job) {\n    this.queue_.push(job);\n    while (this.queue_.length > this.maxQueueLength_) {\n      this.queue_.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  dispatch_() {\n    if (this.running_ || this.queue_.length === 0) {\n      return;\n    }\n\n    const job = this.queue_.shift();\n    this.job_ = job;\n    const width = job.inputs[0].width;\n    const height = job.inputs[0].height;\n    const buffers = job.inputs.map(function (input) {\n      return input.data.buffer;\n    });\n    const threads = this.workers_.length;\n    this.running_ = threads;\n    if (threads === 1) {\n      this.workers_[0].postMessage(\n        {\n          buffers: buffers,\n          meta: job.meta,\n          imageOps: this.imageOps_,\n          width: width,\n          height: height,\n        },\n        buffers,\n      );\n      return;\n    }\n\n    const length = job.inputs[0].data.length;\n    const segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (let i = 0; i < threads; ++i) {\n      const offset = i * segmentLength;\n      const slices = [];\n      for (let j = 0, jj = buffers.length; j < jj; ++j) {\n        slices.push(buffers[j].slice(offset, offset + segmentLength));\n      }\n      this.workers_[i].postMessage(\n        {\n          buffers: slices,\n          meta: job.meta,\n          imageOps: this.imageOps_,\n          width: width,\n          height: height,\n        },\n        slices,\n      );\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  onWorkerMessage_(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this.dataLookup_[index] = event.data;\n    --this.running_;\n    if (this.running_ === 0) {\n      this.resolveJob_();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  resolveJob_() {\n    const job = this.job_;\n    const threads = this.workers_.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this.dataLookup_[0]['buffer']);\n      meta = this.dataLookup_[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(threads);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this.dataLookup_[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this.dataLookup_[i]['meta'];\n      }\n    }\n    this.job_ = null;\n    this.dataLookup_ = {};\n    job.callback(\n      null,\n      new ImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta,\n    );\n    this.dispatch_();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   * @override\n   */\n  disposeInternal() {\n    for (let i = 0; i < this.workers_.length; ++i) {\n      this.workers_[i].terminate();\n    }\n    this.workers_.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData)\n * and should return a single\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n * The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.  Listeners will receive an event object with\n   * a `data` property that can be used to make data available to operations.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.  Listeners will receive an event object with\n   * a `data` property.  If more than one thread is used, `data` will be an array of\n   * objects.  If a single thread is used, `data` will be a single object.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * @typedef {'pixel' | 'image'} RasterOperationType\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n */\n\n/**\n * @typedef {import(\"./Image.js\").ImageSourceEventTypes|'beforeoperations'|'afteroperations'} RasterSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster~RasterSource} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Object|Array<Object>} data An object made available to operations.  For \"afteroperations\" evenets\n   * this will be an array of objects if more than one thread is used.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n * @property {Array<number>|null} [resolutions] Resolutions. If specified, raster operations will only\n * be run at the given resolutions.  By default, the resolutions of the first source with resolutions\n * specified will be used, if any. Set to `null` to use any view resolution instead.\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Image.js\").ImageSourceEventTypes, import(\"./Image.js\").ImageSourceEvent, Return> &\n *   import(\"../Observable\").OnSignature<RasterSourceEventTypes, RasterSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |RasterSourceEventTypes, Return>} RasterSourceOnSignature\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {RasterSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined ? options.operationType : 'pixel';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useResolutions_ = options.resolutions !== null;\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.processSources_.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../Map.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     * @private\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutter: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      mapId: getUid(this),\n      renderTargets: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      /** @type {Array<string>} */\n      const attributions = [];\n      for (let i = 0, iMax = options.sources.length; i < iMax; ++i) {\n        const sourceOrLayer = options.sources[i];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        if (!source) {\n          continue;\n        }\n        const sourceAttributions = source.getAttributions()?.(frameState);\n        if (typeof sourceAttributions === 'string') {\n          attributions.push(sourceAttributions);\n        } else if (sourceAttributions !== undefined) {\n          attributions.push(...sourceAttributions);\n        }\n      }\n      return attributions;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === 'image',\n      queue: 1,\n      lib: lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../Map.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../Map.js\").FrameState} */ (\n      Object.assign({}, this.frameState_)\n    );\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (\n      Object.assign({}, frameState.viewState)\n    );\n\n    const center = getCenter(extent);\n\n    frameState.size[0] = Math.ceil(getWidth(extent) / resolution);\n    frameState.size[1] = Math.ceil(getHeight(extent) / resolution);\n    frameState.extent = [\n      center[0] - (frameState.size[0] * resolution) / 2,\n      center[1] - (frameState.size[1] * resolution) / 2,\n      center[0] + (frameState.size[0] * resolution) / 2,\n      center[1] + (frameState.size[1] * resolution) / 2,\n    ];\n    frameState.time = Date.now();\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (!source || source.getState() !== 'ready') {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   * @override\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    this.tileQueue_.loadMoreTiles(16, 16);\n\n    resolution = this.findNearestResolution(resolution);\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(frameState.extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      frameState.renderTargets = {};\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data),\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState),\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object|Array<Object>} data The user data (or an array if more than one thread).\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas,\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    } else {\n      this.changed();\n    }\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data),\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    if (!this.useResolutions_) {\n      return null;\n    }\n    let resolutions = super.getResolutions();\n    if (!resolutions) {\n      for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n        const source = this.layers_[i].getSource();\n        resolutions = source.getResolutions(projection);\n        if (resolutions) {\n          break;\n        }\n      }\n    }\n    return resolutions;\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container instanceof HTMLCanvasElement) {\n    element = container;\n  } else {\n    if (container) {\n      element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n      throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n      const context = element.getContext('2d');\n      return context.getImageData(0, 0, width, height);\n    }\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height, undefined, {\n      willReadFrequently: true,\n    });\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height, undefined, {\n        willReadFrequently: true,\n      });\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('ol/control/Control'), require('ol/Observable'), require('ol/layer/Group')) :\n\ttypeof define === 'function' && define.amd ? define(['ol/control/Control', 'ol/Observable', 'ol/layer/Group'], factory) :\n\t(global.LayerSwitcher = factory(global.ol.control.Control,global.ol.Observable,global.ol.layer.Group));\n}(this, (function (Control,ol_Observable,LayerGroup) { 'use strict';\n\nControl = 'default' in Control ? Control['default'] : Control;\nLayerGroup = 'default' in LayerGroup ? LayerGroup['default'] : LayerGroup;\n\n/**\n * @protected\n */\nconst CSS_PREFIX = 'layer-switcher-';\n/**\n * OpenLayers LayerSwitcher Control, displays a list of layers and groups\n * associated with a map which have a `title` property.\n *\n * To be shown in the LayerSwitcher panel layers must have a `title` property;\n * base map layers should have a `type` property set to `base`. Group layers\n * (`LayerGroup`) can be used to visually group layers together; a group\n * with a `fold` property set to either `'open'` or `'close'` will be displayed\n * with a toggle.\n *\n * See [BaseLayerOptions](#baselayeroptions) for a full list of LayerSwitcher\n * properties for layers (`TileLayer`, `ImageLayer`, `VectorTile` etc.) and\n * [GroupLayerOptions](#grouplayeroptions) for group layer (`LayerGroup`)\n * LayerSwitcher properties.\n *\n * Layer and group properties can either be set by adding extra properties\n * to their options when they are created or via their set method.\n *\n * Specify a `title` for a Layer by adding a `title` property to it's options object:\n * ```javascript\n * var lyr = new ol.layer.Tile({\n *   // Specify a title property which will be displayed by the layer switcher\n *   title: 'OpenStreetMap',\n *   visible: true,\n *   source: new ol.source.OSM()\n * })\n * ```\n *\n * Alternatively the properties can be set via the `set` method after a layer has been created:\n * ```javascript\n * var lyr = new ol.layer.Tile({\n *   visible: true,\n *   source: new ol.source.OSM()\n * })\n * // Specify a title property which will be displayed by the layer switcher\n * lyr.set('title', 'OpenStreetMap');\n * ```\n *\n * To create a LayerSwitcher and add it to a map, create a new instance then pass it to the map's [`addControl` method](https://openlayers.org/en/latest/apidoc/module-ol_Map-Map.html#addControl).\n * ```javascript\n * var layerSwitcher = new LayerSwitcher({\n *   reverse: true,\n *   groupSelectStyle: 'group'\n * });\n * map.addControl(layerSwitcher);\n * ```\n *\n * @constructor\n * @extends {ol/control/Control~Control}\n * @param opt_options LayerSwitcher options, see  [LayerSwitcher Options](#options) and [RenderOptions](#renderoptions) which LayerSwitcher `Options` extends for more details.\n */\nclass LayerSwitcher extends Control {\n    constructor(opt_options) {\n        const options = Object.assign({}, opt_options);\n        const element = document.createElement('div');\n        super({ element: element, target: options.target });\n        this.activationMode = options.activationMode || 'mouseover';\n        this.startActive = options.startActive === true;\n        // TODO Next: Rename to showButtonContent\n        this.label = options.label !== undefined ? options.label : '';\n        // TODO Next: Rename to hideButtonContent\n        this.collapseLabel =\n            options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        // TODO Next: Rename to showButtonTitle\n        this.tipLabel = options.tipLabel ? options.tipLabel : 'Legend';\n        // TODO Next: Rename to hideButtonTitle\n        this.collapseTipLabel = options.collapseTipLabel\n            ? options.collapseTipLabel\n            : 'Collapse legend';\n        this.groupSelectStyle = LayerSwitcher.getGroupSelectStyle(options.groupSelectStyle);\n        this.reverse = options.reverse !== false;\n        this.mapListeners = [];\n        this.hiddenClassName = 'ol-unselectable ol-control layer-switcher';\n        if (LayerSwitcher.isTouchDevice_()) {\n            this.hiddenClassName += ' touch';\n        }\n        this.shownClassName = 'shown';\n        element.className = this.hiddenClassName;\n        this.button = document.createElement('button');\n        element.appendChild(this.button);\n        this.panel = document.createElement('div');\n        this.panel.className = 'panel';\n        element.appendChild(this.panel);\n        LayerSwitcher.enableTouchScroll_(this.panel);\n        element.classList.add(CSS_PREFIX + 'group-select-style-' + this.groupSelectStyle);\n        element.classList.add(CSS_PREFIX + 'activation-mode-' + this.activationMode);\n        if (this.activationMode === 'click') {\n            // TODO Next: Remove in favour of layer-switcher-activation-mode-click\n            element.classList.add('activationModeClick');\n            this.button.onclick = (e) => {\n                const evt = e || window.event;\n                if (this.element.classList.contains(this.shownClassName)) {\n                    this.hidePanel();\n                }\n                else {\n                    this.showPanel();\n                }\n                evt.preventDefault();\n            };\n        }\n        else {\n            this.button.onmouseover = () => {\n                this.showPanel();\n            };\n            this.button.onclick = (e) => {\n                const evt = e || window.event;\n                this.showPanel();\n                evt.preventDefault();\n            };\n            this.panel.onmouseout = (evt) => {\n                if (!this.panel.contains(evt.relatedTarget)) {\n                    this.hidePanel();\n                }\n            };\n        }\n        this.updateButton();\n    }\n    /**\n     * Set the map instance the control is associated with.\n     * @param map The map instance.\n     */\n    setMap(map) {\n        // Clean up listeners associated with the previous map\n        for (let i = 0; i < this.mapListeners.length; i++) {\n            ol_Observable.unByKey(this.mapListeners[i]);\n        }\n        this.mapListeners.length = 0;\n        // Wire up listeners etc. and store reference to new map\n        super.setMap(map);\n        if (map) {\n            if (this.startActive) {\n                this.showPanel();\n            }\n            else {\n                this.renderPanel();\n            }\n            if (this.activationMode !== 'click') {\n                this.mapListeners.push(map.on('pointerdown', () => {\n                    this.hidePanel();\n                }));\n            }\n        }\n    }\n    /**\n     * Show the layer panel. Fires `'show'` event.\n     * @fires LayerSwitcher#show\n     */\n    showPanel() {\n        if (!this.element.classList.contains(this.shownClassName)) {\n            this.element.classList.add(this.shownClassName);\n            this.updateButton();\n            this.renderPanel();\n        }\n        /**\n         * Event triggered after the panel has been shown.\n         * Listen to the event via the `on` or `once` methods; for example:\n         * ```js\n         * var layerSwitcher = new LayerSwitcher();\n         * map.addControl(layerSwitcher);\n         *\n         * layerSwitcher.on('show', evt => {\n         *   console.log('show', evt);\n         * });\n         * @event LayerSwitcher#show\n         */\n        this.dispatchEvent('show');\n    }\n    /**\n     * Hide the layer panel. Fires `'hide'` event.\n     * @fires LayerSwitcher#hide\n     */\n    hidePanel() {\n        if (this.element.classList.contains(this.shownClassName)) {\n            this.element.classList.remove(this.shownClassName);\n            this.updateButton();\n        }\n        /**\n         * Event triggered after the panel has been hidden.\n         * @event LayerSwitcher#hide\n         */\n        this.dispatchEvent('hide');\n    }\n    /**\n     * Update button text content and attributes based on current\n     * state\n     */\n    updateButton() {\n        if (this.element.classList.contains(this.shownClassName)) {\n            this.button.textContent = this.collapseLabel;\n            this.button.setAttribute('title', this.collapseTipLabel);\n            this.button.setAttribute('aria-label', this.collapseTipLabel);\n        }\n        else {\n            this.button.textContent = this.label;\n            this.button.setAttribute('title', this.tipLabel);\n            this.button.setAttribute('aria-label', this.tipLabel);\n        }\n    }\n    /**\n     * Re-draw the layer panel to represent the current state of the layers.\n     */\n    renderPanel() {\n        this.dispatchEvent('render');\n        LayerSwitcher.renderPanel(this.getMap(), this.panel, {\n            groupSelectStyle: this.groupSelectStyle,\n            reverse: this.reverse\n        });\n        this.dispatchEvent('rendercomplete');\n    }\n    /**\n     * **_[static]_** - Re-draw the layer panel to represent the current state of the layers.\n     * @param map The OpenLayers Map instance to render layers for\n     * @param panel The DOM Element into which the layer tree will be rendered\n     * @param options Options for panel, group, and layers\n     */\n    static renderPanel(map, panel, options) {\n        // Create the event.\n        const render_event = new Event('render');\n        // Dispatch the event.\n        panel.dispatchEvent(render_event);\n        options = options || {};\n        options.groupSelectStyle = LayerSwitcher.getGroupSelectStyle(options.groupSelectStyle);\n        LayerSwitcher.ensureTopVisibleBaseLayerShown(map, options.groupSelectStyle);\n        while (panel.firstChild) {\n            panel.removeChild(panel.firstChild);\n        }\n        // Reset indeterminate state for all layers and groups before\n        // applying based on groupSelectStyle\n        LayerSwitcher.forEachRecursive(map, function (l, _idx, _a) {\n            l.set('indeterminate', false);\n        });\n        if (options.groupSelectStyle === 'children' ||\n            options.groupSelectStyle === 'none') {\n            // Set visibile and indeterminate state of groups based on\n            // their children's visibility\n            LayerSwitcher.setGroupVisibility(map);\n        }\n        else if (options.groupSelectStyle === 'group') {\n            // Set child indetermiate state based on their parent's visibility\n            LayerSwitcher.setChildVisibility(map);\n        }\n        const ul = document.createElement('ul');\n        panel.appendChild(ul);\n        // passing two map arguments instead of lyr as we're passing the map as the root of the layers tree\n        LayerSwitcher.renderLayers_(map, map, ul, options, function render(_changedLyr) {\n            LayerSwitcher.renderPanel(map, panel, options);\n        });\n        // Create the event.\n        const rendercomplete_event = new Event('rendercomplete');\n        // Dispatch the event.\n        panel.dispatchEvent(rendercomplete_event);\n    }\n    /**\n     * **_[static]_** - Determine if a given layer group contains base layers\n     * @param grp Group to test\n     */\n    static isBaseGroup(grp) {\n        if (grp instanceof LayerGroup) {\n            const lyrs = grp.getLayers().getArray();\n            return lyrs.length && lyrs[0].get('type') === 'base';\n        }\n        else {\n            return false;\n        }\n    }\n    static setGroupVisibility(map) {\n        // Get a list of groups, with the deepest first\n        const groups = LayerSwitcher.getGroupsAndLayers(map, function (l) {\n            return (l instanceof LayerGroup &&\n                !l.get('combine') &&\n                !LayerSwitcher.isBaseGroup(l));\n        }).reverse();\n        // console.log(groups.map(g => g.get('title')));\n        groups.forEach(function (grp) {\n            // TODO Can we use getLayersArray, is it public in the esm build?\n            const descendantVisibility = grp.getLayersArray().map(function (l) {\n                const state = l.getVisible();\n                // console.log('>', l.get('title'), state);\n                return state;\n            });\n            // console.log(descendantVisibility);\n            if (descendantVisibility.every(function (v) {\n                return v === true;\n            })) {\n                grp.setVisible(true);\n                grp.set('indeterminate', false);\n            }\n            else if (descendantVisibility.every(function (v) {\n                return v === false;\n            })) {\n                grp.setVisible(false);\n                grp.set('indeterminate', false);\n            }\n            else {\n                grp.setVisible(true);\n                grp.set('indeterminate', true);\n            }\n        });\n    }\n    static setChildVisibility(map) {\n        // console.log('setChildVisibility');\n        const groups = LayerSwitcher.getGroupsAndLayers(map, function (l) {\n            return (l instanceof LayerGroup &&\n                !l.get('combine') &&\n                !LayerSwitcher.isBaseGroup(l));\n        });\n        groups.forEach(function (grp) {\n            const group = grp;\n            // console.log(group.get('title'));\n            const groupVisible = group.getVisible();\n            const groupIndeterminate = group.get('indeterminate');\n            group\n                .getLayers()\n                .getArray()\n                .forEach(function (l) {\n                l.set('indeterminate', false);\n                if ((!groupVisible || groupIndeterminate) && l.getVisible()) {\n                    l.set('indeterminate', true);\n                }\n            });\n        });\n    }\n    /**\n     * Ensure only the top-most base layer is visible if more than one is visible.\n     * @param map The map instance.\n     * @param groupSelectStyle\n     * @protected\n     */\n    static ensureTopVisibleBaseLayerShown(map, groupSelectStyle) {\n        let lastVisibleBaseLyr;\n        LayerSwitcher.forEachRecursive(map, function (lyr, _idx, _arr) {\n            if (lyr.get('type') === 'base' && lyr.getVisible()) {\n                lastVisibleBaseLyr = lyr;\n            }\n        });\n        if (lastVisibleBaseLyr)\n            LayerSwitcher.setVisible_(map, lastVisibleBaseLyr, true, groupSelectStyle);\n    }\n    /**\n     * **_[static]_** - Get an Array of all layers and groups displayed by the LayerSwitcher (has a `'title'` property)\n     * contained by the specified map or layer group; optionally filtering via `filterFn`\n     * @param grp The map or layer group for which layers are found.\n     * @param filterFn Optional function used to filter the returned layers\n     */\n    static getGroupsAndLayers(grp, filterFn) {\n        const layers = [];\n        filterFn =\n            filterFn ||\n                function (_lyr, _idx, _arr) {\n                    return true;\n                };\n        LayerSwitcher.forEachRecursive(grp, function (lyr, idx, arr) {\n            if (lyr.get('title')) {\n                if (filterFn(lyr, idx, arr)) {\n                    layers.push(lyr);\n                }\n            }\n        });\n        return layers;\n    }\n    /**\n     * Toggle the visible state of a layer.\n     * Takes care of hiding other layers in the same exclusive group if the layer\n     * is toggle to visible.\n     * @protected\n     * @param map The map instance.\n     * @param lyr layer whose visibility will be toggled.\n     * @param visible Set whether the layer is shown\n     * @param groupSelectStyle\n     * @protected\n     */\n    static setVisible_(map, lyr, visible, groupSelectStyle) {\n        // console.log(lyr.get('title'), visible, groupSelectStyle);\n        lyr.setVisible(visible);\n        if (visible && lyr.get('type') === 'base') {\n            // Hide all other base layers regardless of grouping\n            LayerSwitcher.forEachRecursive(map, function (l, _idx, _arr) {\n                if (l != lyr && l.get('type') === 'base') {\n                    l.setVisible(false);\n                }\n            });\n        }\n        if (lyr instanceof LayerGroup &&\n            !lyr.get('combine') &&\n            groupSelectStyle === 'children') {\n            lyr.getLayers().forEach((l) => {\n                LayerSwitcher.setVisible_(map, l, lyr.getVisible(), groupSelectStyle);\n            });\n        }\n    }\n    /**\n     * Render all layers that are children of a group.\n     * @param map The map instance.\n     * @param lyr Layer to be rendered (should have a title property).\n     * @param idx Position in parent group list.\n     * @param options Options for groups and layers\n     * @protected\n     */\n    static renderLayer_(map, lyr, idx, options, render) {\n        const li = document.createElement('li');\n        const lyrTitle = lyr.get('title');\n        const checkboxId = LayerSwitcher.uuid();\n        const label = document.createElement('label');\n        if (lyr instanceof LayerGroup && !lyr.get('combine')) {\n            const isBaseGroup = LayerSwitcher.isBaseGroup(lyr);\n            li.classList.add('group');\n            if (isBaseGroup) {\n                li.classList.add(CSS_PREFIX + 'base-group');\n            }\n            // Group folding\n            if (lyr.get('fold')) {\n                li.classList.add(CSS_PREFIX + 'fold');\n                li.classList.add(CSS_PREFIX + lyr.get('fold'));\n                const btn = document.createElement('button');\n                btn.onclick = function (e) {\n                    const evt = e || window.event;\n                    LayerSwitcher.toggleFold_(lyr, li);\n                    evt.preventDefault();\n                };\n                li.appendChild(btn);\n            }\n            if (!isBaseGroup && options.groupSelectStyle != 'none') {\n                const input = document.createElement('input');\n                input.type = 'checkbox';\n                input.id = checkboxId;\n                input.checked = lyr.getVisible();\n                input.indeterminate = lyr.get('indeterminate');\n                input.onchange = function (e) {\n                    const target = e.target;\n                    LayerSwitcher.setVisible_(map, lyr, target.checked, options.groupSelectStyle);\n                    render(lyr);\n                };\n                li.appendChild(input);\n                label.htmlFor = checkboxId;\n            }\n            label.innerHTML = lyrTitle;\n            li.appendChild(label);\n            const ul = document.createElement('ul');\n            li.appendChild(ul);\n            LayerSwitcher.renderLayers_(map, lyr, ul, options, render);\n        }\n        else {\n            li.className = 'layer';\n            const input = document.createElement('input');\n            if (lyr.get('type') === 'base') {\n                input.type = 'radio';\n            }\n            else {\n                input.type = 'checkbox';\n            }\n            input.id = checkboxId;\n            input.checked = lyr.get('visible');\n            input.indeterminate = lyr.get('indeterminate');\n            input.onchange = function (e) {\n                const target = e.target;\n                LayerSwitcher.setVisible_(map, lyr, target.checked, options.groupSelectStyle);\n                render(lyr);\n            };\n            li.appendChild(input);\n            label.htmlFor = checkboxId;\n            label.innerHTML = lyrTitle;\n            const rsl = map.getView().getResolution();\n            if (rsl >= lyr.getMaxResolution() || rsl < lyr.getMinResolution()) {\n                label.className += ' disabled';\n            }\n            else if (lyr.getMinZoom && lyr.getMaxZoom) {\n                const zoom = map.getView().getZoom();\n                if (zoom <= lyr.getMinZoom() || zoom > lyr.getMaxZoom()) {\n                    label.className += ' disabled';\n                }\n            }\n            li.appendChild(label);\n        }\n        return li;\n    }\n    /**\n     * Render all layers that are children of a group.\n     * @param map The map instance.\n     * @param lyr Group layer whose children will be rendered.\n     * @param elm DOM element that children will be appended to.\n     * @param options Options for groups and layers\n     * @protected\n     */\n    static renderLayers_(map, lyr, elm, options, render) {\n        let lyrs = lyr.getLayers().getArray().slice();\n        if (options.reverse)\n            lyrs = lyrs.reverse();\n        for (let i = 0, l; i < lyrs.length; i++) {\n            l = lyrs[i];\n            if (l.get('title')) {\n                elm.appendChild(LayerSwitcher.renderLayer_(map, l, i, options, render));\n            }\n        }\n    }\n    /**\n     * **_[static]_** - Call the supplied function for each layer in the passed layer group\n     * recursing nested groups.\n     * @param lyr The layer group to start iterating from.\n     * @param fn Callback which will be called for each layer\n     * found under `lyr`.\n     */\n    static forEachRecursive(lyr, fn) {\n        lyr.getLayers().forEach(function (lyr, idx, a) {\n            fn(lyr, idx, a);\n            if (lyr instanceof LayerGroup) {\n                LayerSwitcher.forEachRecursive(lyr, fn);\n            }\n        });\n    }\n    /**\n     * **_[static]_** - Generate a UUID\n     * Adapted from http://stackoverflow.com/a/2117523/526860\n     * @returns {String} UUID\n     */\n    static uuid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n            return v.toString(16);\n        });\n    }\n    /**\n     * Apply workaround to enable scrolling of overflowing content within an\n     * element. Adapted from https://gist.github.com/chrismbarr/4107472\n     * @param elm Element on which to enable touch scrolling\n     * @protected\n     */\n    static enableTouchScroll_(elm) {\n        if (LayerSwitcher.isTouchDevice_()) {\n            let scrollStartPos = 0;\n            elm.addEventListener('touchstart', function (event) {\n                scrollStartPos = this.scrollTop + event.touches[0].pageY;\n            }, false);\n            elm.addEventListener('touchmove', function (event) {\n                this.scrollTop = scrollStartPos - event.touches[0].pageY;\n            }, false);\n        }\n    }\n    /**\n     * Determine if the current browser supports touch events. Adapted from\n     * https://gist.github.com/chrismbarr/4107472\n     * @returns {Boolean} True if client can have 'TouchEvent' event\n     * @protected\n     */\n    static isTouchDevice_() {\n        try {\n            document.createEvent('TouchEvent');\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Fold/unfold layer group\n     * @param lyr Layer group to fold/unfold\n     * @param li List item containing layer group\n     * @protected\n     */\n    static toggleFold_(lyr, li) {\n        li.classList.remove(CSS_PREFIX + lyr.get('fold'));\n        lyr.set('fold', lyr.get('fold') === 'open' ? 'close' : 'open');\n        li.classList.add(CSS_PREFIX + lyr.get('fold'));\n    }\n    /**\n     * If a valid groupSelectStyle value is not provided then return the default\n     * @param groupSelectStyle The string to check for validity\n     * @returns The value groupSelectStyle, if valid, the default otherwise\n     * @protected\n     */\n    static getGroupSelectStyle(groupSelectStyle) {\n        return ['none', 'children', 'group'].indexOf(groupSelectStyle) >= 0\n            ? groupSelectStyle\n            : 'children';\n    }\n}\n// Expose LayerSwitcher as ol.control.LayerSwitcher if using a full build of\n// OpenLayers\nif (window['ol'] && window['ol']['control']) {\n    window['ol']['control']['LayerSwitcher'] = LayerSwitcher;\n}\n\nreturn LayerSwitcher;\n\n})));\n","/**\n * @module ol/interaction/Draw\n */\nimport Feature from '../Feature.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {\n  distance,\n  squaredDistance as squaredCoordinateDistance,\n} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {\n  always,\n  never,\n  noModifierKeys,\n  shiftKeyOnly,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clamp, squaredDistance, toFixed} from '../math.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/Geometry.js\").Type} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style for sketch features. The draw interaction can have up to three sketch features, depending on the mode.\n * It will always contain a feature with a `Point` geometry that corresponds to the current cursor position.\n * If the mode is `LineString` or `Polygon`, and there is at least one drawn point, it will also contain a feature with\n * a `LineString` geometry that corresponds to the line between the already drawn points and the current cursor position.\n * If the mode is `Polygon`, and there is at least one drawn point, it will also contain a feature with a `Polygon`\n * geometry that corresponds to the polygon between the already drawn points and the current cursor position\n * (note that this polygon has only two points if only one point is drawn).\n * If the mode is `Circle`, and there is one point drawn, it will also contain a feature with a `Circle` geometry whose\n * center is the drawn point and the radius is determined by the distance between the drawn point and the cursor.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean|import(\"../events/condition.js\").Condition} [trace=false] Trace a portion of another geometry.\n * Ignored when in freehand mode.\n * @property {VectorSource} [traceSource] Source for features to trace.  If tracing is active and a `traceSource` is\n * not provided, the interaction's `source` will be used.  Tracing requires that the interaction is configured with\n * either a `traceSource` or a `source`.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the draw interaction.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * @typedef {Object} TraceState\n * @property {boolean} active Tracing active.\n * @property {import(\"../pixel.js\").Pixel} [startPx] The initially clicked pixel location.\n * @property {Array<TraceTarget>} [targets] Targets available for tracing.\n * @property {number} [targetIndex] The index of the currently traced target.  A value of -1 indicates\n * that no trace target is active.\n */\n\n/**\n * @typedef {Object} TraceTarget\n * @property {Array<import(\"../coordinate.js\").Coordinate>} coordinates Target coordinates.\n * @property {boolean} ring The target coordinates are a linear ring.\n * @property {number} startIndex The index of first traced coordinate.  A fractional index represents an\n * edge intersection.  Index values for rings will wrap (may be negative or larger than coordinates length).\n * @property {number} endIndex The index of last traced coordinate.  Details from startIndex also apply here.\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'Polygon' | 'Circle'} Mode\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n */\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {Array<Feature>} features The candidate features.\n * @return {Array<TraceTarget>} The trace targets.\n */\nfunction getTraceTargets(coordinate, features) {\n  /**\n   * @type {Array<TraceTarget>}\n   */\n  const targets = [];\n\n  for (let i = 0; i < features.length; ++i) {\n    const feature = features[i];\n    const geometry = feature.getGeometry();\n    appendGeometryTraceTargets(coordinate, geometry, targets);\n  }\n\n  return targets;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} a One coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b Another coordinate.\n * @return {number} The squared distance between the two coordinates.\n */\nfunction getSquaredDistance(a, b) {\n  return squaredDistance(a[0], a[1], b[0], b[1]);\n}\n\n/**\n * @param {LineCoordType} coordinates The ring coordinates.\n * @param {number} index The index.  May be wrapped.\n * @return {import(\"../coordinate.js\").Coordinate} The coordinate.\n */\nfunction getCoordinate(coordinates, index) {\n  const count = coordinates.length;\n  if (index < 0) {\n    return coordinates[index + count];\n  }\n  if (index >= count) {\n    return coordinates[index - count];\n  }\n  return coordinates[index];\n}\n\n/**\n * Get the cumulative squared distance along a ring path.  The end index index may be \"wrapped\" and it may\n * be less than the start index to indicate the direction of travel.  The start and end index may have\n * a fractional part to indicate a point between two coordinates.\n * @param {LineCoordType} coordinates Ring coordinates.\n * @param {number} startIndex The start index.\n * @param {number} endIndex The end index.\n * @return {number} The cumulative squared distance along the ring path.\n */\nfunction getCumulativeSquaredDistance(coordinates, startIndex, endIndex) {\n  let lowIndex, highIndex;\n  if (startIndex < endIndex) {\n    lowIndex = startIndex;\n    highIndex = endIndex;\n  } else {\n    lowIndex = endIndex;\n    highIndex = startIndex;\n  }\n  const lowWholeIndex = Math.ceil(lowIndex);\n  const highWholeIndex = Math.floor(highIndex);\n\n  if (lowWholeIndex > highWholeIndex) {\n    // both start and end are on the same segment\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    return getSquaredDistance(start, end);\n  }\n\n  let sd = 0;\n\n  if (lowIndex < lowWholeIndex) {\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = getCoordinate(coordinates, lowWholeIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  if (highWholeIndex < highIndex) {\n    const start = getCoordinate(coordinates, highWholeIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  for (let i = lowWholeIndex; i < highWholeIndex - 1; ++i) {\n    const start = getCoordinate(coordinates, i);\n    const end = getCoordinate(coordinates, i + 1);\n    sd += getSquaredDistance(start, end);\n  }\n\n  return sd;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {import(\"../geom/Geometry.js\").default} geometry The candidate geometry.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendGeometryTraceTargets(coordinate, geometry, targets) {\n  if (geometry instanceof LineString) {\n    appendTraceTarget(coordinate, geometry.getCoordinates(), false, targets);\n    return;\n  }\n  if (geometry instanceof MultiLineString) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], false, targets);\n    }\n    return;\n  }\n  if (geometry instanceof Polygon) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], true, targets);\n    }\n    return;\n  }\n  if (geometry instanceof MultiPolygon) {\n    const polys = geometry.getCoordinates();\n    for (let i = 0, ii = polys.length; i < ii; ++i) {\n      const coordinates = polys[i];\n      for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n        appendTraceTarget(coordinate, coordinates[j], true, targets);\n      }\n    }\n    return;\n  }\n  if (geometry instanceof GeometryCollection) {\n    const geometries = geometry.getGeometries();\n    for (let i = 0; i < geometries.length; ++i) {\n      appendGeometryTraceTargets(coordinate, geometries[i], targets);\n    }\n    return;\n  }\n  // other types cannot be traced\n}\n\n/**\n * @typedef {Object} TraceTargetUpdateInfo\n * @property {number} index The new target index.\n * @property {number} endIndex The new segment end index.\n */\n\n/**\n * @type {TraceTargetUpdateInfo}\n */\nconst sharedUpdateInfo = {index: -1, endIndex: NaN};\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {TraceState} traceState The trace state.\n * @param {import(\"../Map.js\").default} map The map.\n * @param {number} snapTolerance The snap tolerance.\n * @return {TraceTargetUpdateInfo} Information about the new trace target.  The returned\n * object is reused between calls and must not be modified by the caller.\n */\nfunction getTraceTargetUpdate(coordinate, traceState, map, snapTolerance) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n\n  let closestTargetDistance = Infinity;\n\n  let newTargetIndex = -1;\n  let newEndIndex = NaN;\n\n  for (\n    let targetIndex = 0;\n    targetIndex < traceState.targets.length;\n    ++targetIndex\n  ) {\n    const target = traceState.targets[targetIndex];\n    const coordinates = target.coordinates;\n\n    let minSegmentDistance = Infinity;\n    let endIndex;\n    for (\n      let coordinateIndex = 0;\n      coordinateIndex < coordinates.length - 1;\n      ++coordinateIndex\n    ) {\n      const start = coordinates[coordinateIndex];\n      const end = coordinates[coordinateIndex + 1];\n      const rel = getPointSegmentRelationship(x, y, start, end);\n      if (rel.squaredDistance < minSegmentDistance) {\n        minSegmentDistance = rel.squaredDistance;\n        endIndex = coordinateIndex + rel.along;\n      }\n    }\n\n    if (minSegmentDistance < closestTargetDistance) {\n      closestTargetDistance = minSegmentDistance;\n      if (target.ring && traceState.targetIndex === targetIndex) {\n        // same target, maintain the same trace direction\n        if (target.endIndex > target.startIndex) {\n          // forward trace\n          if (endIndex < target.startIndex) {\n            endIndex += coordinates.length;\n          }\n        } else if (target.endIndex < target.startIndex) {\n          // reverse trace\n          if (endIndex > target.startIndex) {\n            endIndex -= coordinates.length;\n          }\n        }\n      }\n      newEndIndex = endIndex;\n      newTargetIndex = targetIndex;\n    }\n  }\n\n  const newTarget = traceState.targets[newTargetIndex];\n  let considerBothDirections = newTarget.ring;\n  if (traceState.targetIndex === newTargetIndex && considerBothDirections) {\n    // only consider switching trace direction if close to the start\n    const newCoordinate = interpolateCoordinate(\n      newTarget.coordinates,\n      newEndIndex,\n    );\n    const pixel = map.getPixelFromCoordinate(newCoordinate);\n    if (distance(pixel, traceState.startPx) > snapTolerance) {\n      considerBothDirections = false;\n    }\n  }\n\n  if (considerBothDirections) {\n    const coordinates = newTarget.coordinates;\n    const count = coordinates.length;\n    const startIndex = newTarget.startIndex;\n    const endIndex = newEndIndex;\n    if (startIndex < endIndex) {\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex,\n      );\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex - count,\n      );\n      if (reverseDistance < forwardDistance) {\n        newEndIndex -= count;\n      }\n    } else {\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex,\n      );\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex + count,\n      );\n      if (forwardDistance < reverseDistance) {\n        newEndIndex += count;\n      }\n    }\n  }\n\n  sharedUpdateInfo.index = newTargetIndex;\n  sharedUpdateInfo.endIndex = newEndIndex;\n  return sharedUpdateInfo;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The clicked coordinate.\n * @param {Array<import(\"../coordinate.js\").Coordinate>} coordinates The geometry component coordinates.\n * @param {boolean} ring The coordinates represent a linear ring.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendTraceTarget(coordinate, coordinates, ring, targets) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const start = coordinates[i];\n    const end = coordinates[i + 1];\n    const rel = getPointSegmentRelationship(x, y, start, end);\n    if (rel.squaredDistance === 0) {\n      const index = i + rel.along;\n      targets.push({\n        coordinates: coordinates,\n        ring: ring,\n        startIndex: index,\n        endIndex: index,\n      });\n      return;\n    }\n  }\n}\n\n/**\n * @typedef {Object} PointSegmentRelationship\n * @property {number} along The closest point expressed as a fraction along the segment length.\n * @property {number} squaredDistance The squared distance of the point to the segment.\n */\n\n/**\n * @type {PointSegmentRelationship}\n */\nconst sharedRel = {along: 0, squaredDistance: 0};\n\n/**\n * @param {number} x The point x.\n * @param {number} y The point y.\n * @param {import(\"../coordinate.js\").Coordinate} start The segment start.\n * @param {import(\"../coordinate.js\").Coordinate} end The segment end.\n * @return {PointSegmentRelationship} The point segment relationship.  The returned object is\n * shared between calls and must not be modified by the caller.\n */\nfunction getPointSegmentRelationship(x, y, start, end) {\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  let along = 0;\n  let px = x1;\n  let py = y1;\n  if (dx !== 0 || dy !== 0) {\n    along = clamp(((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy), 0, 1);\n    px += dx * along;\n    py += dy * along;\n  }\n\n  sharedRel.along = along;\n  sharedRel.squaredDistance = toFixed(squaredDistance(x, y, px, py), 10);\n  return sharedRel;\n}\n\n/**\n * @param {LineCoordType} coordinates The coordinates.\n * @param {number} index The index.  May be fractional and may wrap.\n * @return {import(\"../coordinate.js\").Coordinate} The interpolated coordinate.\n */\nfunction interpolateCoordinate(coordinates, index) {\n  const count = coordinates.length;\n\n  let startIndex = Math.floor(index);\n  const along = index - startIndex;\n  if (startIndex >= count) {\n    startIndex -= count;\n  } else if (startIndex < 0) {\n    startIndex += count;\n  }\n\n  let endIndex = startIndex + 1;\n  if (endIndex >= count) {\n    endIndex -= count;\n  }\n\n  const start = coordinates[startIndex];\n  const x0 = start[0];\n  const y0 = start[1];\n  const end = coordinates[endIndex];\n  const dx = end[0] - x0;\n  const dy = end[1] - y0;\n\n  return [x0 + dx * along, y0 + dy * along];\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/Geometry.js\").Type}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/Geometry.js\").Type} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === 'Polygon'\n        ? 3\n        : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === 'Circle'\n        ? 2\n        : options.maxPoints\n          ? options.maxPoints\n          : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === 'Circle') {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = (coordinates, geometry, projection) => {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection),\n          );\n          circle.setCenterAndRadius(\n            center,\n            Math.sqrt(squaredLength),\n            this.geometryLayout_,\n          );\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === 'Point') {\n          Constructor = Point;\n        } else if (mode === 'LineString') {\n          Constructor = LineString;\n        } else if (mode === 'Polygon') {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = (coordinates, geometry, projection) => {\n          if (geometry) {\n            if (mode === 'Polygon') {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates(\n                  [coordinates[0].concat([coordinates[0][0]])],\n                  this.geometryLayout_,\n                );\n              } else {\n                geometry.setCoordinates([], this.geometryLayout_);\n              }\n            } else {\n              geometry.setCoordinates(coordinates, this.geometryLayout_);\n            }\n          } else {\n            geometry = new Constructor(coordinates, this.geometryLayout_);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.traceCondition_;\n    this.setTrace(options.trace || false);\n\n    /**\n     * @type {TraceState}\n     * @private\n     */\n    this.traceState_ = {active: false};\n\n    /**\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.traceSource_ = options.traceSource || options.source || null;\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Toggle tracing mode or set a tracing condition.\n   *\n   * @param {boolean|import(\"../events/condition.js\").Condition} trace A boolean to toggle tracing mode or an event\n   *     condition that will be checked when a feature is clicked to determine if tracing should be active.\n   */\n  setTrace(trace) {\n    let condition;\n    if (!trace) {\n      condition = never;\n    } else if (trace === true) {\n      condition = always;\n    } else {\n      condition = trace;\n    }\n    this.traceCondition_ = condition;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   * @override\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default<PointerEvent>} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== 'Point' && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default<PointerEvent>} event Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    }\n\n    if (!this.condition_(event)) {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(() => {\n      this.handlePointerMove_(\n        new MapBrowserEvent(\n          MapBrowserEventType.POINTERMOVE,\n          event.map,\n          event.originalEvent,\n          false,\n          event.frameState,\n        ),\n      );\n    }, this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  deactivateTrace_() {\n    this.traceState_ = {active: false};\n  }\n\n  /**\n   * Activate or deactivate trace state based on a browser event.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  toggleTraceState_(event) {\n    if (!this.traceSource_ || !this.traceCondition_(event)) {\n      return;\n    }\n\n    if (this.traceState_.active) {\n      this.deactivateTrace_();\n      return;\n    }\n\n    const map = this.getMap();\n    const lowerLeft = map.getCoordinateFromPixel([\n      event.pixel[0] - this.snapTolerance_,\n      event.pixel[1] + this.snapTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      event.pixel[0] + this.snapTolerance_,\n      event.pixel[1] - this.snapTolerance_,\n    ]);\n    const extent = boundingExtent([lowerLeft, upperRight]);\n    const features = this.traceSource_.getFeaturesInExtent(extent);\n    if (features.length === 0) {\n      return;\n    }\n\n    const targets = getTraceTargets(event.coordinate, features);\n    if (targets.length) {\n      this.traceState_ = {\n        active: true,\n        startPx: event.pixel.slice(),\n        targets: targets,\n        targetIndex: -1,\n      };\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} endIndex The new end index of the trace.\n   * @private\n   */\n  addOrRemoveTracedCoordinates_(target, endIndex) {\n    // three cases to handle:\n    //  1. traced in the same direction and points need adding\n    //  2. traced in the same direction and points need removing\n    //  3. traced in a new direction\n    const previouslyForward = target.startIndex <= target.endIndex;\n    const currentlyForward = target.startIndex <= endIndex;\n    if (previouslyForward === currentlyForward) {\n      // same direction\n      if (\n        (previouslyForward && endIndex > target.endIndex) ||\n        (!previouslyForward && endIndex < target.endIndex)\n      ) {\n        // case 1 - add new points\n        this.addTracedCoordinates_(target, target.endIndex, endIndex);\n      } else if (\n        (previouslyForward && endIndex < target.endIndex) ||\n        (!previouslyForward && endIndex > target.endIndex)\n      ) {\n        // case 2 - remove old points\n        this.removeTracedCoordinates_(endIndex, target.endIndex);\n      }\n    } else {\n      // case 3 - remove old points, add new points\n      this.removeTracedCoordinates_(target.startIndex, target.endIndex);\n      this.addTracedCoordinates_(target, target.startIndex, endIndex);\n    }\n  }\n\n  /**\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  removeTracedCoordinates_(fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    let remove = 0;\n    if (fromIndex < toIndex) {\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        end -= 1;\n      }\n      remove = end - start + 1;\n    } else {\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      remove = start - end + 1;\n    }\n\n    if (remove > 0) {\n      this.removeLastPoints_(remove);\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  addTracedCoordinates_(target, fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    const coordinates = [];\n    if (fromIndex < toIndex) {\n      // forward trace\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        // if end is snapped to a vertex, it will be added later\n        end -= 1;\n      }\n      for (let i = start; i <= end; ++i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    } else {\n      // reverse trace\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      for (let i = start; i >= end; --i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    }\n    if (coordinates.length) {\n      this.appendCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Update the trace.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  updateTrace_(event) {\n    const traceState = this.traceState_;\n    if (!traceState.active) {\n      return;\n    }\n\n    if (traceState.targetIndex === -1) {\n      // check if we are ready to pick a target\n      if (distance(traceState.startPx, event.pixel) < this.snapTolerance_) {\n        return;\n      }\n    }\n\n    const updatedTraceTarget = getTraceTargetUpdate(\n      event.coordinate,\n      traceState,\n      this.getMap(),\n      this.snapTolerance_,\n    );\n\n    if (traceState.targetIndex !== updatedTraceTarget.index) {\n      // target changed\n      if (traceState.targetIndex !== -1) {\n        // remove points added during previous trace\n        const oldTarget = traceState.targets[traceState.targetIndex];\n        this.removeTracedCoordinates_(oldTarget.startIndex, oldTarget.endIndex);\n      }\n      // add points for the new target\n      const newTarget = traceState.targets[updatedTraceTarget.index];\n      this.addTracedCoordinates_(\n        newTarget,\n        newTarget.startIndex,\n        updatedTraceTarget.endIndex,\n      );\n    } else {\n      // target stayed the same\n      const target = traceState.targets[traceState.targetIndex];\n      this.addOrRemoveTracedCoordinates_(target, updatedTraceTarget.endIndex);\n    }\n\n    // modify the state with updated info\n    traceState.targetIndex = updatedTraceTarget.index;\n    const target = traceState.targets[traceState.targetIndex];\n    target.endIndex = updatedTraceTarget.endIndex;\n\n    // update event coordinate and pixel to match end point of final segment\n    const coordinate = interpolateCoordinate(\n      target.coordinates,\n      target.endIndex,\n    );\n    const pixel = this.getMap().getPixelFromCoordinate(coordinate);\n    event.coordinate = coordinate;\n    event.pixel = [Math.round(pixel[0]), Math.round(pixel[1])];\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default<PointerEvent>} event Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n      const tracing = this.traceState_.active;\n      this.toggleTraceState_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === 'Point')\n        ) {\n          if (this.atFinish_(event.pixel, tracing)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default<PointerEvent>} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (!this.finishCoordinate_) {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n      return;\n    }\n\n    this.updateTrace_(event);\n    this.modifyDrawing_(event.coordinate);\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {boolean} [tracing] Drawing in trace mode (only stop if at the starting point).\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel, tracing) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === 'Point') {\n        at = true;\n      } else if (mode === 'Circle') {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === 'LineString') {\n        potentiallyDone =\n          !tracing && this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === 'Polygon') {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n        if (tracing) {\n          potentiallyFinishCoordinates = [sketchCoords[0][0]];\n        } else {\n          potentiallyFinishCoordinates = [\n            sketchCoords[0][0],\n            sketchCoords[0][sketchCoords[0].length - 2],\n          ];\n        }\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout(),\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates(),\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    while (start.length < stride) {\n      start.push(0);\n    }\n    this.finishCoordinate_ = start;\n    if (this.mode_ === 'Point') {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === 'Polygon') {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection,\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_),\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    let coordinates, last;\n    while (coordinate.length < stride) {\n      coordinate.push(0);\n    }\n    if (this.mode_ === 'Point') {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection,\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (geometry.getType() === 'Polygon' && this.mode_ !== 'Polygon') {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>} The sketch feature.\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === 'LineString' || mode === 'Circle') {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      return this.finishDrawing();\n    }\n    return this.sketchFeature_;\n  }\n\n  /**\n   * @param {number} n The number of points to remove.\n   */\n  removeLastPoints_(n) {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    const mode = this.mode_;\n    for (let i = 0; i < n; ++i) {\n      let coordinates;\n      if (mode === 'LineString' || mode === 'Circle') {\n        coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n        coordinates.splice(-2, 1);\n        if (coordinates.length >= 2) {\n          this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n          const finishCoordinate = this.finishCoordinate_.slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        this.geometryFunction_(coordinates, geometry, projection);\n        if (geometry.getType() === 'Polygon' && this.sketchLine_) {\n          this.createOrUpdateCustomSketchLine_(\n            /** @type {Polygon} */ (geometry),\n          );\n        }\n      } else if (mode === 'Polygon') {\n        coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n        coordinates.splice(-2, 1);\n        const sketchLineGeom = this.sketchLine_.getGeometry();\n        if (coordinates.length >= 2) {\n          const finishCoordinate = coordinates[coordinates.length - 2].slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        sketchLineGeom.setCoordinates(coordinates);\n        this.geometryFunction_(this.sketchCoords_, geometry, projection);\n      }\n\n      if (coordinates.length === 1) {\n        this.abortDrawing();\n        break;\n      }\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    this.removeLastPoints_(1);\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The drawn feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return null;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === 'LineString') {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === 'Polygon') {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === 'MultiPoint') {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)]),\n      );\n    } else if (this.type_ === 'MultiLineString') {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)]),\n      );\n    } else if (this.type_ === 'MultiPolygon') {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)]),\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    this.deactivateTrace_();\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === 'LineString' || mode === 'Circle') {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === 'Polygon') {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.sketchFeature_ = this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_),\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(sides, angle) {\n  return function (coordinates, geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection,\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection,\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    geometry = geometry || fromCircle(new Circle(center), sides);\n\n    let internalAngle = angle;\n    if (!angle && angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      internalAngle = Math.atan2(y, x);\n    }\n    makeRegular(\n      /** @type {Polygon} */ (geometry),\n      center,\n      radius,\n      internalAngle,\n    );\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      }),\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n      return 'Point';\n    case 'LineString':\n    case 'MultiLineString':\n      return 'LineString';\n    case 'Polygon':\n    case 'MultiPolygon':\n      return 'Polygon';\n    case 'Circle':\n      return 'Circle';\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","import OLMap from 'ol/Map.js';\nimport View from 'ol/View.js';\nimport ImageLayer from 'ol/layer/Image.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport Feature from 'ol/Feature.js';\nimport Polygon from 'ol/geom/Polygon.js';\nimport {Stroke, Style, Fill} from 'ol/style.js';\nimport {fromLonLat} from 'ol/proj.js';\nimport ImageTile from 'ol/source/ImageTile.js';\nimport RasterSource from 'ol/source/Raster.js';\nimport LayerSwitcher from 'ol-layerswitcher';\nimport {simplifyLineString} from 'ol/geom/flat/simplify.js';\nimport Draw from 'ol/interaction/Draw.js';\nimport Modify from 'ol/interaction/Modify.js';\nimport Snap from 'ol/interaction/Snap.js';\nimport {Select} from 'ol/interaction.js';\nimport {never, click} from 'ol/events/condition.js';\nimport Circle from 'ol/geom/Circle.js';\nimport LineString from 'ol/geom/LineString.js';\n\n// --- Configuration Management with Local Storage ---\n\n// Configuration storage key\nconst CONFIG_STORAGE_KEY = 'fbd_configuration';\nconst CONSTRAINT_STORAGE_KEY = 'fbd_constraints';\n\n// Default configuration values\nconst DEFAULT_CONFIG = {\n  epsilon: 0.011,\n  minClusterSize: 2,\n  coordWeight: 1.4,\n  constraintStrength: 2,\n  rasterVisible: true\n};\n\n// Global state variables\nlet rasterVisible = true;\nlet mapReady = false; // Track if map is ready for clustering\n\n// --- Constraint Management System ---\n\n/**\n * Manages spatial constraints for DBSCAN clustering.\n * Supports must-link and cannot-link constraints with efficient storage and lookup.\n */\nclass ConstraintManager {\n  constructor() {\n    // Map constraint IDs to constraint objects\n    this.constraintMap = new Map();\n\n    // Spatial index for fast constraint lookup\n    // Maps pixel coordinates \"x,y\" to constraint IDs\n    this.spatialIndex = new Map();\n\n    // Counter for generating unique constraint IDs\n    this.nextId = 1;\n\n    // Cache for pixel constraint lookups\n    this.pixelConstraintCache = new Map();\n\n    // Flag to track if constraints have been modified\n    this.isDirty = false;\n\n    console.log('ConstraintManager initialized successfully');\n  }\n\n      /**\n   * Add a new constraint to the system\n   * @param {string} type - 'must-link' or 'cannot-link'\n   * @param {Array} pixels - Array of pixel coordinates [{x, y}, ...]\n   * @param {Object} metadata - Additional constraint metadata\n   * @returns {string} - Unique constraint ID\n   */\n  addConstraint(type, pixels, metadata = {}) {\n    const id = `constraint_${this.nextId++}`;\n\n    // Mark RGB values for calculation during first clustering run\n    const averageRGB = {\n      r: 0, g: 0, b: 0,\n      pixelCount: pixels.length,\n      needsCalculation: true\n    };\n\n    const constraint = {\n      id,\n      type,\n      pixels: [...pixels], // Deep copy\n      metadata: {...metadata},\n      averageRGB, // Will be calculated during first clustering\n      created: Date.now(),\n      active: true\n    };\n\n    this.constraintMap.set(id, constraint);\n\n    // Update spatial index\n    this.updateSpatialIndex(id, pixels);\n\n    // Clear cache as constraints have changed\n    this.clearCache();\n\n    this.isDirty = true;\n\n    // Debug logging\n    console.log(`Adding constraint ${id}:`, {\n      type,\n      pixelCount: pixels.length,\n      constraintMapSize: this.constraintMap.size,\n      constraintMapKeys: Array.from(this.constraintMap.keys())\n    });\n\n    // Save constraints to localStorage\n    this.saveConstraintsToStorage();\n\n    console.log(`Added ${type} constraint ${id} with ${pixels.length} pixels, RGB will be calculated during clustering`);\n    return id;\n  }\n\n  /**\n   * Remove a constraint from the system\n   * @param {string} constraintId - The constraint ID to remove\n   * @returns {boolean} - True if constraint was removed\n   */\n  removeConstraint(constraintId) {\n    const constraint = this.constraintMap.get(constraintId);\n    if (!constraint) {\n      return false;\n    }\n\n    // Remove from spatial index\n    this.removeSpatialIndex(constraintId, constraint.pixels);\n\n    // Remove from constraints map\n    this.constraintMap.delete(constraintId);\n\n    // Clear cache\n    this.clearCache();\n\n    this.isDirty = true;\n\n    // Save constraints to localStorage\n    this.saveConstraintsToStorage();\n\n    console.log(`Removed constraint ${constraintId}`);\n    return true;\n  }\n\n  /**\n   * Get all constraints affecting a specific pixel\n   * @param {number} x - Pixel x coordinate\n   * @param {number} y - Pixel y coordinate\n   * @returns {Array} - Array of constraint objects\n   */\n  getPixelConstraints(x, y) {\n    const key = `${x},${y}`;\n\n    // Check cache first\n    if (this.pixelConstraintCache.has(key)) {\n      return this.pixelConstraintCache.get(key);\n    }\n\n    const constraintIds = this.spatialIndex.get(key) || [];\n    const constraints = constraintIds\n      .map(id => this.constraintMap.get(id))\n      .filter(c => c && c.active);\n\n    // Cache the result\n    this.pixelConstraintCache.set(key, constraints);\n\n    return constraints;\n  }\n\n  /**\n   * Check if two pixels have a must-link constraint\n   * @param {number} x1 - First pixel x coordinate\n   * @param {number} y1 - First pixel y coordinate\n   * @param {number} x2 - Second pixel x coordinate\n   * @param {number} y2 - Second pixel y coordinate\n   * @returns {boolean} - True if pixels must be linked\n   */\n  hasMustLink(x1, y1, x2, y2) {\n    const constraints1 = this.getPixelConstraints(x1, y1);\n    const constraints2 = this.getPixelConstraints(x2, y2);\n\n    // Check if both pixels share any must-link constraints\n    for (const c1 of constraints1) {\n      if (c1.type !== 'must-link') continue;\n\n      for (const c2 of constraints2) {\n        if (c2.type === 'must-link' && c1.id === c2.id) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Check if two pixels have a cannot-link constraint\n   * @param {number} x1 - First pixel x coordinate\n   * @param {number} y1 - First pixel y coordinate\n   * @param {number} x2 - Second pixel x coordinate\n   * @param {number} y2 - Second pixel y coordinate\n   * @returns {boolean} - True if pixels cannot be linked\n   */\n  hasCannotLink(x1, y1, x2, y2) {\n    const constraints1 = this.getPixelConstraints(x1, y1);\n    const constraints2 = this.getPixelConstraints(x2, y2);\n\n    // Check if both pixels share any cannot-link constraints\n    for (const c1 of constraints1) {\n      if (c1.type !== 'cannot-link') continue;\n\n      for (const c2 of constraints2) {\n        if (c2.type === 'cannot-link' && c1.id === c2.id) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Get all active constraints\n   * @returns {Array} - Array of all constraint objects\n   */\n  getAllConstraints() {\n    if (!this.constraintMap || typeof this.constraintMap.values !== 'function') {\n      console.warn('Constraints not properly initialized, returning empty array');\n      return [];\n    }\n    return Array.from(this.constraintMap.values())\n      .filter(c => c.active);\n  }\n\n  /**\n   * Get constraints by type\n   * @param {string} type - 'must-link' or 'cannot-link'\n   * @returns {Array} - Array of constraint objects of the specified type\n   */\n  getConstraintsByType(type) {\n    return this.getAllConstraints()\n      .filter(c => c.type === type);\n  }\n\n  /**\n   * Clear all constraints\n   */\n  clearAllConstraints() {\n    this.clearConstraintsFromMemory();\n\n    // Save constraints to localStorage (empty state)\n    this.saveConstraintsToStorage();\n\n    console.log('Cleared all constraints');\n  }\n\n  /**\n   * Clear constraints from memory only (without saving to localStorage)\n   */\n  clearConstraintsFromMemory() {\n    this.constraintMap.clear();\n    this.spatialIndex.clear();\n    this.clearCache();\n    this.isDirty = true;\n  }\n\n  /**\n   * Clear constraints from localStorage only (for testing)\n   */\n  clearConstraintsFromLocalStorageOnly() {\n    try {\n      localStorage.removeItem(CONSTRAINT_STORAGE_KEY);\n      console.log('Constraints cleared from localStorage only');\n    } catch (error) {\n      console.warn('Error clearing constraints from localStorage:', error);\n    }\n  }\n\n  /**\n   * Update spatial index for a constraint\n   * @private\n   */\n  updateSpatialIndex(constraintId, pixels) {\n    for (const pixel of pixels) {\n      const key = `${pixel.x},${pixel.y}`;\n\n      if (!this.spatialIndex.has(key)) {\n        this.spatialIndex.set(key, []);\n      }\n\n      const constraintIds = this.spatialIndex.get(key);\n      if (!constraintIds.includes(constraintId)) {\n        constraintIds.push(constraintId);\n      }\n    }\n  }\n\n  /**\n   * Remove spatial index entries for a constraint\n   * @private\n   */\n  removeSpatialIndex(constraintId, pixels) {\n    for (const pixel of pixels) {\n      const key = `${pixel.x},${pixel.y}`;\n      const constraintIds = this.spatialIndex.get(key);\n\n      if (constraintIds) {\n        const index = constraintIds.indexOf(constraintId);\n        if (index > -1) {\n          constraintIds.splice(index, 1);\n        }\n\n        // Remove empty entries\n        if (constraintIds.length === 0) {\n          this.spatialIndex.delete(key);\n        }\n      }\n    }\n  }\n\n  /**\n   * Clear internal caches\n   * @private\n   */\n  clearCache() {\n    this.pixelConstraintCache.clear();\n  }\n\n\n\n  /**\n   * Update constraint RGB values when image data becomes available\n   * @param {Object} imageData - Current image data\n   */\n  updateConstraintRGBs(imageData) {\n    if (!imageData || !imageData.data) {\n      return;\n    }\n\n    let updatedCount = 0;\n    for (const constraint of this.constraintMap.values()) {\n      if (constraint.averageRGB && constraint.averageRGB.needsCalculation) {\n        const newAvgRGB = this.calculateAverageRGB(constraint.pixels, imageData);\n        if (newAvgRGB) {\n          constraint.averageRGB = newAvgRGB;\n          updatedCount++;\n        }\n      }\n    }\n\n    if (updatedCount > 0) {\n      console.log(`Updated RGB values for ${updatedCount} constraints`);\n      this.clearCache();\n    }\n  }\n\n  /**\n   * Reactivate constraints that were deactivated due to view changes\n   */\n  reactivateConstraints() {\n    let reactivatedCount = 0;\n    for (const constraint of this.constraintMap.values()) {\n      if (!constraint.active && constraint.averageRGB && constraint.averageRGB.needsCalculation) {\n        constraint.active = true;\n        reactivatedCount++;\n      }\n    }\n\n    if (reactivatedCount > 0) {\n      console.log(`Reactivated ${reactivatedCount} constraints for new view`);\n      this.clearCache();\n    }\n  }\n\n  /**\n   * Get statistics about the constraint system\n   * @returns {Object} - Statistics object\n   */\n  getStatistics() {\n    const constraints = this.getAllConstraints();\n    const mustLinkCount = constraints.filter(c => c.type === 'must-link').length;\n    const cannotLinkCount = constraints.filter(c => c.type === 'cannot-link').length;\n\n    let totalPixels = 0;\n    for (const constraint of constraints) {\n      totalPixels += constraint.pixels.length;\n    }\n\n    return {\n      totalConstraints: constraints.length,\n      mustLinkConstraints: mustLinkCount,\n      cannotLinkConstraints: cannotLinkCount,\n      totalPixelsConstrained: totalPixels,\n      spatialIndexSize: this.spatialIndex.size,\n      cacheSize: this.pixelConstraintCache.size\n    };\n  }\n\n  /**\n   * Export constraints to JSON\n   * @returns {string} - JSON representation of constraints\n   */\n  exportConstraints() {\n    // Safety check for constraints initialization\n    if (!this.constraintMap || typeof this.constraintMap.values !== 'function') {\n      console.warn('Constraints not properly initialized as Map, reinitializing...');\n      console.log('constraintMap type:', typeof this.constraintMap);\n      console.log('constraintMap value:', this.constraintMap);\n      console.log('constraintMap constructor:', this.constraintMap?.constructor?.name);\n      this.constraintMap = new Map();\n    }\n\n    console.log('Exporting constraints - constraintMap size:', this.constraintMap.size);\n    console.log('Exporting constraints - constraintMap keys:', Array.from(this.constraintMap.keys()));\n\n    const data = {\n      constraints: Array.from(this.constraintMap.values()).map(constraint => {\n        // Create a clean export without circular references\n        return {\n          id: constraint.id,\n          type: constraint.type,\n          pixels: constraint.pixels,\n          metadata: constraint.metadata,\n          averageRGB: constraint.averageRGB,\n          created: constraint.created,\n          active: constraint.active\n        };\n      }),\n      metadata: {\n        version: '1.1', // Updated version for new structure\n        exported: Date.now(),\n        totalConstraints: this.constraintMap.size\n      }\n    };\n\n    console.log('Exported constraint data:', data);\n    return data; // Return object directly, not JSON string\n  }\n\n  /**\n   * Export constraints as JSON string\n   * @returns {string} - JSON representation of constraints\n   */\n  exportConstraintsAsJSON() {\n    return JSON.stringify(this.exportConstraints(), null, 2);\n  }\n\n  /**\n   * Import constraints from JSON\n   * @param {string} jsonData - JSON string containing constraints\n   * @returns {boolean} - True if import was successful\n   */\n  importConstraints(jsonData) {\n    try {\n      // Handle both JSON string and object input\n      const data = typeof jsonData === 'string' ? JSON.parse(jsonData) : jsonData;\n\n      if (!data.constraints || !Array.isArray(data.constraints)) {\n        throw new Error('Invalid constraint data format');\n      }\n\n      // Clear existing constraints from memory only (not localStorage)\n      this.clearConstraintsFromMemory();\n\n      // Import constraints\n      for (const constraint of data.constraints) {\n        if (constraint.id && constraint.type && constraint.pixels) {\n          this.constraintMap.set(constraint.id, constraint);\n          this.updateSpatialIndex(constraint.id, constraint.pixels);\n\n          // Update next ID to avoid conflicts\n          const idNum = parseInt(constraint.id.replace('constraint_', ''));\n          if (!isNaN(idNum) && idNum >= this.nextId) {\n            this.nextId = idNum + 1;\n          }\n        }\n      }\n\n      console.log(`Imported ${data.constraints.length} constraints`);\n      return true;\n    } catch (error) {\n      console.error('Error importing constraints:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Save constraints to localStorage\n   */\n  saveConstraintsToStorage() {\n    try {\n      const constraintData = this.exportConstraints();\n      console.log('Saving constraints to localStorage:', constraintData);\n      console.log('Constraint map size:', this.constraintMap.size);\n      console.log('Constraint map keys:', Array.from(this.constraintMap.keys()));\n      localStorage.setItem(CONSTRAINT_STORAGE_KEY, JSON.stringify(constraintData));\n      console.log('Constraints saved to localStorage');\n    } catch (error) {\n      console.warn('Error saving constraints to localStorage:', error);\n    }\n  }\n\n  /**\n   * Load constraints from localStorage\n   * @returns {boolean} - True if load was successful\n   */\n  loadConstraintsFromStorage() {\n    try {\n      const saved = localStorage.getItem(CONSTRAINT_STORAGE_KEY);\n      if (saved) {\n        const success = this.importConstraints(saved);\n        if (success) {\n          console.log('Constraints loaded from localStorage');\n          return true;\n        }\n      }\n    } catch (error) {\n      console.warn('Error loading constraints from localStorage:', error);\n    }\n    return false;\n  }\n\n  /**\n   * Clear constraints from localStorage\n   */\n  clearConstraintsFromStorage() {\n    try {\n      localStorage.removeItem(CONSTRAINT_STORAGE_KEY);\n      console.log('Constraints cleared from localStorage');\n    } catch (error) {\n      console.warn('Error clearing constraints from localStorage:', error);\n    }\n  }\n}\n\n// Global constraint manager instance\nconst globalConstraintManager = new ConstraintManager();\n\n// --- Drawing Tools for Annotations ---\n\n/**\n * Drawing manager for creating spatial annotations\n * Handles circle (must-link) and line (boundary) drawing tools\n */\nclass DrawingManager {\n  constructor(map, constraintManager) {\n    this.map = map;\n    this.constraintManager = constraintManager;\n\n    // Drawing interactions\n    this.circleDrawInteraction = null;\n    this.lineDrawInteraction = null;\n\n    // Drawing state\n    this.isDrawingEnabled = false;\n    this.currentTool = null; // 'circle' or 'line'\n\n    // Status message\n    this.statusMessage = null;\n    this.keyboardHandler = null;\n\n    // Annotation layer for visual feedback\n    this.annotationSource = new VectorSource();\n    this.annotationLayer = new VectorLayer({\n      title: 'Annotations',\n      source: this.annotationSource,\n      style: this.getAnnotationStyle.bind(this),\n      zIndex: 1000 // Ensure annotations appear on top\n    });\n\n    // Add annotation layer to map\n    this.map.addLayer(this.annotationLayer);\n\n    // Initialize drawing interactions\n    this.initializeDrawingInteractions();\n  }\n\n  /**\n   * Get style for annotation features\n   */\n  getAnnotationStyle(feature) {\n    const geometry = feature.getGeometry();\n\n    if (geometry instanceof Circle) {\n      // Must-link constraint (circle)\n      return new Style({\n        stroke: new Stroke({\n          color: '#00ff00',\n          width: 2,\n          lineDash: [5, 5]\n        }),\n        fill: new Fill({\n          color: 'rgba(0, 255, 0, 0.1)'\n        })\n      });\n    } else if (geometry instanceof LineString) {\n      // Cannot-link constraint (line)\n      return new Style({\n        stroke: new Stroke({\n          color: '#ff0000',\n          width: 3,\n          lineDash: [10, 5]\n        })\n      });\n    }\n\n    // Default style\n    return new Style({\n      stroke: new Stroke({\n        color: '#666666',\n        width: 2\n      })\n    });\n  }\n\n  /**\n   * Initialize drawing interactions\n   */\n  initializeDrawingInteractions() {\n    // Circle drawing for must-link constraints\n    this.circleDrawInteraction = new Draw({\n      source: this.annotationSource,\n      type: 'Circle',\n      style: new Style({\n        stroke: new Stroke({\n          color: '#00ff00',\n          width: 2,\n          lineDash: [5, 5]\n        }),\n        fill: new Fill({\n          color: 'rgba(0, 255, 0, 0.2)'\n        })\n      })\n    });\n\n    // Line drawing for boundary constraints\n    this.lineDrawInteraction = new Draw({\n      source: this.annotationSource,\n      type: 'LineString',\n      style: new Style({\n        stroke: new Stroke({\n          color: '#ff0000',\n          width: 3,\n          lineDash: [10, 5]\n        })\n      })\n    });\n\n    // Event handlers for drawing completion\n    this.circleDrawInteraction.on('drawend', this.handleCircleDrawEnd.bind(this));\n    this.lineDrawInteraction.on('drawend', this.handleLineDrawEnd.bind(this));\n\n    // Initialize keyboard event handling\n    this.initializeKeyboardHandling();\n  }\n\n  /**\n   * Initialize keyboard event handling for drawing tools\n   */\n  initializeKeyboardHandling() {\n    // Add keyboard event listener to document\n    this.keyboardHandler = this.handleKeyboardEvent.bind(this);\n    document.addEventListener('keydown', this.keyboardHandler);\n  }\n\n  /**\n   * Handle keyboard events for drawing tools\n   */\n  handleKeyboardEvent(event) {\n    if (!this.isDrawingEnabled || !this.map) {\n      return; // Only handle keyboard events when drawing is enabled and map exists\n    }\n\n    switch (event.key) {\n      case 'Escape':\n        // Disable drawing on ESC\n        event.preventDefault();\n        this.disableAllDrawing();\n        if (typeof updateDrawingButtonStates === 'function') {\n          updateDrawingButtonStates();\n        }\n        console.log('Drawing disabled by ESC key');\n        break;\n\n      case 'Enter':\n        // Finish line drawing on ENTER (only for line tool)\n        if (this.currentTool === 'line') {\n          event.preventDefault();\n          // Show feedback that ENTER was pressed\n          this.showStatusMessage('Finishing line... Press ENTER again or click to complete');\n          console.log('Line drawing finished by ENTER key');\n        }\n        break;\n    }\n  }\n\n  /**\n   * Clean up keyboard event handling\n   */\n  cleanupKeyboardHandling() {\n    if (this.keyboardHandler) {\n      document.removeEventListener('keydown', this.keyboardHandler);\n      this.keyboardHandler = null;\n    }\n  }\n\n  /**\n   * Clean up all resources\n   */\n  cleanup() {\n    this.cleanupKeyboardHandling();\n    this.hideStatusMessage();\n    this.disableAllDrawing();\n  }\n\n  /**\n   * Handle circle drawing completion\n   */\n  handleCircleDrawEnd(event) {\n    console.log('Circle drawing completed');\n    const feature = event.feature;\n    const circle = feature.getGeometry();\n\n    console.log('Circle center:', circle.getCenter());\n    console.log('Circle radius:', circle.getRadius());\n\n    // Extract pixels within the circle\n    const pixels = this.extractPixelsFromCircle(circle);\n\n    console.log(`Extracted ${pixels.length} pixels from circle`);\n    if (pixels.length > 0) {\n      console.log('Sample pixels:', pixels.slice(0, 3)); // Log first 3 pixels for debugging\n\n      // Check if constraint manager exists\n      if (!this.constraintManager) {\n        console.error('Constraint manager not available');\n        this.annotationSource.removeFeature(feature);\n        return;\n      }\n\n      // Add must-link constraint (RGB will be calculated during clustering)\n      const constraintId = this.constraintManager.addConstraint(\n        'must-link',\n        pixels,\n        {\n          source: 'drawing',\n          shape: 'circle',\n          center: circle.getCenter(),\n          radius: circle.getRadius()\n        }\n      );\n\n      console.log(`Created constraint with ID: ${constraintId}`);\n\n      // Store constraint ID in feature for reference\n      feature.set('constraintId', constraintId);\n      feature.set('constraintType', 'must-link');\n\n      console.log(`Created must-link constraint with ${pixels.length} pixels`);\n\n      // Show success feedback\n      this.showStatusMessage(`Circle constraint created with ${pixels.length} pixels!`, 2000);\n\n      // Update constraint tooltip if available\n      if (typeof updateConstraintTooltip === 'function') {\n        updateConstraintTooltip();\n      }\n\n      // Trigger clustering update\n      this.updateClustering();\n    } else {\n      console.warn('No pixels found within drawn circle');\n      // Remove the feature if no pixels were captured\n      this.annotationSource.removeFeature(feature);\n\n      // Show error feedback\n      this.showStatusMessage('No pixels captured - try drawing a larger circle', 3000);\n    }\n  }\n\n  /**\n   * Handle line drawing completion\n   */\n  handleLineDrawEnd(event) {\n    const feature = event.feature;\n    const lineString = feature.getGeometry();\n\n    // Extract pixels on both sides of the line\n    const pixels = this.extractPixelsFromLine(lineString);\n\n    if (pixels.length > 0) {\n      // Check if constraint manager exists\n      if (!this.constraintManager) {\n        console.error('Constraint manager not available');\n        this.annotationSource.removeFeature(feature);\n        return;\n      }\n\n      // Add cannot-link constraint (RGB will be calculated during clustering)\n      const constraintId = this.constraintManager.addConstraint(\n        'cannot-link',\n        pixels,\n        {\n          source: 'drawing',\n          shape: 'line',\n          coordinates: lineString.getCoordinates()\n        }\n      );\n\n      // Store constraint ID in feature for reference\n      feature.set('constraintId', constraintId);\n      feature.set('constraintType', 'cannot-link');\n\n      console.log(`Created cannot-link constraint with ${pixels.length} pixels`);\n\n      // Show success feedback\n      this.showStatusMessage(`Line constraint created with ${pixels.length} pixels!`, 2000);\n\n      // Update constraint tooltip if available\n      if (typeof updateConstraintTooltip === 'function') {\n        updateConstraintTooltip();\n      }\n\n      // Trigger clustering update\n      this.updateClustering();\n    } else {\n      console.warn('No pixels found along drawn line');\n      // Remove the feature if no pixels were captured\n      this.annotationSource.removeFeature(feature);\n\n      // Show error feedback\n      this.showStatusMessage('No pixels captured - try drawing a longer line', 3000);\n    }\n  }\n\n  /**\n   * Extract pixels within a circle geometry\n   */\n  extractPixelsFromCircle(circle) {\n    const pixels = [];\n    const center = circle.getCenter();\n    const radius = circle.getRadius();\n\n    // Get current view data for coordinate conversion\n    const view = this.map.getView();\n    const viewData = {\n      center: view.getCenter(),\n      resolution: view.getResolution(),\n      mapSize: this.map.getSize()\n    };\n\n    if (!viewData.center || !viewData.resolution || !viewData.mapSize) {\n      console.warn('View data not available for pixel extraction');\n      return pixels;\n    }\n\n    // Calculate approximate pixel bounds based on circle\n    const extent = circle.getExtent();\n    const pixelBounds = this.getPixelBoundsFromExtent(extent, viewData);\n\n    if (!pixelBounds) {\n      return pixels;\n    }\n\n    // Sample pixels within the circle\n    for (let y = pixelBounds.minY; y <= pixelBounds.maxY; y++) {\n      for (let x = pixelBounds.minX; x <= pixelBounds.maxX; x++) {\n        // Convert pixel to map coordinates\n        const pixelCoord = this.pixelToMapCoordinate(x, y, pixelBounds.width, pixelBounds.height, viewData);\n\n        if (pixelCoord) {\n          // Check if pixel is within circle\n          const distance = Math.sqrt(\n            Math.pow(pixelCoord[0] - center[0], 2) +\n            Math.pow(pixelCoord[1] - center[1], 2)\n          );\n\n          if (distance <= radius) {\n            // We need to get RGB values from the current raster data\n            // For now, store coordinates and we'll extract RGB during clustering\n            pixels.push({\n              x,\n              y,\n              mapX: pixelCoord[0],\n              mapY: pixelCoord[1]\n            });\n          }\n        }\n      }\n    }\n\n    return pixels;\n  }\n\n  /**\n   * Extract pixels along a line geometry\n   */\n  extractPixelsFromLine(lineString) {\n    const pixels = [];\n    const coordinates = lineString.getCoordinates();\n\n    // Get current view data for coordinate conversion\n    const view = this.map.getView();\n    const viewData = {\n      center: view.getCenter(),\n      resolution: view.getResolution(),\n      mapSize: this.map.getSize()\n    };\n\n    if (!viewData.center || !viewData.resolution || !viewData.mapSize) {\n      console.warn('View data not available for pixel extraction');\n      return pixels;\n    }\n\n    // Get extent of the line\n    const extent = lineString.getExtent();\n    const pixelBounds = this.getPixelBoundsFromExtent(extent, viewData);\n\n    if (!pixelBounds) {\n      return pixels;\n    }\n\n    // Sample pixels along the line and buffer zone\n    const bufferDistance = 50; // pixels on each side of line\n\n    for (let y = pixelBounds.minY; y <= pixelBounds.maxY; y++) {\n      for (let x = pixelBounds.minX; x <= pixelBounds.maxX; x++) {\n        // Convert pixel to map coordinates\n        const pixelCoord = this.pixelToMapCoordinate(x, y, pixelBounds.width, pixelBounds.height, viewData);\n\n        if (pixelCoord) {\n          // Check if pixel is close to the line\n          const distanceToLine = this.distancePointToLineString(pixelCoord, coordinates);\n\n          // Convert buffer distance from pixels to map units\n          const bufferInMapUnits = bufferDistance * viewData.resolution;\n\n          if (distanceToLine <= bufferInMapUnits) {\n            pixels.push({\n              x,\n              y,\n              mapX: pixelCoord[0],\n              mapY: pixelCoord[1]\n            });\n          }\n        }\n      }\n    }\n\n    return pixels;\n  }\n\n  /**\n   * Calculate distance from a point to a line string\n   */\n  distancePointToLineString(point, lineCoordinates) {\n    let minDistance = Infinity;\n\n    for (let i = 0; i < lineCoordinates.length - 1; i++) {\n      const segmentStart = lineCoordinates[i];\n      const segmentEnd = lineCoordinates[i + 1];\n\n      const distance = this.distancePointToLineSegment(point, segmentStart, segmentEnd);\n      minDistance = Math.min(minDistance, distance);\n    }\n\n    return minDistance;\n  }\n\n  /**\n   * Calculate distance from a point to a line segment\n   */\n  distancePointToLineSegment(point, segmentStart, segmentEnd) {\n    const A = point[0] - segmentStart[0];\n    const B = point[1] - segmentStart[1];\n    const C = segmentEnd[0] - segmentStart[0];\n    const D = segmentEnd[1] - segmentStart[1];\n\n    const dot = A * C + B * D;\n    const lenSq = C * C + D * D;\n\n    if (lenSq === 0) {\n      // Degenerate segment (point)\n      return Math.sqrt(A * A + B * B);\n    }\n\n    let param = dot / lenSq;\n\n    let xx, yy;\n\n    if (param < 0) {\n      xx = segmentStart[0];\n      yy = segmentStart[1];\n    } else if (param > 1) {\n      xx = segmentEnd[0];\n      yy = segmentEnd[1];\n    } else {\n      xx = segmentStart[0] + param * C;\n      yy = segmentStart[1] + param * D;\n    }\n\n    const dx = point[0] - xx;\n    const dy = point[1] - yy;\n\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  /**\n   * Get pixel bounds from map extent\n   */\n  getPixelBoundsFromExtent(extent, viewData) {\n    const { center, resolution, mapSize } = viewData;\n\n    // Calculate the extent of the visible area\n    const halfWidth = (mapSize[0] * resolution) / 2;\n    const halfHeight = (mapSize[1] * resolution) / 2;\n\n    const viewExtent = [\n      center[0] - halfWidth,\n      center[1] - halfHeight,\n      center[0] + halfWidth,\n      center[1] + halfHeight\n    ];\n\n    // Convert extent to pixel coordinates\n    const width = mapSize[0];\n    const height = mapSize[1];\n\n    const minX = Math.max(0, Math.floor((extent[0] - viewExtent[0]) / (viewExtent[2] - viewExtent[0]) * width));\n    const maxX = Math.min(width - 1, Math.ceil((extent[2] - viewExtent[0]) / (viewExtent[2] - viewExtent[0]) * width));\n    const minY = Math.max(0, Math.floor((viewExtent[3] - extent[3]) / (viewExtent[3] - viewExtent[1]) * height));\n    const maxY = Math.min(height - 1, Math.ceil((viewExtent[3] - extent[1]) / (viewExtent[3] - viewExtent[1]) * height));\n\n    return {\n      minX,\n      minY,\n      maxX,\n      maxY,\n      width,\n      height\n    };\n  }\n\n  /**\n   * Convert pixel coordinates to map coordinates\n   */\n  pixelToMapCoordinate(pixelX, pixelY, width, height, viewData) {\n    const { center, resolution, mapSize } = viewData;\n\n    // Calculate the extent of the visible area\n    const halfWidth = (mapSize[0] * resolution) / 2;\n    const halfHeight = (mapSize[1] * resolution) / 2;\n\n    const viewExtent = [\n      center[0] - halfWidth,\n      center[1] - halfHeight,\n      center[0] + halfWidth,\n      center[1] + halfHeight\n    ];\n\n    // Convert pixel coordinates to map coordinates\n    const mapX = viewExtent[0] + (pixelX / width) * (viewExtent[2] - viewExtent[0]);\n    const mapY = viewExtent[3] - (pixelY / height) * (viewExtent[3] - viewExtent[1]);\n\n    return [mapX, mapY];\n  }\n\n  /**\n   * Enable circle drawing tool\n   */\n  enableCircleDrawing() {\n    this.disableAllDrawing();\n    this.map.addInteraction(this.circleDrawInteraction);\n    this.currentTool = 'circle';\n    this.isDrawingEnabled = true;\n    this.showDrawingFeedback();\n    console.log('Circle drawing enabled (must-link constraints)');\n  }\n\n  /**\n   * Enable line drawing tool\n   */\n  enableLineDrawing() {\n    this.disableAllDrawing();\n    this.map.addInteraction(this.lineDrawInteraction);\n    this.currentTool = 'line';\n    this.isDrawingEnabled = true;\n    this.showDrawingFeedback();\n    console.log('Line drawing enabled (cannot-link constraints)');\n  }\n\n  /**\n   * Disable all drawing tools\n   */\n  disableAllDrawing() {\n    this.map.removeInteraction(this.circleDrawInteraction);\n    this.map.removeInteraction(this.lineDrawInteraction);\n    this.currentTool = null;\n    this.isDrawingEnabled = false;\n    this.hideDrawingFeedback();\n    console.log('Drawing disabled');\n  }\n\n  /**\n   * Show visual feedback that drawing is active\n   */\n  showDrawingFeedback() {\n    // Add a temporary overlay or change cursor\n    const mapElement = this.map ? this.map.getViewport() : null;\n    if (mapElement) {\n      mapElement.style.cursor = this.currentTool === 'circle' ? 'crosshair' : 'crosshair';\n\n      // Add a temporary status message\n      this.showStatusMessage(`Drawing ${this.currentTool === 'circle' ? 'circle' : 'line'} - Press ESC to cancel, ${this.currentTool === 'line' ? 'ENTER to finish' : 'click to draw'}`);\n    }\n  }\n\n  /**\n   * Hide visual feedback that drawing is active\n   */\n  hideDrawingFeedback() {\n    const mapElement = this.map ? this.map.getViewport() : null;\n    if (mapElement) {\n      mapElement.style.cursor = '';\n    }\n    this.hideStatusMessage();\n  }\n\n  /**\n   * Show a temporary status message\n   */\n  showStatusMessage(message, duration = 3000) {\n    // Remove existing status message\n    this.hideStatusMessage();\n\n    // Create status message element\n    this.statusMessage = document.createElement('div');\n    this.statusMessage.id = 'drawing-status';\n    this.statusMessage.style.cssText = `\n      position: fixed;\n      top: 20px;\n      left: 50%;\n      transform: translateX(-50%);\n      background: rgba(0, 0, 0, 0.8);\n      color: white;\n      padding: 10px 20px;\n      border-radius: 5px;\n      z-index: 10000;\n      font-family: Arial, sans-serif;\n      font-size: 14px;\n      pointer-events: none;\n      animation: fadeOut 3s ease-out forwards;\n    `;\n    this.statusMessage.textContent = message;\n\n    document.body.appendChild(this.statusMessage);\n\n    // Remove status message after duration\n    setTimeout(() => {\n      if (this.statusMessage && this.statusMessage.parentNode) {\n        this.statusMessage.remove();\n      }\n      this.statusMessage = null;\n    }, duration);\n  }\n\n  /**\n   * Hide the status message\n   */\n  hideStatusMessage() {\n    if (this.statusMessage && this.statusMessage.parentNode) {\n      this.statusMessage.remove();\n    }\n    this.statusMessage = null;\n  }\n\n  /**\n   * Clear all annotations and constraints\n   */\n  clearAllAnnotations() {\n    // Check if constraint manager exists\n    if (!this.constraintManager) {\n      console.error('Constraint manager not available');\n      return;\n    }\n\n    // Remove all constraint-related features\n    const features = this.annotationSource.getFeatures();\n    const constraintIds = [];\n\n    features.forEach(feature => {\n      const constraintId = feature.get('constraintId');\n      if (constraintId) {\n        constraintIds.push(constraintId);\n      }\n    });\n\n    // Remove constraints from manager\n    constraintIds.forEach(id => {\n      this.constraintManager.removeConstraint(id);\n    });\n\n    // Clear all features from annotation layer\n    this.annotationSource.clear();\n\n    // Clear constraints from localStorage\n    this.constraintManager.clearConstraintsFromStorage();\n\n    console.log(`Cleared ${constraintIds.length} constraints and annotations`);\n\n    // Trigger clustering update\n    this.updateClustering();\n  }\n\n  /**\n   * Clear all annotations only (without affecting constraints)\n   */\n  clearAllAnnotationsOnly() {\n    this.annotationSource.clear();\n    console.log('Cleared all annotations (constraints preserved)');\n  }\n\n  /**\n   * Remove specific annotation and its constraint\n   */\n  removeAnnotation(feature) {\n    const constraintId = feature.get('constraintId');\n\n    if (constraintId) {\n      this.constraintManager.removeConstraint(constraintId);\n      console.log(`Removed constraint ${constraintId}`);\n    }\n\n    this.annotationSource.removeFeature(feature);\n\n    // Trigger clustering update\n    this.updateClustering();\n  }\n\n  /**\n   * Get current drawing state\n   */\n  getDrawingState() {\n    return {\n      isEnabled: this.isDrawingEnabled,\n      currentTool: this.currentTool,\n      annotationCount: this.annotationSource.getFeatures().length,\n      constraintCount: this.constraintManager.getAllConstraints().length\n    };\n  }\n\n      /**\n   * Get current image data from the raster source\n   */\n  getCurrentImageData() {\n    try {\n      // Get the current raster source\n      const rasterSource = this.map.getLayers().getArray()\n        .find(layer => layer.getSource() instanceof RasterSource);\n\n      if (rasterSource) {\n        const source = rasterSource.getSource();\n\n        // Try to get the canvas from the raster source\n        if (source && source.getImage) {\n          const image = source.getImage();\n          if (image && image.getImage) {\n            const canvas = image.getImage();\n            if (canvas && canvas.getContext) {\n              const ctx = canvas.getContext('2d');\n              const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n              return {\n                width: canvas.width,\n                height: canvas.height,\n                data: imageData.data\n              };\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.warn('Could not get current image data:', error);\n    }\n    return null;\n  }\n\n  /**\n   * Get current image data from the base imagery layer\n   */\n  getBaseImageData() {\n    try {\n      // Get the base imagery layer\n      const imageryLayer = this.map.getLayers().getArray()\n        .find(layer => layer.get('title') === 'Satellite Imagery');\n\n      if (imageryLayer) {\n        const source = imageryLayer.getSource();\n        // For now, return null - we'll need to access the actual image data differently\n        return null;\n      }\n    } catch (error) {\n      console.warn('Could not get base image data:', error);\n    }\n    return null;\n  }\n\n  /**\n   * Trigger clustering update\n   */\n  updateClustering() {\n    // Only trigger clustering if map is ready\n    if (mapReady) {\n      // Trigger raster recalculation to apply new constraints\n      raster.changed();\n    } else {\n      console.log('Map not ready yet, clustering will be triggered when map loads');\n    }\n  }\n\n  /**\n   * Load constraints from localStorage on initialization\n   */\n  loadSavedConstraints() {\n    if (this.constraintManager) {\n      const loaded = this.constraintManager.loadConstraintsFromStorage();\n      if (loaded) {\n        console.log('Loaded saved constraints from localStorage');\n\n        // Restore drawing annotations from loaded constraints\n        this.restoreDrawingAnnotations();\n\n        // Update constraint tooltip if available (but don't fail if DOM not ready)\n        setTimeout(() => {\n          if (typeof updateConstraintTooltip === 'function') {\n            updateConstraintTooltip();\n          }\n        }, 100); // Small delay to ensure DOM is ready\n\n        // Trigger clustering update after constraints are loaded\n        setTimeout(() => {\n          this.updateClustering();\n        }, 100); // Small delay to ensure map is ready\n      }\n    }\n  }\n\n  /**\n   * Restore drawing annotations from loaded constraints\n   */\n  restoreDrawingAnnotations() {\n    if (!this.constraintManager) return;\n\n    const constraints = this.constraintManager.getAllConstraints();\n    console.log(`Restoring ${constraints.length} drawing annotations from constraints`);\n\n    for (const constraint of constraints) {\n      if (constraint.metadata && constraint.metadata.source === 'drawing') {\n        this.restoreAnnotationFromConstraint(constraint);\n      }\n    }\n  }\n\n  /**\n   * Restore a single annotation from constraint metadata\n   */\n  restoreAnnotationFromConstraint(constraint) {\n    try {\n      let feature = null;\n\n      if (constraint.metadata.shape === 'circle') {\n        // Restore circle annotation\n        const center = constraint.metadata.center;\n        const radius = constraint.metadata.radius;\n\n        if (center && radius) {\n          const circle = new Circle(center, radius);\n          feature = new Feature({\n            geometry: circle,\n            constraintId: constraint.id,\n            constraintType: constraint.type\n          });\n\n          console.log(`Restored circle annotation for constraint ${constraint.id}`);\n        }\n      } else if (constraint.metadata.shape === 'line') {\n        // Restore line annotation\n        const coordinates = constraint.metadata.coordinates;\n\n        if (coordinates && coordinates.length > 0) {\n          const lineString = new LineString(coordinates);\n          feature = new Feature({\n            geometry: lineString,\n            constraintId: constraint.id,\n            constraintType: constraint.type\n          });\n\n          console.log(`Restored line annotation for constraint ${constraint.id}`);\n        }\n      }\n\n      if (feature) {\n        this.annotationSource.addFeature(feature);\n      }\n    } catch (error) {\n      console.warn(`Error restoring annotation for constraint ${constraint.id}:`, error);\n    }\n  }\n}\n\n// Global drawing manager instance\nlet globalDrawingManager = null;\n\n// Function to save configuration to localStorage\nfunction saveConfiguration(config) {\n  try {\n    localStorage.setItem(CONFIG_STORAGE_KEY, JSON.stringify(config));\n  } catch (error) {\n    console.warn('Error saving configuration to localStorage:', error);\n  }\n}\n\n// Function to load configuration from localStorage\nfunction loadConfiguration() {\n  try {\n    const saved = localStorage.getItem(CONFIG_STORAGE_KEY);\n    if (saved) {\n      const config = JSON.parse(saved);\n      // Merge with defaults to handle missing properties\n      return { ...DEFAULT_CONFIG, ...config };\n    }\n  } catch (error) {\n    console.warn('Error loading configuration from localStorage:', error);\n  }\n  return DEFAULT_CONFIG;\n}\n\n// Function to reset configuration to defaults\nfunction resetConfiguration() {\n  // Update UI controls to default values\n  epsilonControl.value = DEFAULT_CONFIG.epsilon;\n  minClusterSizeControl.value = DEFAULT_CONFIG.minClusterSize;\n  coordWeightControl.value = DEFAULT_CONFIG.coordWeight;\n  constraintStrengthControl.value = DEFAULT_CONFIG.constraintStrength;\n\n  // Update display values\n  updateEpsilonValue();\n  updateMinClusterSizeValue();\n  updateCoordWeightValue();\n  updateConstraintStrengthValue();\n\n  // Reset raster visibility\n  if (!DEFAULT_CONFIG.rasterVisible) {\n    rasterImage.setOpacity(0);\n    toggleRasterButton.textContent = 'Show Raster';\n    rasterVisible = false;\n  } else {\n    rasterImage.setOpacity(0.25);\n    toggleRasterButton.textContent = 'Hide Raster';\n    rasterVisible = true;\n  }\n\n  // Save default configuration\n  saveConfiguration(DEFAULT_CONFIG);\n\n  // Trigger raster update\n  raster.changed();\n\n  console.log('Configuration reset to defaults');\n}\n\n// Function to apply configuration to UI\nfunction applyConfiguration(config) {\n  epsilonControl.value = config.epsilon;\n  minClusterSizeControl.value = config.minClusterSize;\n  coordWeightControl.value = config.coordWeight;\n  constraintStrengthControl.value = config.constraintStrength || DEFAULT_CONFIG.constraintStrength;\n\n  updateEpsilonValue();\n  updateMinClusterSizeValue();\n  updateCoordWeightValue();\n\n  // Apply raster visibility\n  if (!config.rasterVisible) {\n    rasterImage.setOpacity(0);\n    toggleRasterButton.textContent = 'Show Raster';\n    rasterVisible = false;\n  } else {\n    rasterImage.setOpacity(0.25);\n    toggleRasterButton.textContent = 'Hide Raster';\n    rasterVisible = true;\n  }\n}\n\n// Function to save current configuration\nfunction saveCurrentConfiguration() {\n  const config = {\n    epsilon: parseFloat(epsilonControl.value),\n    minClusterSize: parseInt(minClusterSizeControl.value),\n    coordWeight: parseFloat(coordWeightControl.value),\n    constraintStrength: parseFloat(constraintStrengthControl.value),\n    rasterVisible: rasterVisible\n  };\n  saveConfiguration(config);\n}\n\n// --- DBSCAN implementation for feature space clustering (RGB + coordinates) ---\nfunction dbscanClusterFeatures(image, epsilon, minPts = 3, coordWeight = 1.0, constraintData = null, viewData = null) {\n  const width = image.width;\n  const height = image.height;\n  const inputData = image.data;\n  const nPixels = width * height;\n  const visited = new Uint8Array(nPixels);\n  const labels = new Int32Array(nPixels).fill(-1);\n  let clusterId = 0;\n\n  // Calculate RGB values for constraints that need them and check view visibility\n  if (constraintData && constraintData.constraints) {\n    let activeConstraints = 0;\n    let calculatedRGB = 0;\n\n    for (const constraint of constraintData.constraints) {\n      // Check if constraint has pixels in current view\n      let pixelsInView = 0;\n      let totalR = 0, totalG = 0, totalB = 0;\n      let validPixels = 0;\n\n      for (const pixel of constraint.pixels) {\n        const currentPixelCoords = mapCoordsToPixelCoords(pixel.mapX, pixel.mapY, width, height, viewData);\n        if (currentPixelCoords) {\n          pixelsInView++;\n          const [x, y] = currentPixelCoords;\n          const idx = y * width + x;\n          if (idx >= 0 && idx < nPixels) {\n            totalR += inputData[idx * 4];\n            totalG += inputData[idx * 4 + 1];\n            totalB += inputData[idx * 4 + 2];\n            validPixels++;\n          }\n        }\n      }\n\n      // Activate constraint if it has pixels in current view\n      constraint.active = pixelsInView > 0;\n\n      // Calculate RGB values if needed and constraint is in view\n      if (constraint.active && constraint.averageRGB && constraint.averageRGB.needsCalculation && validPixels > 0) {\n        constraint.averageRGB = {\n          r: Math.round(totalR / validPixels),\n          g: Math.round(totalG / validPixels),\n          b: Math.round(totalB / validPixels),\n          pixelCount: validPixels,\n          needsCalculation: false\n        };\n        calculatedRGB++;\n        console.log(`Calculated RGB for constraint ${constraint.id}: (${constraint.averageRGB.r},${constraint.averageRGB.g},${constraint.averageRGB.b}) from ${validPixels} pixels`);\n      }\n\n      if (constraint.active) {\n        activeConstraints++;\n      }\n    }\n  }\n\n  // Convert map coordinates to pixel coordinates for current view\n  function mapCoordsToPixelCoords(mapX, mapY, width, height, viewData) {\n    if (!viewData || !viewData.center || !viewData.resolution || !viewData.mapSize) {\n      return null;\n    }\n\n    const [centerX, centerY] = viewData.center;\n    const resolution = viewData.resolution;\n    const [mapWidth, mapHeight] = viewData.mapSize;\n\n    // Calculate map extent\n    const extentWidth = mapWidth * resolution;\n    const extentHeight = mapHeight * resolution;\n    const minX = centerX - extentWidth / 2;\n    const maxY = centerY + extentHeight / 2;\n\n    // Convert map coordinates to pixel coordinates\n    const pixelX = Math.round((mapX - minX) / extentWidth * width);\n    const pixelY = Math.round((maxY - mapY) / extentHeight * height);\n\n    // Check if pixel is within image bounds\n    if (pixelX >= 0 && pixelX < width && pixelY >= 0 && pixelY < height) {\n      return [pixelX, pixelY];\n    }\n\n    return null;\n  }\n\n  function pixelIdx(x, y) {\n    return y * width + x;\n  }\n\n  // Extract features for a pixel: [R, G, B, normalized_x, normalized_y]\n  function getFeatures(idx) {\n    const x = idx % width;\n    const y = Math.floor(idx / width);\n\n    // RGB values (0-255)\n    const r = inputData[idx * 4];\n    const g = inputData[idx * 4 + 1];\n    const b = inputData[idx * 4 + 2];\n\n    // Normalize coordinates to [0, 1] range for better balance with RGB\n    const normalizedX = x / width;\n    const normalizedY = y / height;\n\n    return [r, g, b, normalizedX, normalizedY];\n  }\n\n\n\n  // Simple constraint checking based on RGB similarity with safeguards\n  function checkConstraints(r1, g1, b1, r2, g2, b2, constraintData) {\n    if (!constraintData || !constraintData.constraints) {\n      return null; // No constraints\n    }\n\n    // More conservative RGB tolerance to prevent over-merging\n    const rgbTolerance = 15; // Reduced from 30 to 15\n\n    // Check each constraint\n    for (const constraint of constraintData.constraints) {\n      if (!constraint.active || !constraint.averageRGB) continue;\n\n      const avgRGB = constraint.averageRGB;\n\n      // Skip constraints that need RGB calculation (they'll be handled later)\n      if (avgRGB.needsCalculation) continue;\n\n      // Calculate RGB distance for more precise matching\n      const rgbDist1 = Math.sqrt((avgRGB.r - r1) ** 2 + (avgRGB.g - g1) ** 2 + (avgRGB.b - b1) ** 2);\n      const rgbDist2 = Math.sqrt((avgRGB.r - r2) ** 2 + (avgRGB.g - g2) ** 2 + (avgRGB.b - b2) ** 2);\n\n      // Use Euclidean distance instead of component-wise tolerance for more accurate matching\n      const pixel1Similar = rgbDist1 <= rgbTolerance;\n      const pixel2Similar = rgbDist2 <= rgbTolerance;\n\n      if (pixel1Similar && pixel2Similar) {\n        // Additional safeguard: only apply constraints if pixels are already somewhat similar\n        const pixelSimilarity = Math.sqrt((r1 - r2) ** 2 + (g1 - g2) ** 2 + (b1 - b2) ** 2);\n        if (pixelSimilarity <= rgbTolerance * 2) { // Only force clustering if pixels are already similar\n          return constraint.type; // Return 'must-link' or 'cannot-link'\n        }\n      }\n    }\n\n    return null; // No constraint applies\n  }\n\n    // Check constraint influence as a modifier (more subtle than absolute values)\n  function checkConstraintInfluence(r1, g1, b1, r2, g2, b2, constraintData) {\n    if (!constraintData || !constraintData.constraints) {\n      return 0; // No influence\n    }\n\n    // Get constraint strength from data\n    const constraintStrength = constraintData.constraintStrength || 0.5;\n\n    // More conservative RGB tolerance\n    const rgbTolerance = 50;\n\n    // Count active constraints to ensure we have some in current view\n    let activeConstraints = 0;\n    for (const constraint of constraintData.constraints) {\n      if (constraint.active && constraint.averageRGB && !constraint.averageRGB.needsCalculation) {\n        activeConstraints++;\n      }\n    }\n\n    // If no active constraints in current view, don't apply any influence\n    if (activeConstraints === 0) {\n      return 0;\n    }\n\n    for (const constraint of constraintData.constraints) {\n      if (!constraint.active || !constraint.averageRGB || constraint.averageRGB.needsCalculation) continue;\n\n      const avgRGB = constraint.averageRGB;\n\n      // Calculate RGB distance for more precise matching\n      const rgbDist1 = Math.sqrt((avgRGB.r - r1) ** 2 + (avgRGB.g - g1) ** 2 + (avgRGB.b - b1) ** 2);\n      const rgbDist2 = Math.sqrt((avgRGB.r - r2) ** 2 + (avgRGB.g - g2) ** 2 + (avgRGB.b - b2) ** 2);\n\n      // Check if both pixels are similar to the constraint's average RGB\n      const pixel1Similar = rgbDist1 <= rgbTolerance;\n      const pixel2Similar = rgbDist2 <= rgbTolerance;\n\n      if (pixel1Similar && pixel2Similar) {\n        // Calculate how similar the pixels are to each other\n        const pixelSimilarity = Math.sqrt((r1 - r2) ** 2 + (g1 - g2) ** 2 + (b1 - b2) ** 2);\n\n        if (constraint.type === 'must-link') {\n          // Apply must-link as a distance reduction (but not to zero)\n          const reduction = (pixelSimilarity / rgbTolerance) * 0.8 * constraintStrength;\n          return Math.max(0.1, 1.0 - reduction);\n        } else if (constraint.type === 'cannot-link') {\n          // Apply cannot-link as a distance increase (but not to infinity)\n          const increase = (pixelSimilarity / rgbTolerance) * 2.0 * constraintStrength;\n          return 1.0 + increase;\n        }\n      }\n    }\n\n    return 0; // No influence\n  }\n\n\n\n  // Calculate distance in feature space with weighted coordinates and constraints\n  function distFeatures(idx1, idx2) {\n    const a = getFeatures(idx1);\n    const b = getFeatures(idx2);\n\n    // Extract RGB values for constraint checking\n    const r1 = a[0], g1 = a[1], b1 = a[2];\n    const r2 = b[0], g2 = b[1], b2 = b[2];\n\n    // Check constraints if constraint data is provided\n    if (constraintData) {\n      const constraintType = checkConstraints(r1, g1, b1, r2, g2, b2, constraintData);\n\n      if (constraintType === 'must-link') {\n        return 0.0; // Zero distance to force clustering\n      } else if (constraintType === 'cannot-link') {\n        return 1000.0; // Very large distance to prevent clustering\n      }\n    }\n\n    // Calculate base distance\n    const rgbDist = ((r1 - r2) ** 2 + (g1 - g2) ** 2 + (b1 - b2) ** 2) / (255 * 255 * 3);\n    const coordDist = coordWeight * (Math.abs(a[3] - b[3]) + Math.abs(a[4] - b[4]));\n    const baseDistance = Math.sqrt(rgbDist) + coordDist;\n\n    // Apply constraint influence as a modifier rather than absolute values\n    if (constraintData) {\n      const constraintInfluence = checkConstraintInfluence(r1, g1, b1, r2, g2, b2, constraintData);\n      if (constraintInfluence !== 0) {\n        // Apply constraint as a modifier to the base distance\n        const modifiedDistance = baseDistance * constraintInfluence;\n        return modifiedDistance;\n      }\n    }\n\n    return baseDistance;\n  }\n\n  function regionQuery(idx) {\n    const neighbors = [];\n    const x0 = idx % width;\n    const y0 = Math.floor(idx / width);\n    for (let dy = -1; dy <= 1; dy++) {\n      for (let dx = -1; dx <= 1; dx++) {\n        const x = x0 + dx;\n        const y = y0 + dy;\n        if (x >= 0 && x < width && y >= 0 && y < height) {\n          const nIdx = pixelIdx(x, y);\n          if (distFeatures(idx, nIdx) <= epsilon) {\n            neighbors.push(nIdx);\n          }\n        }\n      }\n    }\n    return neighbors;\n  }\n\n  for (let idx = 0; idx < nPixels; idx++) {\n    if (visited[idx]) continue;\n    visited[idx] = 1;\n    const neighbors = regionQuery(idx);\n    if (neighbors.length < minPts) {\n      labels[idx] = -1; // noise\n    } else {\n      // expand cluster\n      const queue = [idx, ...neighbors];\n      labels[idx] = clusterId;\n      while (queue.length) {\n        const current = queue.pop();\n        if (!visited[current]) {\n          visited[current] = 1;\n          const nbs = regionQuery(current);\n          if (nbs.length >= minPts) {\n            queue.push(...nbs);\n          }\n        }\n        if (labels[current] === -1) {\n          labels[current] = clusterId;\n        }\n        if (labels[current] === -1 || labels[current] === undefined) {\n          labels[current] = clusterId;\n        }\n      }\n      clusterId++;\n    }\n  }\n  return labels;\n}\n\nfunction randomColor(seed) {\n  // Simple deterministic color for cluster id\n  const r = (Math.sin(seed + 1) * 10000) % 256;\n  const g = (Math.sin(seed + 2) * 10000) % 256;\n  const b = (Math.sin(seed + 3) * 10000) % 256;\n  return [Math.abs(r), Math.abs(g), Math.abs(b)];\n}\n\n// --- Moore Neighborhood Boundary Tracing Algorithm ---\n\nfunction traceBoundary(labels, width, height, startX, startY, clusterId) {\n  // Moore neighborhood boundary tracing algorithm\n  const boundary = [];\n\n  // Moore neighborhood directions (8-connected) - defined locally to avoid lib serialization issues\n  const MOORE_DIRECTIONS = [\n    [-1, -1], [-1, 0], [-1, 1],  // top-left, top, top-right\n    [0, 1],                      // right\n    [1, 1], [1, 0], [1, -1],     // bottom-right, bottom, bottom-left\n    [0, -1]                      // left\n  ];\n\n  // Helper function to check if a pixel belongs to the cluster\n  function isClusterPixel(x, y) {\n    if (x < 0 || x >= width || y < 0 || y >= height) {\n      return false; // Outside image bounds\n    }\n    const idx = y * width + x;\n    return labels[idx] === clusterId;\n  }\n\n  // Check if this is a single pixel cluster\n  let neighborCount = 0;\n  for (const [dx, dy] of MOORE_DIRECTIONS) {\n    if (isClusterPixel(startX + dx, startY + dy)) {\n      neighborCount++;\n    }\n  }\n\n  // Handle single pixel cluster\n  if (neighborCount === 0) {\n    boundary.push([startX, startY]);\n    return boundary;\n  }\n\n  // Find the leftmost pixel in the starting row\n  let currentX = startX;\n  let currentY = startY;\n  while (currentX > 0 && isClusterPixel(currentX - 1, currentY)) {\n    currentX--;\n  }\n\n  const startPixel = [currentX, currentY];\n  boundary.push([currentX, currentY]);\n\n  // Find initial direction - look for first non-cluster pixel\n  let direction = 0; // Start looking north-west\n\n  // Find the first background pixel when moving clockwise from north-west\n  for (let i = 0; i < 8; i++) {\n    const dir = MOORE_DIRECTIONS[(direction + i) % 8];\n    const checkX = currentX + dir[0];\n    const checkY = currentY + dir[1];\n    if (!isClusterPixel(checkX, checkY)) {\n      direction = (direction + i) % 8;\n      break;\n    }\n  }\n\n  let prevDirection = direction;\n  let iterationCount = 0;\n  const maxIterations = Math.max(width * height, 10000); // Safety limit\n\n  do {\n    iterationCount++;\n\n    // Look for next boundary pixel\n    let found = false;\n\n    // Start searching from the direction counter-clockwise from previous direction\n    let searchDir = (prevDirection + 6) % 8; // 6 steps counter-clockwise (equivalent to -2 mod 8)\n\n    for (let i = 0; i < 8; i++) {\n      const dir = MOORE_DIRECTIONS[(searchDir + i) % 8];\n      const nextX = currentX + dir[0];\n      const nextY = currentY + dir[1];\n\n      if (isClusterPixel(nextX, nextY)) {\n        // Found next boundary pixel\n        currentX = nextX;\n        currentY = nextY;\n        prevDirection = (searchDir + i) % 8;\n        boundary.push([currentX, currentY]);\n        found = true;\n        break;\n      }\n    }\n\n    if (!found) {\n      // No next pixel found - this might be the end of tracing for irregular shapes\n      break;\n    }\n\n    // Check if we've returned to start\n    if (currentX === startPixel[0] && currentY === startPixel[1] && boundary.length > 2) {\n      // Remove duplicate start point\n      boundary.pop();\n      break;\n    }\n\n    // Safety check to prevent infinite loops\n    if (iterationCount > maxIterations) {\n      console.warn('Boundary tracing exceeded maximum iterations (' + maxIterations + ') for cluster ' + clusterId);\n      break;\n    }\n\n  } while (true);\n\n  return boundary;\n}\n\nfunction extractClusterBoundaries(labels, width, height) {\n  const boundaries = {};\n  const processed = new Set();\n\n  // Moore neighborhood directions (8-connected) - defined locally to avoid lib serialization issues\n  const MOORE_DIRECTIONS = [\n    [-1, -1], [-1, 0], [-1, 1],  // top-left, top, top-right\n    [0, 1],                      // right\n    [1, 1], [1, 0], [1, -1],     // bottom-right, bottom, bottom-left\n    [0, -1]                      // left\n  ];\n\n  // First pass: count pixels per cluster\n  const clusterSizes = {};\n  for (let i = 0; i < labels.length; i++) {\n    const clusterId = labels[i];\n    if (clusterId !== -1) {\n      clusterSizes[clusterId] = (clusterSizes[clusterId] || 0) + 1;\n    }\n  }\n\n  // Filter out small clusters (< 100 pixels)\n  const MIN_CLUSTER_SIZE = 500;\n  const validClusters = new Set();\n  Object.entries(clusterSizes).forEach(([clusterId, size]) => {\n    if (size >= MIN_CLUSTER_SIZE) {\n      validClusters.add(parseInt(clusterId));\n    }\n  });\n\n  // Find all clusters and their boundary starting points\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const idx = y * width + x;\n      const clusterId = labels[idx];\n\n      if (clusterId === -1) continue; // Skip noise pixels\n      if (!validClusters.has(clusterId)) continue; // Skip small clusters\n\n      if (!boundaries[clusterId] && !processed.has(clusterId + '-' + x + '-' + y)) {\n        // Check if this pixel is on the boundary (has at least one non-cluster neighbor)\n        let isBoundary = false;\n\n        for (const [dx, dy] of MOORE_DIRECTIONS) {\n          const nx = x + dx;\n          const ny = y + dy;\n\n          if (nx < 0 || nx >= width || ny < 0 || ny >= height) {\n            isBoundary = true; // Edge of image\n            break;\n          }\n\n          const nIdx = ny * width + nx;\n          if (labels[nIdx] !== clusterId) {\n            isBoundary = true; // Different cluster or noise\n            break;\n          }\n        }\n\n        if (isBoundary) {\n          try {\n            const boundary = traceBoundary(labels, width, height, x, y, clusterId);\n            if (boundary.length > 0) {\n              boundaries[clusterId] = boundary;\n\n              // Mark all boundary pixels as processed for this cluster\n              for (const [bx, by] of boundary) {\n                processed.add(clusterId + '-' + bx + '-' + by);\n              }\n            }\n          } catch (error) {\n            console.warn('Error tracing boundary for cluster ' + clusterId + ':', error);\n          }\n        }\n      }\n    }\n  }\n\n  return boundaries;\n}\n\n// Utility function to get coordinates for pixels using provided view data\nfunction getPixelCoordinates(labels, width, height, viewData) {\n  if (!viewData || !viewData.center || !viewData.resolution || !viewData.mapSize) {\n    console.warn('View data not available for coordinate conversion - clustering will proceed without coordinate mapping');\n    return {};\n  }\n\n  const { center, resolution, mapSize } = viewData;\n\n  // Additional validation\n  if (!Array.isArray(center) || center.length !== 2 ||\n      typeof resolution !== 'number' || resolution <= 0 ||\n      !Array.isArray(mapSize) || mapSize.length !== 2 || mapSize[0] <= 0 || mapSize[1] <= 0) {\n    console.warn('Invalid view data for coordinate conversion - clustering will proceed without coordinate mapping');\n    return {};\n  }\n\n  // Calculate the extent of the visible area\n  const halfWidth = (mapSize[0] * resolution) / 2;\n  const halfHeight = (mapSize[1] * resolution) / 2;\n\n  const viewExtent = [\n    center[0] - halfWidth,\n    center[1] - halfHeight,\n    center[0] + halfWidth,\n    center[1] + halfHeight\n  ];\n\n  const pixelToCoord = (pixelX, pixelY) => {\n    // Convert pixel coordinates to map coordinates\n    const mapX = viewExtent[0] + (pixelX / width) * (viewExtent[2] - viewExtent[0]);\n    const mapY = viewExtent[3] - (pixelY / height) * (viewExtent[3] - viewExtent[1]);\n\n    // Return map coordinates (EPSG:3857 by default for web mercator)\n    return [mapX, mapY];\n  };\n\n  const clusterCoordinates = {};\n  const nPixels = width * height;\n\n  for (let idx = 0; idx < nPixels; idx++) {\n    const label = labels[idx];\n    if (label !== -1) { // Skip noise pixels\n      const pixelX = idx % width;\n      const pixelY = Math.floor(idx / width);\n      const coords = pixelToCoord(pixelX, pixelY);\n\n      if (!clusterCoordinates[label]) {\n        clusterCoordinates[label] = [];\n      }\n      clusterCoordinates[label].push({\n        pixelX,\n        pixelY,\n        coordinates: coords,\n        pixelIndex: idx\n      });\n    }\n  }\n\n  return clusterCoordinates;\n}\n\n// Function to get coordinates for a specific pixel\nfunction getPixelCoordinate(pixelX, pixelY, width, height, viewData) {\n  if (!viewData || !viewData.center || !viewData.resolution || !viewData.mapSize) {\n    console.warn('View data not available for coordinate conversion');\n    return null;\n  }\n\n  // Additional validation\n  if (!Array.isArray(viewData.center) || viewData.center.length !== 2 ||\n      typeof viewData.resolution !== 'number' || viewData.resolution <= 0 ||\n      !Array.isArray(viewData.mapSize) || viewData.mapSize.length !== 2 ||\n      viewData.mapSize[0] <= 0 || viewData.mapSize[1] <= 0) {\n    console.warn('Invalid view data for coordinate conversion');\n    return null;\n  }\n\n  const { center, resolution, mapSize } = viewData;\n\n  const halfWidth = (mapSize[0] * resolution) / 2;\n  const halfHeight = (mapSize[1] * resolution) / 2;\n\n  const viewExtent = [\n    center[0] - halfWidth,\n    center[1] - halfHeight,\n    center[0] + halfWidth,\n    center[1] + halfHeight\n  ];\n\n  const mapX = viewExtent[0] + (pixelX / width) * (viewExtent[2] - viewExtent[0]);\n  const mapY = viewExtent[3] - (pixelY / height) * (viewExtent[3] - viewExtent[1]);\n\n  return [mapX, mapY];\n}\n\n// Function to get coordinates for all pixels in a specific cluster\nfunction getClusterCoordinates(clusterId, labels, width, height, viewData) {\n  const clusterCoordinates = getPixelCoordinates(labels, width, height, viewData);\n  return clusterCoordinates[clusterId] || [];\n}\n\n// Function to convert boundary pixel coordinates to map coordinates\nfunction getBoundaryCoordinates(boundaries, width, height, viewData) {\n  if (!viewData || !viewData.center || !viewData.resolution || !viewData.mapSize) {\n    console.warn('View data not available for boundary coordinate conversion - boundaries will be created without coordinate mapping');\n    return {};\n  }\n\n  // Additional validation\n  if (!Array.isArray(viewData.center) || viewData.center.length !== 2 ||\n      typeof viewData.resolution !== 'number' || viewData.resolution <= 0 ||\n      !Array.isArray(viewData.mapSize) || viewData.mapSize.length !== 2 ||\n      viewData.mapSize[0] <= 0 || viewData.mapSize[1] <= 0) {\n    console.warn('Invalid view data for boundary coordinate conversion - boundaries will be created without coordinate mapping');\n    return {};\n  }\n\n  const boundaryCoordinates = {};\n\n  for (const [clusterId, boundary] of Object.entries(boundaries)) {\n    boundaryCoordinates[clusterId] = boundary.map(([pixelX, pixelY]) => {\n      const coords = getPixelCoordinate(pixelX, pixelY, width, height, viewData);\n      return {\n        pixelX,\n        pixelY,\n        coordinates: coords\n      };\n    });\n  }\n\n  return boundaryCoordinates;\n}\n\n// Function to get boundary for a specific cluster\nfunction getClusterBoundary(clusterId, boundaries, width, height, viewData) {\n  const boundaryCoordinates = getBoundaryCoordinates(boundaries, width, height, viewData);\n  return boundaryCoordinates[clusterId] || [];\n}\n\n// --- Polygon Smoothing Utilities ---\n\n// Hardcoded constants for polygon smoothing\nconst SMOOTHING_CONFIG = {\n  SIMPLIFY_TOLERANCE: 0.5,  // Tolerance for simplification (in map units)\n  SMOOTHING_ITERATIONS: 5,  // Number of smoothing iterations\n  MOVING_AVERAGE_WINDOW: 10  // Window size for moving average smoothing\n};\n\n// Function to apply moving average smoothing to polygon coordinates\nfunction smoothPolygonCoordinates(coordinates, windowSize = 3) {\n  if (coordinates.length < windowSize) {\n    return coordinates; // Too few points to smooth\n  }\n\n  const smoothed = [];\n  const halfWindow = Math.floor(windowSize / 2);\n\n  for (let i = 0; i < coordinates.length; i++) {\n    let sumX = 0;\n    let sumY = 0;\n    let count = 0;\n\n    // Calculate moving average within window\n    for (let j = Math.max(0, i - halfWindow); j <= Math.min(coordinates.length - 1, i + halfWindow); j++) {\n      sumX += coordinates[j][0];\n      sumY += coordinates[j][1];\n      count++;\n    }\n\n    smoothed.push([sumX / count, sumY / count]);\n  }\n\n  return smoothed;\n}\n\n// Function to smooth a polygon using coordinate smoothing and simplification\nfunction smoothPolygon(polygon) {\n  try {\n    const coordinates = polygon.getCoordinates()[0]; // Get exterior ring\n\n    if (coordinates.length < 4) {\n      return polygon; // Too few points to smooth\n    }\n\n    // Step 1: Apply moving average smoothing\n    let smoothedCoords = coordinates;\n    for (let i = 0; i < SMOOTHING_CONFIG.SMOOTHING_ITERATIONS; i++) {\n      smoothedCoords = smoothPolygonCoordinates(smoothedCoords, SMOOTHING_CONFIG.MOVING_AVERAGE_WINDOW);\n    }\n\n    // Step 2: Simplify the polygon to reduce vertex count\n    const tolerance = SMOOTHING_CONFIG.SIMPLIFY_TOLERANCE;\n    const simplifiedCoords = simplifyLineString(\n      smoothedCoords.flat(),\n      0,\n      smoothedCoords.flat().length,\n      2,\n      tolerance * tolerance, // squared tolerance\n      true\n    );\n\n    // Convert back to coordinate pairs\n    const finalCoords = [];\n    for (let i = 0; i < simplifiedCoords.length; i += 2) {\n      finalCoords.push([simplifiedCoords[i], simplifiedCoords[i + 1]]);\n    }\n\n    // Ensure polygon is closed\n    if (finalCoords.length > 0) {\n      const first = finalCoords[0];\n      const last = finalCoords[finalCoords.length - 1];\n      if (first[0] !== last[0] || first[1] !== last[1]) {\n        finalCoords.push(first);\n      }\n    }\n\n    // Create new polygon with smoothed coordinates\n    return new Polygon([finalCoords]);\n  } catch (error) {\n    console.warn('Error smoothing polygon:', error);\n    return polygon; // Return original if smoothing fails\n  }\n}\n\n// Function to smooth all polygons in a feature collection\nfunction smoothPolygonFeatures(features) {\n  const smoothedFeatures = [];\n\n  for (const feature of features) {\n    try {\n      const geometry = feature.getGeometry();\n      if (geometry instanceof Polygon) {\n        const smoothedGeometry = smoothPolygon(geometry);\n\n        // Create new feature with smoothed geometry\n        const smoothedFeature = new Feature({\n          geometry: smoothedGeometry,\n          clusterId: feature.get('clusterId'),\n          boundaryPixelCount: feature.get('boundaryPixelCount'),\n          smoothed: true\n        });\n\n        smoothedFeatures.push(smoothedFeature);\n      } else {\n        // Keep non-polygon features as-is\n        smoothedFeatures.push(feature);\n      }\n    } catch (error) {\n      console.warn('Error processing feature for smoothing:', error);\n      // Keep original feature if smoothing fails\n      smoothedFeatures.push(feature);\n    }\n  }\n\n  return smoothedFeatures;\n}\n\n// Global vector source for cluster boundary polygons\nconst clusterBoundarySource = new VectorSource();\n\n// Function to create polygon features from boundary coordinates\nfunction createPolygonFeatures(boundaryCoordinates) {\n  const features = [];\n\n  for (const [clusterId, boundaryPoints] of Object.entries(boundaryCoordinates)) {\n\n    if (boundaryPoints.length < 3) {\n      // console.log('Skipping cluster', clusterId, '- too few boundary points:', boundaryPoints.length);\n      continue; // Need at least 3 points for a polygon\n    }\n\n    // Extract coordinate pairs\n    const coordinates = boundaryPoints\n      .map(point => point.coordinates)\n      .filter(coord => coord !== null); // Filter out null coordinates\n\n\n    if (coordinates.length < 3) {\n      continue; // Still need at least 3 valid coordinates\n    }\n\n    // Ensure the polygon is closed\n    const firstCoord = coordinates[0];\n    const lastCoord = coordinates[coordinates.length - 1];\n    if (firstCoord[0] !== lastCoord[0] || firstCoord[1] !== lastCoord[1]) {\n      coordinates.push(firstCoord); // Close the polygon\n    }\n\n    try {\n      // Create polygon geometry - wrap in array for exterior ring\n      const polygon = new Polygon([coordinates]);\n\n      // Create feature with cluster ID as property\n      const feature = new Feature({\n        geometry: polygon,\n        clusterId: parseInt(clusterId),\n        boundaryPixelCount: boundaryPoints.length\n      });\n\n      features.push(feature);\n    } catch (error) {\n      console.warn('Error creating polygon for cluster ' + clusterId + ':', error);\n    }\n  }\n\n  return features;\n}\n\n// Function to update vector layer with new boundary polygons\nfunction updateBoundaryVectorLayer(boundaryCoordinates) {\n\n  // Clear existing features\n  clusterBoundarySource.clear();\n\n  if (!boundaryCoordinates || Object.keys(boundaryCoordinates).length === 0) {\n    console.log('No boundary coordinates to display');\n    return; // No boundaries to display\n  }\n\n  // Create new polygon features\n  const features = createPolygonFeatures(boundaryCoordinates);\n\n  if (features.length > 0) {\n    // Apply smoothing to the polygon features\n    const smoothedFeatures = smoothPolygonFeatures(features);\n\n    // Add smoothed features to vector source\n    clusterBoundarySource.addFeatures(smoothedFeatures);\n\n    console.log(`Created ${features.length} original features, ${smoothedFeatures.length} smoothed features`);\n  } else {\n    console.log('No valid polygon features created');\n  }\n}\n\nfunction clusterImage(inputs, data) {\n  const image = inputs[0];\n  const epsilon = parseFloat(data.epsilon);\n  const minPts = parseInt(data.minClusterSize) || 5;\n  const coordWeight = parseFloat(data.coordWeight) || 1.0; // Default weight for coordinates\n  const width = image.width;\n  const height = image.height;\n  const nPixels = width * height;\n\n  // Get constraint data from serialized data if available\n  const constraintData = data.constraintData || null;\n\n  // Debug clustering parameters and constraints\n  console.log(`🎯 Clustering with epsilon: ${epsilon}, minPts: ${minPts}, coordWeight: ${coordWeight}`);\n\n  if (constraintData && constraintData.constraints && constraintData.constraints.length > 0) {\n    console.log(`📏 Using ${constraintData.constraints.length} constraints for clustering`);\n  } else {\n    console.log('📏 No constraints - standard clustering');\n  }\n\n  // Always perform clustering regardless of layer visibility\n  const labels = dbscanClusterFeatures(image, epsilon, minPts, coordWeight, constraintData, data.viewData);\n\n  // Always extract cluster boundaries using Moore neighborhood tracing\n  const boundaries = extractClusterBoundaries(labels, width, height);\n\n  // Always get coordinates for all clusters\n  const clusterCoordinates = getPixelCoordinates(labels, width, height, data.viewData);\n\n  // Always get boundary coordinates with map projection\n  const boundaryCoordinates = getBoundaryCoordinates(boundaries, width, height, data.viewData);\n\n  const outputData = new Uint8ClampedArray(image.data.length);\n  const clusterColors = {};\n\n  for (let idx = 0; idx < nPixels; idx++) {\n    const label = labels[idx];\n    let color;\n    if (label === -1) {\n      color = [0, 0, 0]; // noise: black\n    } else {\n      if (!clusterColors[label]) {\n        clusterColors[label] = randomColor(label);\n      }\n      color = clusterColors[label];\n    }\n    outputData[idx * 4] = color[0];\n    outputData[idx * 4 + 1] = color[1];\n    outputData[idx * 4 + 2] = color[2];\n    outputData[idx * 4 + 3] = 255;\n  }\n\n  // Log boundary information for debugging\n  if (Object.keys(boundaries).length > 0) {\n\n    // Log boundary coordinates if available\n    if (Object.keys(boundaryCoordinates).length > 0) {\n      // Store boundary coordinates in the operation data for access in afteroperations event\n      data.boundaryCoordinates = boundaryCoordinates;\n    }\n  } else {\n    console.log('No cluster boundaries detected');\n    data.boundaryCoordinates = {};\n  }\n\n  return {\n    data: outputData,\n    width,\n    height,\n    boundaries: boundaries,\n    boundaryCoordinates: boundaryCoordinates,\n    clusterCoordinates: clusterCoordinates\n  };\n}\n\nconst key = '9eRjBwCY5UZ3jVPJXYA0';\nconst attributions =\n  '<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>';\n\nconst imagery = new TileLayer({\n  title: 'Satellite Imagery',\n  type: 'base',\n  source: new ImageTile({\n    attributions: attributions,\n    url: 'https://api.maptiler.com/maps/satellite/{z}/{x}/{y}.jpg?key=' + key,\n    tileSize: 512,\n    maxZoom: 20,\n  }),\n});\n\nconst raster = new RasterSource({\n  sources: [imagery.getSource()],\n  operationType: 'image',\n  operation: clusterImage,\n  lib: {\n    dbscanClusterFeatures: dbscanClusterFeatures,\n    randomColor: randomColor,\n    getPixelCoordinates: getPixelCoordinates,\n    getPixelCoordinate: getPixelCoordinate,\n    getClusterCoordinates: getClusterCoordinates,\n    extractClusterBoundaries: extractClusterBoundaries,\n    traceBoundary: traceBoundary,\n    getBoundaryCoordinates: getBoundaryCoordinates,\n    getClusterBoundary: getClusterBoundary,\n  },\n});\n\nconst rasterImage = new ImageLayer({\n  title: 'Clustered Regions',\n  opacity: 0.25,\n  source: raster,\n});\n\n// Create vector layer for cluster boundary polygons\nconst boundaryVectorLayer = new VectorLayer({\n  title: 'Cluster Boundaries',\n  type: 'overlay',\n  source: clusterBoundarySource,\n  style: new Style({\n    stroke: new Stroke({\n      color: '#ff0000',\n      width: 2,\n    }),\n  }),\n});\n\nconst map = new OLMap({\n  layers: [imagery, rasterImage, boundaryVectorLayer],\n  target: 'map',\n  view: new View({\n    center: fromLonLat([13.283111, 55.576662]),\n    zoom: 15,\n  }),\n});\n\n// Initialize drawing manager after map is created\nglobalDrawingManager = new DrawingManager(map, globalConstraintManager);\n\n// Load saved constraints on initialization\n// globalDrawingManager.loadSavedConstraints(); // Moved to after DOM elements are ready\n\n// Add map load event listener to ensure clustering runs after map is fully loaded\nmap.once('loadend', function() {\n  console.log('Map loaded, setting map as ready for clustering');\n  mapReady = true;\n  // Trigger initial clustering after map is loaded\n  raster.changed();\n});\n\n// Add view change listener to ensure clustering runs when view changes\nmap.getView().on('change:resolution', function() {\n  if (mapReady) {\n    console.log('Map view changed, triggering clustering update');\n    raster.changed();\n  }\n});\n\nmap.getView().on('change:center', function() {\n  if (mapReady) {\n    console.log('Map center changed, triggering clustering update');\n    raster.changed();\n  }\n});\n\n// Add layer switcher control\nconst layerSwitcher = new LayerSwitcher({\n  reverse: true,\n  groupSelectStyle: 'group'\n});\nmap.addControl(layerSwitcher);\n\n// Add drawing tools to window for testing\nwindow.drawingTools = {\n  enableCircle: () => {\n    globalDrawingManager.enableCircleDrawing();\n    updateDrawingButtonStates();\n  },\n  enableLine: () => {\n    globalDrawingManager.enableLineDrawing();\n    updateDrawingButtonStates();\n  },\n  disable: () => {\n    globalDrawingManager.disableAllDrawing();\n    updateDrawingButtonStates();\n  },\n  clear: () => {\n    globalDrawingManager.clearAllAnnotations();\n    globalConstraintManager.clearAllConstraints();\n    updateDrawingButtonStates();\n  },\n  getState: () => globalDrawingManager.getDrawingState(),\n  getConstraints: () => globalConstraintManager.getStatistics(),\n  updateButtonStates: () => updateDrawingButtonStates(),\n  saveConstraints: () => globalConstraintManager.saveConstraintsToStorage(),\n  loadConstraints: () => globalDrawingManager.loadSavedConstraints(),\n  clearStorage: () => globalConstraintManager.clearConstraintsFromStorage()\n};\n\nmap.on('click', function () {\n  if (mapReady) {\n    raster.changed();\n  }\n});\n\nconst epsilonControl = document.getElementById('epsilon');\nconst minClusterSizeControl = document.getElementById('min-cluster-size');\nconst coordWeightControl = document.getElementById('coord-weight');\nconst constraintStrengthControl = document.getElementById('constraint-strength');\n\nraster.on('beforeoperations', function (event) {\n  // Check if map is ready before proceeding\n  if (!mapReady) {\n    console.log('Map not ready yet, skipping clustering operation');\n    return; // Skip this operation if map is not ready\n  }\n\n  const data = event.data;\n  data.epsilon = epsilonControl.value;\n  data.minClusterSize = minClusterSizeControl.value;\n  data.coordWeight = parseFloat(coordWeightControl.value);\n  data.constraintStrength = parseFloat(constraintStrengthControl.value);\n\n  // Pass view data to the raster operation\n  const view = map.getView();\n  const center = view.getCenter();\n  const resolution = view.getResolution();\n  const mapSize = map.getSize();\n\n  // Validate view data before proceeding\n  if (!center || !resolution || !mapSize || mapSize[0] === 0 || mapSize[1] === 0) {\n    console.warn('View data not available, skipping clustering operation');\n    return; // Skip this operation if view data is not available\n  }\n\n  data.viewData = {\n    center: center,\n    resolution: resolution,\n    mapSize: mapSize\n  };\n\n  console.log('View data for clustering:', {\n    center: center,\n    resolution: resolution,\n    mapSize: mapSize\n  });\n\n  // Pass serialized constraint data to the raster operation\n  try {\n    const constraintData = globalConstraintManager ? globalConstraintManager.exportConstraints() : null;\n    data.constraintData = constraintData;\n  } catch (error) {\n    console.warn('Error serializing constraints for raster operation:', error);\n    data.constraintData = null;\n  }\n\n  // Always render pixels since we're using opacity for visibility\n  data.renderPixels = true;\n});\n\n// Store the latest boundary coordinates from the operation\nlet latestBoundaryCoordinates = {};\n\n// Listen for raster operation completion to update vector layer\nraster.on('afteroperations', function (event) {\n  // Check if we have boundary coordinates in the event data\n  if (event.data && event.data.boundaryCoordinates) {\n    latestBoundaryCoordinates = event.data.boundaryCoordinates;\n    updateBoundaryVectorLayer(latestBoundaryCoordinates);\n  } else {\n    console.log('No boundary coordinates in event data, clearing vector source');\n    latestBoundaryCoordinates = {};\n    clusterBoundarySource.clear();\n  }\n});\n\nfunction updateEpsilonValue() {\n  document.getElementById('epsilon-value').innerText = epsilonControl.value;\n}\n\nfunction updateMinClusterSizeValue() {\n  document.getElementById('min-cluster-size-value').innerText = minClusterSizeControl.value;\n}\n\nfunction updateCoordWeightValue() {\n  document.getElementById('coord-weight-value').innerText = coordWeightControl.value;\n}\n\nfunction updateConstraintStrengthValue() {\n  document.getElementById('constraint-strength-value').innerText = constraintStrengthControl.value;\n}\n\nupdateEpsilonValue();\nupdateMinClusterSizeValue();\nupdateCoordWeightValue();\nupdateConstraintStrengthValue();\n\nepsilonControl.addEventListener('input', function () {\n  updateEpsilonValue();\n  saveCurrentConfiguration();\n  if (mapReady) {\n    raster.changed();\n  }\n});\n\nminClusterSizeControl.addEventListener('input', function () {\n  updateMinClusterSizeValue();\n  saveCurrentConfiguration();\n  if (mapReady) {\n    raster.changed();\n  }\n});\n\ncoordWeightControl.addEventListener('input', function () {\n  updateCoordWeightValue();\n  saveCurrentConfiguration();\n  if (mapReady) {\n    raster.changed();\n  }\n});\n\nconstraintStrengthControl.addEventListener('input', function () {\n  updateConstraintStrengthValue();\n  saveCurrentConfiguration();\n  if (mapReady) {\n    raster.changed();\n  }\n});\n\n// Toggle raster layer opacity\nconst toggleRasterButton = document.getElementById('toggle-raster');\n\ntoggleRasterButton.addEventListener('click', function () {\n  if (rasterVisible) {\n    rasterImage.setOpacity(0);\n    toggleRasterButton.textContent = 'Show Raster';\n    rasterVisible = false;\n  } else {\n    rasterImage.setOpacity(0.25);\n    toggleRasterButton.textContent = 'Hide Raster';\n    rasterVisible = true;\n  }\n\n  saveCurrentConfiguration();\n});\n\n// Reset configuration button\nconst resetConfigButton = document.getElementById('reset-config');\nresetConfigButton.addEventListener('click', function () {\n  resetConfiguration();\n});\n\n// Drawing tool buttons\nconst circleToolButton = document.getElementById('circle-tool');\nconst lineToolButton = document.getElementById('line-tool');\nconst disableDrawingButton = document.getElementById('disable-drawing');\nconst clearConstraintsButton = document.getElementById('clear-constraints');\n\n// Update button active states\nfunction updateDrawingButtonStates() {\n  if (!globalDrawingManager || !circleToolButton || !lineToolButton || !disableDrawingButton) {\n    return; // Exit if elements or manager are not ready\n  }\n\n  const drawingState = globalDrawingManager.getDrawingState();\n\n  // Remove active class from all drawing buttons\n  circleToolButton.classList.remove('active');\n  lineToolButton.classList.remove('active');\n  disableDrawingButton.classList.remove('active');\n\n  // Add active class to current tool\n  if (drawingState.isEnabled) {\n    if (drawingState.currentTool === 'circle') {\n      circleToolButton.classList.add('active');\n    } else if (drawingState.currentTool === 'line') {\n      lineToolButton.classList.add('active');\n    }\n  } else {\n    disableDrawingButton.classList.add('active');\n  }\n}\n\n// Circle tool button\ncircleToolButton.addEventListener('click', function () {\n  globalDrawingManager.enableCircleDrawing();\n  updateDrawingButtonStates();\n  console.log('Circle drawing tool activated');\n});\n\n// Line tool button\nlineToolButton.addEventListener('click', function () {\n  globalDrawingManager.enableLineDrawing();\n  updateDrawingButtonStates();\n  console.log('Line drawing tool activated');\n});\n\n// Disable drawing button\ndisableDrawingButton.addEventListener('click', function () {\n  globalDrawingManager.disableAllDrawing();\n  updateDrawingButtonStates();\n  console.log('Drawing tools disabled');\n});\n\n// Clear constraints button\nclearConstraintsButton.addEventListener('click', function () {\n  const stats = globalConstraintManager.getStatistics();\n  const totalConstraints = stats.mustLinkConstraints + stats.cannotLinkConstraints;\n\n  if (totalConstraints === 0) {\n    console.log('No constraints to clear');\n    return;\n  }\n\n  globalDrawingManager.clearAllAnnotations();\n  globalConstraintManager.clearAllConstraints();\n  updateDrawingButtonStates();\n  updateConstraintTooltip();\n  console.log(`Cleared ${totalConstraints} constraints and annotations`);\n});\n\n// Update constraint button tooltip with current count\nfunction updateConstraintTooltip() {\n  // Safety check - only proceed if both the button and constraint manager exist\n  if (!clearConstraintsButton || !globalConstraintManager) {\n    console.log('updateConstraintTooltip: DOM elements or constraint manager not ready yet');\n    return;\n  }\n\n  const stats = globalConstraintManager.getStatistics();\n  const totalConstraints = stats.mustLinkConstraints + stats.cannotLinkConstraints;\n\n  if (totalConstraints === 0) {\n    clearConstraintsButton.title = 'Clear all constraints and annotations (none currently)';\n  } else {\n    clearConstraintsButton.title = `Clear all constraints and annotations (${totalConstraints} current: ${stats.mustLinkConstraints} must-link, ${stats.cannotLinkConstraints} cannot-link)`;\n  }\n}\n\n// Load saved configuration on page load (after all DOM elements are defined)\nconst savedConfig = loadConfiguration();\napplyConfiguration(savedConfig);\n\n// Initialize button states after everything is set up\nupdateDrawingButtonStates();\nupdateConstraintTooltip();\nupdateConstraintStrengthValue();\n\n// Load saved constraints after DOM elements are ready\nif (globalDrawingManager) {\n  globalDrawingManager.loadSavedConstraints();\n}\n\n// --- Search and Coordinate Functionality ---\n\n// Get DOM elements\nconst searchInput = document.getElementById('search-input');\n\n// Search history management\nconst SEARCH_HISTORY_KEY = 'fbd_search_history';\nconst MAX_HISTORY_ITEMS = 10;\n\n// Function to get search history from localStorage\nfunction getSearchHistory() {\n  try {\n    const history = localStorage.getItem(SEARCH_HISTORY_KEY);\n    return history ? JSON.parse(history) : [];\n  } catch (error) {\n    console.warn('Error reading search history from localStorage:', error);\n    return [];\n  }\n}\n\n// Function to save search history to localStorage\nfunction saveSearchHistory(history) {\n  try {\n    localStorage.setItem(SEARCH_HISTORY_KEY, JSON.stringify(history));\n  } catch (error) {\n    console.warn('Error saving search history to localStorage:', error);\n  }\n}\n\n// Function to add a new search to history\nfunction addToSearchHistory(lat, lon) {\n  const history = getSearchHistory();\n  const searchString = `${lat.toFixed(6)} ${lon.toFixed(6)}`;\n\n  // Remove if already exists (to move to top)\n  const filteredHistory = history.filter(item => item.coordinates !== searchString);\n\n  // Add to beginning of array\n  filteredHistory.unshift({\n    coordinates: searchString,\n    lat: lat,\n    lon: lon,\n    timestamp: Date.now()\n  });\n\n  // Keep only the most recent searches\n  const trimmedHistory = filteredHistory.slice(0, MAX_HISTORY_ITEMS);\n\n  saveSearchHistory(trimmedHistory);\n  return trimmedHistory;\n}\n\n// Function to create and show search suggestions dropdown\nfunction showSearchSuggestions() {\n  const history = getSearchHistory();\n\n  if (history.length === 0) {\n    // Show a message when no history exists\n    hideSearchSuggestions();\n\n    const dropdown = document.createElement('div');\n    dropdown.id = 'search-suggestions';\n    dropdown.className = 'search-suggestions';\n\n    const noHistoryMessage = document.createElement('div');\n    noHistoryMessage.className = 'search-suggestion-item';\n    noHistoryMessage.textContent = 'No search history yet';\n    noHistoryMessage.style.color = '#6c757d';\n    noHistoryMessage.style.fontStyle = 'italic';\n    noHistoryMessage.style.cursor = 'default';\n\n    dropdown.appendChild(noHistoryMessage);\n\n    const searchContainer = document.querySelector('.search-container');\n    searchContainer.appendChild(dropdown);\n\n    dropdown.style.position = 'absolute';\n    dropdown.style.top = '100%';\n    dropdown.style.left = '0';\n    dropdown.style.right = '0';\n    dropdown.style.zIndex = '1000';\n\n    return;\n  }\n\n  // Remove existing dropdown if present\n  hideSearchSuggestions();\n\n  // Create dropdown container\n  const dropdown = document.createElement('div');\n  dropdown.id = 'search-suggestions';\n  dropdown.className = 'search-suggestions';\n\n  // Add suggestions\n  history.forEach((item) => {\n    const suggestion = document.createElement('div');\n    suggestion.className = 'search-suggestion-item';\n    suggestion.textContent = item.coordinates;\n    suggestion.dataset.lat = item.lat;\n    suggestion.dataset.lon = item.lon;\n\n    // Add click handler\n    suggestion.addEventListener('click', function() {\n      const lat = parseFloat(this.dataset.lat);\n      const lon = parseFloat(this.dataset.lon);\n      navigateToCoordinates(lat, lon);\n      hideSearchSuggestions();\n    });\n\n    // Add hover effect\n    suggestion.addEventListener('mouseenter', function() {\n      this.style.backgroundColor = '#f0f0f0';\n    });\n\n    suggestion.addEventListener('mouseleave', function() {\n      this.style.backgroundColor = '';\n    });\n\n    dropdown.appendChild(suggestion);\n  });\n\n    // Position dropdown below search input\n  const searchContainer = document.querySelector('.search-container');\n  searchContainer.appendChild(dropdown);\n\n  // Position dropdown correctly - account for flexbox layout\n  dropdown.style.position = 'absolute';\n  dropdown.style.top = '100%';\n  dropdown.style.left = '0';\n  dropdown.style.right = '0';\n  dropdown.style.zIndex = '1000';\n}\n\n// Function to hide search suggestions dropdown\nfunction hideSearchSuggestions() {\n  const existingDropdown = document.getElementById('search-suggestions');\n  if (existingDropdown) {\n    existingDropdown.remove();\n  }\n}\n\n// Function to clear search history\nfunction clearSearchHistory() {\n  try {\n    localStorage.removeItem(SEARCH_HISTORY_KEY);\n    hideSearchSuggestions();\n    console.log('Search history cleared');\n  } catch (error) {\n    console.warn('Error clearing search history:', error);\n  }\n}\n\n// Function to validate coordinates\nfunction validateCoordinates(lat, lon) {\n  const latNum = parseFloat(lat);\n  const lonNum = parseFloat(lon);\n\n  if (isNaN(latNum) || isNaN(lonNum)) {\n    alert('Please enter valid numeric coordinates separated by space (e.g., 55.576662 13.283111)');\n    return false;\n  }\n\n  if (latNum < -90 || latNum > 90) {\n    alert('Latitude must be between -90 and 90 degrees.');\n    return false;\n  }\n\n  if (lonNum < -180 || lonNum > 180) {\n    alert('Longitude must be between -180 and 180 degrees.');\n    return false;\n  }\n\n  return { lat: latNum, lon: lonNum };\n}\n\n// Function to navigate to coordinates\nfunction navigateToCoordinates(lat, lon) {\n  const view = map.getView();\n  const coordinates = fromLonLat([lon, lat]);\n\n  // Animate to the new location\n  view.animate({\n    center: coordinates,\n    duration: 1000,\n    zoom: 15\n  });\n\n  // Update search input with formatted coordinates\n  searchInput.value = `${lat.toFixed(6)} ${lon.toFixed(6)}`;\n\n  // Add to search history\n  addToSearchHistory(lat, lon);\n}\n\n// Function to parse and handle coordinate input\nfunction handleCoordinateInput() {\n  const input = searchInput.value.trim();\n\n  if (!input) {\n    return; // Empty input, do nothing\n  }\n\n  // Split by space and filter out empty strings\n  const parts = input.split(/[\\s,]+/).filter(part => part.length > 0);\n\n  if (parts.length !== 2) {\n    alert('Please enter exactly two coordinates separated by space (latitude longitude)');\n    return;\n  }\n\n  const [latStr, lonStr] = parts;\n  const validatedCoords = validateCoordinates(latStr, lonStr);\n\n  if (validatedCoords) {\n    navigateToCoordinates(validatedCoords.lat, validatedCoords.lon);\n  }\n}\n\n// Event listeners for search functionality\nsearchInput.addEventListener('keypress', function(event) {\n  if (event.key === 'Enter') {\n    handleCoordinateInput();\n    hideSearchSuggestions();\n  }\n});\n\n// Show suggestions when input is focused\nsearchInput.addEventListener('focus', function() {\n  showSearchSuggestions();\n});\n\n// Hide suggestions when clicking outside\ndocument.addEventListener('click', function(event) {\n  const searchContainer = document.querySelector('.search-container');\n  const suggestions = document.getElementById('search-suggestions');\n\n  if (!searchContainer.contains(event.target) && suggestions) {\n    hideSearchSuggestions();\n  }\n});\n\n// Hide suggestions when pressing Escape\ndocument.addEventListener('keydown', function(event) {\n  if (event.key === 'Escape') {\n    // Only hide suggestions if drawing is not enabled\n    if (!globalDrawingManager || !globalDrawingManager.isDrawingEnabled) {\n      hideSearchSuggestions();\n    }\n  }\n});\n\n// Clear history button functionality\nconst clearHistoryButton = document.getElementById('clear-history');\nclearHistoryButton.addEventListener('click', function(event) {\n  event.stopPropagation(); // Prevent triggering the document click event\n  clearSearchHistory();\n});\n\n// Export functions for testing\nexport {\n  dbscanClusterFeatures,\n  extractClusterBoundaries,\n  traceBoundary,\n  getBoundaryCoordinates,\n  createPolygonFeatures,\n  smoothPolygon,\n  smoothPolygonFeatures,\n  SMOOTHING_CONFIG,\n  ConstraintManager,\n  globalConstraintManager,\n  DrawingManager,\n  globalDrawingManager\n};\n\n// Function to manually trigger clustering\nfunction triggerClustering() {\n  if (mapReady) {\n    console.log('Manually triggering clustering');\n    raster.changed();\n  } else {\n    console.log('Map not ready yet, clustering will be triggered when map loads');\n  }\n}\n\n// Function to check map ready status\nfunction isMapReady() {\n  return mapReady;\n}\n\n// Function to force map ready status (for testing)\nfunction forceMapReady() {\n  mapReady = true;\n  console.log('Forced map ready status');\n  raster.changed();\n}\n\n// Add to window for debugging\nwindow.triggerClustering = triggerClustering;\nwindow.isMapReady = isMapReady;\nwindow.mapReady = () => mapReady; // Direct access to the variable\nwindow.forceMapReady = forceMapReady;\n\n// Add constraint debugging methods\nwindow.debugConstraints = () => {\n  console.log('=== Constraint Debug Info ===');\n  console.log('Global constraint manager:', globalConstraintManager);\n  console.log('Constraint map size:', globalConstraintManager?.constraintMap?.size);\n  console.log('Constraint map keys:', Array.from(globalConstraintManager?.constraintMap?.keys() || []));\n  console.log('All constraints:', globalConstraintManager?.getAllConstraints());\n  console.log('Constraint statistics:', globalConstraintManager?.getStatistics());\n  console.log('localStorage constraint data:', localStorage.getItem(CONSTRAINT_STORAGE_KEY));\n};\n\nwindow.testConstraintSaving = () => {\n  console.log('=== Testing Constraint Saving ===');\n  if (globalConstraintManager) {\n    // Add a test constraint\n    const testConstraint = globalConstraintManager.addConstraint('must-link', [\n      {x: 100, y: 100, mapX: 100, mapY: 100},\n      {x: 101, y: 100, mapX: 101, mapY: 100}\n    ], {test: true});\n    console.log('Added test constraint:', testConstraint);\n  }\n};\n\nwindow.clearAllConstraints = () => {\n  console.log('=== Clearing All Constraints ===');\n  if (globalConstraintManager) {\n    globalConstraintManager.clearAllConstraints();\n    console.log('All constraints cleared');\n  }\n};\n\nwindow.clearConstraintsFromLocalStorage = () => {\n  console.log('=== Clearing Constraints from localStorage only ===');\n  if (globalConstraintManager) {\n    globalConstraintManager.clearConstraintsFromLocalStorageOnly();\n    console.log('Constraints cleared from localStorage only');\n  }\n};\n\nwindow.restoreAnnotations = () => {\n  console.log('=== Manually Restoring Annotations ===');\n  if (globalDrawingManager) {\n    globalDrawingManager.restoreDrawingAnnotations();\n    console.log('Annotations restored');\n  }\n};\n\nwindow.clearAnnotationsOnly = () => {\n  console.log('=== Clearing Annotations Only ===');\n  if (globalDrawingManager) {\n    globalDrawingManager.clearAllAnnotationsOnly();\n    console.log('Annotations cleared (constraints preserved)');\n  }\n};\n\nwindow.checkAnnotationState = () => {\n  console.log('=== Annotation State Check ===');\n  if (globalDrawingManager) {\n    const annotationCount = globalDrawingManager.annotationSource.getFeatures().length;\n    const constraintCount = globalConstraintManager.getAllConstraints().length;\n    console.log(`Annotations: ${annotationCount}, Constraints: ${constraintCount}`);\n\n    // List all annotations\n    const features = globalDrawingManager.annotationSource.getFeatures();\n    features.forEach((feature, index) => {\n      const constraintId = feature.get('constraintId');\n      const constraintType = feature.get('constraintType');\n      const geometry = feature.getGeometry();\n      console.log(`Annotation ${index}: ${constraintType} constraint ${constraintId}, geometry: ${geometry.getType()}`);\n    });\n  }\n};\n"],"names":["CollectionEventType","ObjectEventType","EventType","Disposable","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","found","a","b","descending","linearFindNearest","arr","target","direction","n","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","length","equals","arr1","arr2","len1","isSorted","func","strict","compare","currentVal","index","res","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","nextArgs","arrayEquals","toPromise","getter","promiseGetter","value","err","clear","object","property","isEmpty","BaseEvent","type","Target","listener","listeners","listenersForType","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","pr","listen","thisArg","once","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","len","keys","unByKey","abstract","uidCounter_","getUid","obj","ObjectEvent","oldValue","BaseObject","values","eventType","silent","source","Property","CollectionEvent","element","Collection","array","options","f","elem","prev","except","MapEvent","map","frameState","MapBrowserEvent","originalEvent","dragging","activePointers","pixel","coordinate","MapBrowserEventType","ua","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","WORKER_OFFSCREEN_CANVAS","IMAGE_DECODE","CREATE_IMAGE_BITMAP","PASSIVE_EVENT_LISTENERS","passive","PointerEventType","MapBrowserEventHandler","moveTolerance","pointerEvent","newEvent","id","pointerId","doc","MapEventType","MapProperty","TileState","assert","assertion","errorMessage","DROP","PriorityQueue","priorityFunction","keyFunction","elements","priorities","elementKey","priority","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","TileQueue","tilePriorityFunction","tileChangeCallback","added","tile","state","tileKey","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","center","deltaX","deltaY","ViewHint","ViewProperty","clamp","min","max","squaredSegmentDistance","x","y","x1","y1","x2","y2","dx","dy","t","squaredDistance","solveLinearSystem","mat","maxRow","maxEl","r","absValue","j","coef","k","l","m","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","floor","ceil","wrap","range","createExtent","extent","onlyCenter","smooth","resolution","size","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","minX","maxX","minY","maxY","ratio","none","Relationship","boundingExtent","coordinates","createEmpty","extendCoordinate","buffer","dest","clone","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","rotation","x0","y0","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","wrapX","projection","projectionExtent","worldWidth","wrapAndSliceX","multiWorld","add","delta","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","scale","coord1","coord2","distance","worldsAway","getWorldsAway","sourceExtentWidth","easeIn","easeOut","inAndOut","linear","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","warn","args","METERS_PER_UNIT","Projection","global","tileGrid","worldExtent","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","EPSG3857Projection","code","point","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","EPSG4326Projection","axisOrientation","cache","get","transforms","destination","transformFn","sourceCode","destinationCode","K0","E","E2","E3","E_P2","SQRT_E","_E","_E2","_E3","_E4","_E5","M1","M2","M3","M4","P2","P3","P4","P5","R","toLonLat","easting","northing","zone","mu","pRad","pSin","pSin2","pCos","pTan","pTan2","pTan4","epSin","epSinSqrt","c","d","d2","d3","d4","d5","d6","latitude","longitude","zoneToCentralLongitude","MIN_LATITUDE","MAX_LATITUDE","MIN_LONGITUDE","MAX_LONGITUDE","fromLonLat","latRad","latSin","latCos","latTan","latTan2","latTan4","lonRad","centralLon","centralLonRad","a2","a3","a4","a5","a6","epsgRegExes","zoneFromCode","epsgId","re","match","number","north","makeTransformFunction","transformer","coord","makeProjection","makeTransforms","transformFactories","makeUTMTransforms","projectionFactories","makeUTMProjection","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","getPointResolution","units","pointResolution","projUnits","getTransformFromProjections","vertices","width","height","metersPerUnit","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","jj","transform","equivalent","equalUnits","transformFunc","getTransformFunc","sourceTransforms","destinationTransforms","intermediateCode","composeTransformFuncs","fromSource","toDestination","t1","t2","dimensions","getTransform","sourceProjection","destinationProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","create","setFromArray","transform1","transform2","apply","compose","dx1","dy1","sx","sy","dx2","dy2","sin","cos","makeInverse","det","determinant","e","matrixPrecision","toString","fromString","cssTransform","cssTransform1","cssTransform2","mat1","mat2","transform2D","destinationStride","anchor","anchorX","anchorY","translate","tmpTransform","createTransform","tmpPoint","Geometry","revision","squaredTolerance","closestPoint","minSquaredDistance","tolerance","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","transformed","projTransform","SimpleGeometry","simplifiedGeometry","layout","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","linearRing","twiceArea","linearRings","ends","linearRingss","endss","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","simplifyLineString","highQuality","simplifiedFlatCoordinates","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","quantizeArray","quantizeMultiArray","simplifiedEndss","LinearRing","linearRingArea","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","forEach","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","inflateEnds","prevEndIndex","startOrientation","orientation","Polygon","polygon","linearRingsArea","flatCenter","fromExtent","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","result","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","DEFAULT_MIN_ZOOM","View","properties","resolutionConstraintInfo","createResolutionConstraint","centerConstraint","createCenterConstraint","resolutionConstraint","rotationConstraint","createRotationConstraint","padding","oldPadding","newPadding","offsetX","offsetY","newOptions","var_args","animationCount","animationCallback","series","animation","isNoopAnimation","now","more","seriesComplete","elapsed","fraction","progress","constrainedResolution","constrainedRotation","currentCenter","rotateCoordinate","addCoordinate","currentResolution","w","h","hints","zoom","enabled","logPower","reducedSize","calculateCenterOn","zoomFactor","nearest","_a","baseLevel","geometryOrExtent","geometry","polygonFromExtent","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","position","shiftedCenter","deltaCoordinates","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","duration","resolutionDirection","targetCenter","targetResolution","targetZoom","targetRes","returnValue","centerNone","minZoom","maxZoom","projExtent","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","constrainRotation","rotationNone","coordinatesEqual","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","fontRegExMatchIndex","fontWeights","getFontParameters","fontSpec","style","createCanvasContext2D","canvasPool","settings","canvas","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","replaceNode","newNode","oldNode","parent","removeChildren","node","replaceChildren","children","oldChildren","oldChild","newChild","Control","mapEvent","Attribution","className","tipLabel","expandClassName","collapseLabel","collapseClassName","label","activeLabel","cssClasses","layers","visibleAttributions","layer","item","collapsible","attributions","attribution","visible","collapsed","Rotate","compassClassName","button","view","contains","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","currentZoom","newZoom","defaults","controls","Kinetic","decay","minVelocity","delay","lastIndex","firstIndex","InteractionProperty","Interaction","mapBrowserEvent","active","pan","zoomByDelta","DoubleClickZoom","stopEvent","browserEvent","all","conditions","pass","altShiftKeysOnly","focus","targetElement","rootNode","activeElement","focusWithTabindex","always","mouseActionButton","never","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","PointerInteraction","handledUp","handled","centroid","pointerEvents","clientX","clientY","DragPan","condition","targetPointers","centroidFromPointers","scaleCoordinate","centerpx","DragRotate","RenderBox","startPixel","endPixel","px","DragBoxEventType","DragBoxEvent","DragBox","completeBox","DragZoom","Key","KeyboardPan","keyEvent","mapUnitsDelta","KeyboardZoom","DELTA_LINE_MULTIPLIER","DELTA_PAGE_MULTIPLIER","MouseWheelZoom","wheelEvent","timeLeft","useAnchor","PinchRotate","pointerOptions","rotationDelta","touch0","touch1","PinchZoom","scaleDelta","interactions","kinetic","LayerProperty","BaseLayer","managed","zIndex","states","background","opacity","zindex","GroupEvent","LayerGroup","baseOptions","layersArray","listenerKeys","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","layerState","RenderEventType","Layer","layerExtent","inView","getAttributions","layerRenderer","renderEvent","layerStatesArray","arrayLayerState","viewState","quickselect","left","defaultCompare","s","sd","newLeft","newRight","swap","RBush$1","maxEntries","bbox","toBBox","nodesToSearch","child","childBBox","tmpNode","createNode","equalsFn","path","indexes","goingUp","findItem","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","level","minArea","minEnlargement","targetNode","bboxArea","enlargement","enlargedArea","isNode","insertPath","splitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareMinX","compareNodeMinX","compareMinY","compareNodeMinY","xMargin","yMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","p","destNode","NO_COLOR","colorParseContext","getColorParseContext","rgbModernRegEx","rgbLegacyAbsoluteRegEx","rgbLegacyPercentageRegEx","hexRegEx","toColorComponent","divider","throwInvalidColor","color","parseRgba","rgb","alpha","rgbDivider","hex","step","colorFromHex","colorComponent","invalidCheckFillStyle","colorString","colorFromImage","asString","MAX_CACHE_SIZE","cacheSize","withAlpha","b1","v","b2","a1","rgbaToLcha","g","q","lchaToRgba","asArray","hasArea","toSize","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","isSpecific","typeName","names","namedType","includesType","broad","specific","isType","expected","LiteralExpression","CallExpression","operator","newParsingContext","parse","encoded","expectedType","colorFromString","parseCallExpression","Ops","parsers","createCallExpressionParser","hasArgsCount","withGetArgs","withVarArgs","usesFeatureId","withNoArgs","withArgsOfType","usesGeometryType","usesMapState","withArgsOfReturnType","hasEvenArgs","withMatchArgs","withInterpolateArgs","hasOddArgs","withCaseArgs","withInArgs","withPaletteArgs","returnType","argsCount","name","operation","minArgs","maxArgs","argCount","plural","expression","argType","inputType","fallback","interpolationType","base","interpolation","stop","needleType","arg","colors","parsedColors","validators","parsed","parser","computeGeometryType","newEvaluationContext","buildExpression","compileExpression","colorValue","compileAssertionExpression","compileAccessorExpression","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","compileInterpolateExpression","compileConvertExpression","op","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lcha","ImageState","ImageWrapper","pixelRatio","stateOrLoader","requestResolution","image","error","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","load","src","resolve","reject","handleLoad","unlisten","handleError","decodeFallback","IconImageCache","iconImage","crossOrigin","getCacheKey","pattern","update","maxCacheSize","shared","taintedTestContext","IconImage","imageState","ctx","onChange","cacheKey","iconImageCache","asColorLike","asCanvasPattern","iconCache","canvasPattern","patternCanvasContext","getIconImage","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureContext","measureFont","textHeights","genericFontFamilies","getFontKey","weight","family","registerFont","timeout","fontFaceSet","isAvailable","fontFaces","font","checkFamily","checkWeight","check","done","checkedFontsProperties","fonts","currentRetries","families","needCheck","measureTextHeight","measureElement","metrics","measureText","text","measureTextWidth","measureAndCacheTextWidth","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","lineHeight","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","executeLabelInstructions","contextInstructions","ImageStyle","displacement","rotateWithView","RegularShape","fill","fillKey","renderOptions","stroke","lineJoin","strokeWidth","miterLimit","r1","r2","points","miterRatio","bevelAdd","aa","bb","dd","innerMiterRatio","innerLength","lineCap","lineDash","lineDashOffset","strokeStyle","maxRadius","radius2","startAngle","angle0","radiusC","CircleStyle","Fill","patternImage","calculateScale","wantedWidth","wantedHeight","Icon","onload","imageSize","iconImageSize","Stroke","Style","defaultGeometryFunction","renderer","feature","toFunction","styleFunction","styles","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","DEFAULT_FILL_COLOR","Text","overflow","maxAngle","placement","repeat","keepUpright","textAlign","justify","textBaseline","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","nonNullCount","compiledRules","rule","filter","styleLength","someMatched","filterEvaluator","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","buildText","evaluateImage","buildImage","evaluateZIndex","numberEvaluator","empty","prefix","evaluateColor","patternEvaluator","colorLikeEvaluator","evaluateWidth","evaluateLineCap","stringEvaluator","evaluateLineJoin","evaluateLineDash","numberArrayEvaluator","evaluateLineDashOffset","evaluateMiterLimit","evaluateValue","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluateKeepUpright","evaluatePadding","declutterMode","optionalDeclutterMode","buildIcon","buildShape","buildCircle","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","anchorXUnits","optionalIconAnchorUnits","anchorYUnits","optionalColorLike","optionalString","optionalNumberArray","offsetOrigin","optionalNumber","optionalSize","icon","pointsName","radiusName","requireNumber","shape","evaluateRadius","circle","Circle","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","requireColorLike","requireNumberArray","requireSize","requireSizeLike","BaseVectorLayer","declutterGroup","RBush","renderOrder","styleLike","toStyleLike","toStyleFunction","declutter","RenderEvent","inversePixelTransform","MapRenderer","coordinateToPixelTransform","pixelToCoordinateTransform","hitTolerance","checkWrapped","layerFilter","thisArg2","forEachFeatureAtCoordinate","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","order","expireIconCache","CompositeMapRenderer","container","renderedLayerStates","previousElement","sourceState","removeLayerMapProperty","setLayerMapProperty","optionsInternal","createOptionsInternal","defaultControls","defaultInteractions","viewOptions","control","interaction","overlay","features","addLayersFrom","layerGroup","viewportPosition","scaleX","scaleY","eventPosition","applyTransform","group","viewCoordinate","currentDoc","interactionsArray","tileQueue","lowOnFrameBudget","postRenderFunctions","keyboardEventTarget","targetRoot","time","previousFrameState","viewHints","equalsExtent","oldLayerGroup","computedStyle","oldSize","overlays","ZIndexContext","__publicField","instructions","render","instructionsAtIndex","instructionAtIndex","maxStaleKeys","LayerRenderer","pixelContext","createPixelContext","CanvasLayerRenderer","col","row","backgroundColor","layerClassName","topLeft","topRight","bottomRight","bottomLeft","inverted","canvasTransform","toTransformString","CanvasImageLayerRenderer","imageLayer","viewResolution","imageSource","renderedExtent","imageExtent","imageMapWidth","imageMapHeight","imageResolution","imageResolutionX","imageResolutionY","imagePixelRatio","viewCenter","clipped","intersectsExtent","dw","dh","BaseImageLayer","ImageLayer","Tile","tileCoord","asImageLike","asArrayLike","disposedError","sharedContext","toArray","defaultSize","DataTile","imageData","self","ImageTile","tileLoadFunction","getBlankImage","TileRange","tileRange","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","calculateSourceResolution","targetProj","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","gutter","renderEdges","interpolate","drawSingle","clipExtent","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","maxSourceExtent","errorThreshold","destinationResolution","sourceMatrix","transformInvCache","transformInv","applyMatrix","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","leftBound","newTriangle","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","ERROR_THRESHOLD","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","sourceRange","srcX","srcY","renderReprojected","leftToLoad","sourceListenKey","LRUCache","highWaterMark","entry","keep","getKeyZXY","hashZXY","withinExtentAndZ","sourceKey","addTileToLookup","tilesByZ","set","existing","removeTileFromLookup","getRenderExtent","gridExtent","CanvasTileLayerRenderer","tileLayer","createTileCoord","tileCache","tileSource","tilePixelRatio","tileOrigin","tileSize","sourceRevision","initialZ","preload","wantedTiles","minZ","viewport","tileQueueKey","staleKeys","altZ","covered","frameExtent","canvasExtent","targetZ","nextExtent","renderExtent","uid","tileState","parentZ","canvasScale","zs","currentClip","clips","clipZs","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","origin","tileGutter","xIndex","nextX","yIndex","nextY","transition","contextSaved","clip","postRenderFunction","tilesCount","tileCount","alphaChanged","usedTiles","TileProperty","BaseTileLayer","useInterimTilesOnError","TileLayer","VectorContext","hitDetectionRenderer","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","fillStyle","imageStyle","declutterImageWithText","textStyle","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","CanvasBuilder","dashArray","dash","myEnd","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","skipped","lastRel","nextRel","builderEnds","builderEnd","builderBegin","builderEndss","myEnds","CanvasInstruction","hitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","endGeometryInstruction","CanvasImageBuilder","myBegin","filteredFlatCoordinates","sharedData","CanvasLineStringBuilder","moveToLineToInstruction","CanvasPolygonBuilder","numEnds","circleInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","chunkStart","chunkEnd","acos","m12","m23","x12","y12","x23","y23","TEXT_ALIGN","CanvasTextBuilder","fillState","strokeState","textState","geometryType","flatOffset","o","oo","cc","chunk","chunkBegin","geometryWidths","beg","backgroundFill","backgroundStroke","p0","p1","p2","p3","hitDetectionBackgroundFill","strokeKey","textKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textKeepUpright","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","lineStringLength","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","reverse","flat","PI","singleSegment","previousAngle","iStart","charLength","chars","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","richTextToPlainText","part","Executor","overlaps","deferredRendering","renderWidth","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","previousFont","fillStrokeArgs","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","scaledCanvasSize","imageOrLabel","box","strokePadding","alignAndScale","repeatSize","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","backgroundFillInstruction","backgroundStrokeInstruction","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","imageDeclutter","renderImage","renderText","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","ALL","DECLUTTER","NON_DECLUTTER","ExecutorGroup","allInstructions","renderBuffer","flatClipCoords","executors","instructionByZindex","candidates","declutteredFeatures","contextSize","newContext","getPixelIndexArray","idx","executor","targetContext","builderTypes","maxBuilderTypes","requireClip","deferredZIndexContexts","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","pixelIndex","CanvasImmediateRenderer","userTransform","localTransform","close","geometries","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","userExtent","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgSize","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","circleReplay","textReplay","renderFeature","replayGroup","loadingPromises","loading","renderFeatureInternal","renderGeometry","geometryRenderer","declutterBuilderGroup","lineStringReplay","polygonReplay","hasText","imageReplay","hasImage","CanvasVectorLayerRenderer","vectorLayer","executorGroup","declutterable","vectorSource","endWorld","world","getSquaredRenderTolerance","_b","animating","interacting","updateWhileAnimating","updateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","ready","dirty","replayGroupInstructions","VectorLayer","withCredentials","loadFeaturesXhr","url","format","success","failure","xhr","dataProjection","Feature","geometryOrProperties","createStyleFunction","interpolatePoint","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","m1","lineStringsCoordinateAtM","circleExtent","GeometryCollection","geometryCollection","cloneGeometries","geometriesArray","simplifiedGeometries","simplified","LineString","lineString","MultiLineString","lineStrings","multiLineString","midpoints","midpoint","MultiPoint","multiPoint","MultiPolygon","polygons","thisEndss","newEndss","multiPolygon","linearRingssArea","linearRingssCenter","prevEnds","lastEnds","RenderFeature","RBush_","extents","rbush","Source","adaptAttributions","attributionLike","VectorEventType","VectorSourceEvent","VectorSource","allStrategy","useSpatialIndex","featureKey","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","fast","featureId","clearEvent","anExtent","closestFeature","previousMinSquaredDistance","minDistance","sid","loadedExtentsRtree","extentsToLoad","extentToLoad","removed","featureChangeKeys","idString","loader","zRegEx","xRegEx","yRegEx","dashYRegEx","renderXYZTemplate","template","pickUrl","urls","hash","expandUrl","startCharCode","stopCharCode","charCode","orthographic","bottom","top","near","far","out","lr","bt","nf","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","translation","VERTEX_SHADER","FRAGMENT_SHADER","Canvas","gl","createProgram","tex","texWidth","texHeight","dstX","dstY","dstWidth","dstHeight","matrix","mat4.orthographic","mat4.translate","mat4.scale","texMatrix","mat4.translation","createShader","shader","log","fragmentSource","vertexSource","program","vertexShader","fragmentShader","EDGE_VERTEX_SHADER","EDGE_FRAGMENT_SHADER","TRIANGLE_VERTEX_SHADER","TRIANGLE_FRAGMENT_SHADER","createCanvasContextWebGL","releaseGLCanvas","canvasGLPool","width_","height_","dataType","resultFrameBuffer","resultTexture","stitchTexture","stitchWidth","stitchHeight","maxTexSize","largeSide","scaleFactor","stitchWidthFixed","stitchHeightFixed","fb","webGLCanvas","WebGLCanvas","getUVs","texcoords","triProgram","textureLocation","su0","sv0","su1","sv1","su2","sv2","matrixLocation","positionLocation","positionBuffer","texcoordLocation","texcoordBuffer","edgeProgram","burnval","burnvalLocation","lines","ReprojDataTile","sourceTileGridExtent","getTile","dataSources","imageLike","tileData","arrayData","pixelSize","isFloat","pixelCount","DataType","tileDataR","bytesPerElement","bytesPerPixel","bytesPerRow","bandCount","targetWidth","targetHeight","outWidth","outHeight","dataR","willInterpolate","textureType","BANDS_PR_REPROJ","reprojs","reproj","dataSource","dataS","texture","framebuffer","rows","cols","flipY","tmpTileCoord","DECIMALS","TileGrid","restrictedTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","tileCoordZ","tileCoordX","tileCoordY","opt_tileCoord","reverseIntersectionPolicy","createOrUpdateTileCoord","opt_direction","fullTileRanges","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","TileSource","getTileGridForProjection","scaleSize","gridProjection","TileSourceEvent","TileEventType","DataTileSource","tileSizes","thisProj","reprojTilePixelRatio","textureSize","sourceLoader","controller","loaderOptions","requestZ","requestX","requestY","projKey","tilegrid","proj","loadError","loadImage","makeLoaderFromTemplates","templates","makeLoaderFromGetter","makeLoaderFromUrlLike","keyCount","keyFromUrlLike","ImageTileSource","ImageCanvas","fromResolutionLike","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","ImageSourceEventType","ImageSourceEvent","ImageSource","requestExtent","getRequestExtent","marginWidth","requestWidth","marginHeight","requestHeight","createMinion","buffers","meta","imageOps","numBuffers","numBytes","images","arrays","pixels","createWorker","config","onMessage","worker","createFauxWorker","minion","terminated","Processor","threads","workers","inputs","job","slices","RasterEventType","RasterSourceEvent","RasterSource","createLayers","changed","getLayerStatesArray","iMax","sourceOrLayer","sourceAttributions","lib","renderedResolution","imageDatas","getImageData","createLayer","layerOrSource","factory","module","require$$0","require$$1","require$$2","this","ol_Observable","CSS_PREFIX","LayerSwitcher","opt_options","panel","render_event","_idx","ul","_changedLyr","rendercomplete_event","grp","lyrs","descendantVisibility","groupVisible","groupIndeterminate","groupSelectStyle","lastVisibleBaseLyr","lyr","_arr","filterFn","_lyr","li","lyrTitle","checkboxId","isBaseGroup","btn","rsl","elm","scrollStartPos","DrawEventType","DrawEvent","getTraceTargets","targets","appendGeometryTraceTargets","getSquaredDistance","getCoordinate","getCumulativeSquaredDistance","endIndex","lowIndex","highIndex","lowWholeIndex","highWholeIndex","interpolateCoordinate","appendTraceTarget","polys","sharedUpdateInfo","getTraceTargetUpdate","traceState","snapTolerance","closestTargetDistance","newTargetIndex","newEndIndex","targetIndex","minSegmentDistance","coordinateIndex","rel","getPointSegmentRelationship","newTarget","considerBothDirections","newCoordinate","forwardDistance","reverseDistance","ring","sharedRel","py","Draw","getMode","geometryFunction","mode","squaredLength","squaredCoordinateDistance","getDefaultStyleFunction","trace","move","lowerLeft","upperRight","previouslyForward","currentlyForward","fromIndex","toIndex","remove","updatedTraceTarget","oldTarget","tracing","startingToDraw","downPx","clickPx","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","sketchLineGeom","sketchFeature","newDrawing","ending","sketchFeatures","overlaySource","CONFIG_STORAGE_KEY","CONSTRAINT_STORAGE_KEY","DEFAULT_CONFIG","rasterVisible","mapReady","ConstraintManager","metadata","averageRGB","constraint","constraintId","constraints","constraints1","constraints2","constraintIds","updatedCount","newAvgRGB","reactivatedCount","mustLinkCount","cannotLinkCount","totalPixels","jsonData","idNum","constraintData","saved","globalConstraintManager","DrawingManager","constraintManager","updateDrawingButtonStates","updateConstraintTooltip","viewData","pixelBounds","pixelCoord","bufferDistance","distanceToLine","bufferInMapUnits","lineCoordinates","segmentStart","segmentEnd","A","B","C","D","dot","lenSq","param","xx","yy","mapSize","halfWidth","halfHeight","viewExtent","pixelX","pixelY","mapX","mapY","mapElement","message","rasterSource","imageryLayer","raster","globalDrawingManager","saveConfiguration","loadConfiguration","resetConfiguration","epsilonControl","minClusterSizeControl","coordWeightControl","constraintStrengthControl","updateEpsilonValue","updateMinClusterSizeValue","updateCoordWeightValue","updateConstraintStrengthValue","rasterImage","toggleRasterButton","applyConfiguration","saveCurrentConfiguration","dbscanClusterFeatures","epsilon","minPts","coordWeight","inputData","nPixels","visited","labels","clusterId","pixelsInView","totalR","totalG","totalB","validPixels","currentPixelCoords","mapCoordsToPixelCoords","mapWidth","mapHeight","extentWidth","extentHeight","pixelIdx","getFeatures","normalizedX","normalizedY","checkConstraints","g1","g2","rgbTolerance","avgRGB","rgbDist1","rgbDist2","pixel1Similar","pixel2Similar","checkConstraintInfluence","constraintStrength","activeConstraints","pixelSimilarity","reduction","distFeatures","idx1","idx2","constraintType","rgbDist","coordDist","baseDistance","constraintInfluence","regionQuery","neighbors","nIdx","queue","current","nbs","randomColor","seed","traceBoundary","boundary","MOORE_DIRECTIONS","isClusterPixel","neighborCount","currentX","currentY","dir","checkX","checkY","prevDirection","iterationCount","maxIterations","searchDir","extractClusterBoundaries","boundaries","processed","clusterSizes","MIN_CLUSTER_SIZE","validClusters","isBoundary","nx","ny","bx","by","getPixelCoordinates","pixelToCoord","clusterCoordinates","getPixelCoordinate","getClusterCoordinates","getBoundaryCoordinates","boundaryCoordinates","getClusterBoundary","SMOOTHING_CONFIG","smoothPolygonCoordinates","windowSize","smoothed","halfWindow","sumX","sumY","smoothPolygon","smoothedCoords","simplifiedCoords","finalCoords","smoothPolygonFeatures","smoothedFeatures","smoothedGeometry","smoothedFeature","clusterBoundarySource","createPolygonFeatures","boundaryPoints","firstCoord","lastCoord","updateBoundaryVectorLayer","clusterImage","outputData","clusterColors","imagery","boundaryVectorLayer","OLMap","layerSwitcher","latestBoundaryCoordinates","resetConfigButton","circleToolButton","lineToolButton","disableDrawingButton","clearConstraintsButton","drawingState","stats","totalConstraints","savedConfig","searchInput","SEARCH_HISTORY_KEY","MAX_HISTORY_ITEMS","getSearchHistory","history","saveSearchHistory","addToSearchHistory","lat","lon","searchString","filteredHistory","trimmedHistory","showSearchSuggestions","hideSearchSuggestions","dropdown","noHistoryMessage","suggestion","navigateToCoordinates","existingDropdown","clearSearchHistory","validateCoordinates","latNum","lonNum","handleCoordinateInput","latStr","lonStr","validatedCoords","searchContainer","suggestions","clearHistoryButton","triggerClustering","isMapReady","forceMapReady","testConstraint","annotationCount","constraintCount"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195]}